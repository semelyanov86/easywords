_type: export
__export_format: 4
__export_date: 2022-04-21T17:40:53.204Z
__export_source: insomnia.desktop.app:v2021.5.0
resources:
  - _id: req_c7133f2b5adc4fe89aec3ce336e48e1a
    parentId: fld_94fba2c064bb4516a06d09f9a85476a0
    modified: 1632458955756
    created: 1632458871702
    url: "{{ _.BASE_URL }}/best-quarter"
    name: Best Quarter
    description: >-
      Получаем список значений по справочнику "Команда квартала". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": 0,
            "key": "NONE",
            "description": "None"
          },
          {
            "value": 1,
            "key": "FIRST",
            "description": "First"
          },
          {
            "value": 2,
            "key": "SECOND",
            "description": "Second"
          },
          {
            "value": 3,
            "key": "THIRD",
            "description": "Third"
          },
          {
            "value": 4,
            "key": "FOURTH",
            "description": "Fourth"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_77c1a16009aa4ef6a4876c5b23cbe1e3
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_11e17a1c918d497a862611f6350dc62d
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1632458871702
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_94fba2c064bb4516a06d09f9a85476a0
    parentId: fld_f8cbee67818942ca8f25532790c3a02e
    modified: 1632458854060
    created: 1632458854060
    name: Offices
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1632458854060
    _type: request_group
  - _id: fld_f8cbee67818942ca8f25532790c3a02e
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1631689303860
    created: 1631689303860
    name: Enums
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1631689303861
    _type: request_group
  - _id: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    parentId: null
    modified: 1629971468922
    created: 1629971468922
    name: tsnnedv-realty
    description: >-
      Realty portal API.


      This portal uses JSON:API specification. The first thing you have to look at are the headers sent in your request and responses. As a client, you have to send your request with:

      `

      Accept: application/vnd.api+json

      `


      AND


      `

      Content-Type: application/vnd.api+json

      `


      These headers tell the server that what you are sending livews up to protocol given in the JSON:API sapecification, and also that you expect to receive data in the response that adhere to that same protocol.


      As a server, we have to deliver response with:


      `

      Content-Type: application/vnd.api+json

      `


      Structure of response:

      * data - which is the most important member that contains the primary data of the document.

      * errors - which is a member that contains all error objects.

      * included - which is a member that contains all resource objects that are related to the primary data and/or related to each other.

      * jsonapi - which is a member that contains the server's implementation of the JSON:API specification.

      * meta - which is a member that conatins all non-standard meta information


      Data and errors member never coexist in the same document.


      Resource object structures in the following way:

      ```json

      {
        "id": 1,
        "type": "user",
        "attributes": {},
        "relationships": {}
      }

      ```


      In the root of resource object you can find:


      * id - which is the id of the resource as a string

      * type - type of resource as a string,

      * attributtes - contains all attributes of resource,

      * relationships


      ### Naming Conventions


      In this project we are used to working with domains through Eloquent ORM. Domains consist of Models, which define the tables in our database that hold the data for our entire application


      Our API will give the client the data being requested and these data are most likely to be fetched from our database. Therefore, it is also very convinient to be thinking of our models as resources.


      We are used to naming our tables after what they represent in the real world and often with nouns. As an example, the data for the users of our application will most likely be stored in a users table with User domain.


      ### Attributes


      The JSON:API specification specifies that on resource object, the attributes member should be an object. Any member inside this object can be whatever data that represents the object, but must never be a relationship. For relationships, we use a dedicated member in the resource object.
    scope: collection
    _type: workspace
  - _id: req_66c3d1a0acfe46e986214d2e682478dc
    parentId: fld_94fba2c064bb4516a06d09f9a85476a0
    modified: 1632459003558
    created: 1632458981912
    url: "{{ _.BASE_URL }}/month-best"
    name: Month Best
    description: >-
      Получаем список значений по справочнику "Команда месяца". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": 0,
            "key": "NONE",
            "description": "None"
          },
          {
            "value": 1,
            "key": "JANUARY",
            "description": "January"
          },
          {
            "value": 2,
            "key": "FEBRUARY",
            "description": "February"
          },
          {
            "value": 3,
            "key": "MARCH",
            "description": "March"
          },
          {
            "value": 4,
            "key": "APRIL",
            "description": "April"
          },
          {
            "value": 5,
            "key": "MAY",
            "description": "May"
          },
          {
            "value": 6,
            "key": "JUNE",
            "description": "June"
          },
          {
            "value": 7,
            "key": "JULY",
            "description": "July"
          },
          {
            "value": 8,
            "key": "AUGUST",
            "description": "August"
          },
          {
            "value": 9,
            "key": "SEPTEMBER",
            "description": "September"
          },
          {
            "value": 10,
            "key": "OCTOBER",
            "description": "October"
          },
          {
            "value": 11,
            "key": "NOVEMBER",
            "description": "November"
          },
          {
            "value": 12,
            "key": "DECEMBER",
            "description": "December"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_77c1a16009aa4ef6a4876c5b23cbe1e3
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_11e17a1c918d497a862611f6350dc62d
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1632120228963.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2d4d081e7b1c43ce9f7b3d536f070a05
    parentId: fld_385235b896a14bdeb67270222a71ff1b
    modified: 1631774331014
    created: 1631774261343
    url: "{{ _.BASE_URL }}/partner-type"
    name: Partner Type
    description: >-
      Получаем список значений по справочнику "Тип партнёра". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "Bank",
            "key": "BANK",
            "description": "Банк"
          },
          {
            "value": "Franchize",
            "key": "FRANCHIZE",
            "description": "Франшиза"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_70e3b5409179498ea4afc2988a51f709
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_25e1ffce7af8419dbb4f719f9d92e00b
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631774261422
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_385235b896a14bdeb67270222a71ff1b
    parentId: fld_f8cbee67818942ca8f25532790c3a02e
    modified: 1631774246093
    created: 1631774246093
    name: Partnerships
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1631774246093
    _type: request_group
  - _id: req_5d7150b458bf4debb88ac43ae0fe9b02
    parentId: fld_385235b896a14bdeb67270222a71ff1b
    modified: 1631774801498
    created: 1631774775438
    url: "{{ _.BASE_URL }}/payment-type"
    name: Payment Type
    description: >-
      Получаем список значений по справочнику "Тип платежей по ипотеке".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "Difference",
            "key": "DIFFERENCE",
            "description": "Дифференцированные"
          },
          {
            "value": "Annuity",
            "key": "ANNUITY",
            "description": "Аннуитентные"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_70e3b5409179498ea4afc2988a51f709
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_25e1ffce7af8419dbb4f719f9d92e00b
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631773676394
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_6511a589736b49eb83dd7543aafaaad7
    parentId: fld_385235b896a14bdeb67270222a71ff1b
    modified: 1631774972010
    created: 1631774939357
    url: "{{ _.BASE_URL }}/product-name"
    name: Product Name
    description: >-
      Получаем список значений по справочнику "Тип ипотеки". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "standart",
            "key": "STANDART",
            "description": "Стандартный расчет"
          },
          {
            "value": "government_support",
            "key": "GOVERNMENT",
            "description": "Ипотека с господдержкой"
          },
          {
            "value": "double_documents",
            "key": "DOUBLE",
            "description": "Ипотека по двум документам"
          },
          {
            "value": "military",
            "key": "MILITARY",
            "description": "Военная ипотека"
          },
          {
            "value": "family",
            "key": "FAMILY",
            "description": "Семейная ипотека"
          },
          {
            "value": "suburb",
            "key": "SUBURB",
            "description": "Загородный дом, земля"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_70e3b5409179498ea4afc2988a51f709
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_25e1ffce7af8419dbb4f719f9d92e00b
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631773383880
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ee30c86f05364f64983007beba30cc99
    parentId: fld_95216b2861fe4db0b4b71c788875671a
    modified: 1631771265635
    created: 1631771190595
    url: "{{ _.BASE_URL }}/computer-level"
    name: Computer Level
    description: >-
      Получаем список значений по справочнику "Уровень знания компьютера".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": 0,
            "key": "BASIC",
            "description": "Базовый"
          },
          {
            "value": 1,
            "key": "MEDIUM",
            "description": "Средний"
          },
          {
            "value": 2,
            "key": "PROFESSIONAL",
            "description": "Профессиональный"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_b69187022630444eb717606f3f7bf2f0
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_d858a605a34d4ac5a70e947904b2a3bc
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631771190595
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_95216b2861fe4db0b4b71c788875671a
    parentId: fld_f8cbee67818942ca8f25532790c3a02e
    modified: 1631770859950
    created: 1631770859950
    name: Candidates
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1631770859950
    _type: request_group
  - _id: req_24a2cff8a53142d88cbb3197fdcf403d
    parentId: fld_95216b2861fe4db0b4b71c788875671a
    modified: 1631771415789
    created: 1631771389216
    url: "{{ _.BASE_URL }}/education-level"
    name: Education Level
    description: >-
      Получаем список значений по справочнику "Уровень образования".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "Early childhood",
            "key": "EARLY_CHILDHOOD",
            "description": "Early childhood"
          },
          {
            "value": "Primary",
            "key": "PRIMARY",
            "description": "Primary"
          },
          {
            "value": "Lower secondary",
            "key": "LOWER_SECONDARY",
            "description": "Lower secondary"
          },
          {
            "value": "Upper secondary",
            "key": "UPPER_SECONDARY",
            "description": "Upper secondary"
          },
          {
            "value": "Post-secondary",
            "key": "POST_SECONDARY",
            "description": "Post-secondary non-tertiary"
          },
          {
            "value": "Short-cycle",
            "key": "SHORT_CYCLE",
            "description": "Short-cycle tertiary"
          },
          {
            "value": "Bachelor",
            "key": "BACHELOR",
            "description": "Bachelor's or equivalent"
          },
          {
            "value": "Master",
            "key": "MASTER",
            "description": "Master's or equivalent"
          },
          {
            "value": "Doctoral",
            "key": "DOCTORAL",
            "description": "Doctoral or equivalent"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_b69187022630444eb717606f3f7bf2f0
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_d858a605a34d4ac5a70e947904b2a3bc
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631730256703.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_8cdc475bedcc46de9553737ce96ffb00
    parentId: fld_95216b2861fe4db0b4b71c788875671a
    modified: 1631771587827
    created: 1631771561606
    url: "{{ _.BASE_URL }}/marital-status"
    name: Marital Status
    description: >-
      Получаем список значений по справочнику "Семейное положение". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "Married",
            "key": "MARRIED",
            "description": "Замужем\/Жунат"
          },
          {
            "value": "Widowed",
            "key": "WIDOWED",
            "description": "Вдовец"
          },
          {
            "value": "Separated",
            "key": "SEPARATED",
            "description": "Гражданский брак"
          },
          {
            "value": "Divorced",
            "key": "DIVORCED",
            "description": "В разводе"
          },
          {
            "value": "Single",
            "key": "SINGLE",
            "description": "Холост"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_b69187022630444eb717606f3f7bf2f0
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_d858a605a34d4ac5a70e947904b2a3bc
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631709789757.75
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_257a329da45c4c629ee53f11e2213b55
    parentId: fld_95216b2861fe4db0b4b71c788875671a
    modified: 1631771772436
    created: 1631771743423
    url: "{{ _.BASE_URL }}/candidates-status"
    name: Candidates Status
    description: >-
      Получаем список значений по справочнику "Статус обработки кандидата".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "Open",
            "key": "OPEN",
            "description": "Открыт"
          },
          {
            "value": "Processing",
            "key": "PROCESSING",
            "description": "В обработке"
          },
          {
            "value": "Closed",
            "key": "CLOSED",
            "description": "Закрыт"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_b69187022630444eb717606f3f7bf2f0
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_d858a605a34d4ac5a70e947904b2a3bc
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631699556284.875
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_6bec8c5358214c89a2cf2992232436f4
    parentId: fld_95216b2861fe4db0b4b71c788875671a
    modified: 1631772041045
    created: 1631772018112
    url: "{{ _.BASE_URL }}/study-type"
    name: Study Type
    description: >-
      Получаем список значений по справочнику "Тип образования". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "online",
            "key": "ONLINE",
            "description": "Онлайн"
          },
          {
            "value": "ochnaya",
            "key": "OCHNAYA",
            "description": "Очная"
          },
          {
            "value": "zaochnaya",
            "key": "ZAOCHNAYA",
            "description": "Заочная"
          },
          {
            "value": "ochno-zaochnaya",
            "key": "OCHNO_ZAOCHNAYA",
            "description": "Очно-заочная"
          },
          {
            "value": "vechernaya-ochnaya",
            "key": "VECHERNAYA_OCHNAYA",
            "description": "Вечерняя очная"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_b69187022630444eb717606f3f7bf2f0
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_d858a605a34d4ac5a70e947904b2a3bc
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631694439548.4375
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c35f8fbc1c7244b08b5235d4a49e319d
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631689939463
    created: 1631689322812
    url: "{{ _.BASE_URL }}/access-select"
    name: Access Select
    description: >-
      Получаем список значений по справочнику "Тип доступа в помещение".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "free",
            "key": "FREE",
            "description": "Свободный"
          },
          {
            "value": "restricted",
            "key": "RESTRICTED",
            "description": "Пропускная система"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631689322812
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_b490bc772e4748c48e3ab4d3759a9e3a
    parentId: fld_f8cbee67818942ca8f25532790c3a02e
    modified: 1631689310354
    created: 1631689310354
    name: Immovables
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1631689310354
    _type: request_group
  - _id: req_7288f59ef8fb47ce88125da4a52b7cb6
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631689983742
    created: 1631689877150
    url: "{{ _.BASE_URL }}/building-class"
    name: Building Class
    description: |-
      Список значений для справочника "Класс здания". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "A",
            "key": "A",
            "description": "A"
          },
          {
            "value": "A+",
            "key": "A_PLUS",
            "description": "A+"
          },
          {
            "value": "B",
            "key": "B",
            "description": "B"
          },
          {
            "value": "B+",
            "key": "B_PLUS",
            "description": "B+"
          },
          {
            "value": "C",
            "key": "C",
            "description": "C"
          },
          {
            "value": "C+",
            "key": "C_PLUS",
            "description": "C+"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631218988845
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_4fa52e346a694341b652ddcc6d2614cf
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631690187856
    created: 1631690158713
    url: "{{ _.BASE_URL }}/building-type"
    name: Building Type
    description: |-
      Список значений для справочника "Тип здания". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "businesss_center",
            "key": "BUSINESS_CENTER",
            "description": "Бизнес Центр"
          },
          {
            "value": "storage_room",
            "key": "STORAGE_ROOM",
            "description": "Складское помещение"
          },
          {
            "value": "trade_center",
            "key": "TRADE_CENTER",
            "description": "Торговый центр"
          },
          {
            "value": "separate_building",
            "key": "SEPARATE_BUILDING",
            "description": "Отдельное здание"
          },
          {
            "value": "street_retail",
            "key": "STREET_RETAIL",
            "description": "Street Retail"
          },
          {
            "value": "living_house",
            "key": "LIVING_HOUSE",
            "description": "Жилой дом"
          },
          {
            "value": "homestead",
            "key": "HOMESTEAD",
            "description": "Особняк"
          },
          {
            "value": "hotel",
            "key": "HOTEL",
            "description": "Гостиница"
          },
          {
            "value": "no_building",
            "key": "NO_BUILDING",
            "description": "Без здания"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630983821861.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_629ad1bc28c04e5ab19e41310326ee08
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631690660593
    created: 1631690626529
    url: "{{ _.BASE_URL }}/commercial-condition"
    name: Commercial Condition
    description: >-
      Список значений для справочника "Состояние коммерческой недвижимости".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "shell_core",
            "key": "SHELL_CORE",
            "description": "Shell&Core"
          },
          {
            "value": "smoothing",
            "key": "SMOOTHING",
            "description": "Под отделку"
          },
          {
            "value": "ready_to_enter",
            "key": "READY_TO_ENTER",
            "description": "Готовое к въезду"
          },
          {
            "value": "construction",
            "key": "CONSTRUCTION",
            "description": "Постройка"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630866238369.75
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ae46bad182c54caf97958baf65c52af7
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631691409802
    created: 1631691258438
    url: "{{ _.BASE_URL }}/commercial-type"
    name: Commercial Type
    description: >-
      Список значений для справочника "Типы коммерческой недвижимости".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "Автомойка",
            "key": "AUTOMOIKA",
            "description": "Automoika"
          },
          {
            "value": "Автосервис",
            "key": "AUTOSERVICE",
            "description": "Autoservice"
          },
          {
            "value": "Ателье",
            "key": "ATELYE",
            "description": "Atelye"
          },
          {
            "value": "База отдыха\/Лагерь",
            "key": "LAGER",
            "description": "Lager"
          },
          {
            "value": "Банк",
            "key": "BANK",
            "description": "Bank"
          },
          {
            "value": "Бизнес-Центр",
            "key": "BUSINESS_CENTER",
            "description": "Business center"
          },
          {
            "value": "Гаражный комплекс",
            "key": "GARAGE",
            "description": "Garage"
          },
          {
            "value": "Гостиница",
            "key": "HOTEL",
            "description": "Hotel"
          },
          {
            "value": "Инвестиционный проект",
            "key": "INVESTMENT_PROJECT",
            "description": "Investment project"
          },
          {
            "value": "Магазин",
            "key": "SHOP",
            "description": "Shop"
          },
          {
            "value": "Медцентр",
            "key": "MEDCENTER",
            "description": "Medcenter"
          },
          {
            "value": "ОСЗ",
            "key": "OCZ",
            "description": "Ocz"
          },
          {
            "value": "Офис",
            "key": "OFFICE",
            "description": "Office"
          },
          {
            "value": "Офисное здание",
            "key": "OFFICE_BUILDING",
            "description": "Office building"
          },
          {
            "value": "ПСН",
            "key": "PSN",
            "description": "Psn"
          },
          {
            "value": "Парикмахерская",
            "key": "PARIK",
            "description": "Parik"
          },
          {
            "value": "Предприятие питания",
            "key": "PITANIE",
            "description": "Pitanie"
          },
          {
            "value": "Производственно-промышленное помещение",
            "key": "PPP",
            "description": "Ppp"
          },
          {
            "value": "Промышленные земли",
            "key": "PROM_LAND",
            "description": "Prom land"
          },
          {
            "value": "Ресторан",
            "key": "RESTAURANT",
            "description": "Restaurant"
          },
          {
            "value": "Сельхоз земли",
            "key": "AGRO_LAND",
            "description": "Agro land"
          },
          {
            "value": "Склад",
            "key": "SKLAD",
            "description": "Sklad"
          },
          {
            "value": "Стоматология",
            "key": "STOMATOLOGIA",
            "description": "Stomatologia"
          },
          {
            "value": "Торговая площадь",
            "key": "TRADE_LAND",
            "description": "Trade land"
          },
          {
            "value": "Торговый центр",
            "key": "TRADE_CENTER",
            "description": "Trade center"
          },
          {
            "value": "Турфирма",
            "key": "TOURFIRMA",
            "description": "Tourfirma"
          },
          {
            "value": "Учебное помещение",
            "key": "STUDY_BUILDINF",
            "description": "Study buildinf"
          },
          {
            "value": "Фотоателье",
            "key": "FOTOATELYE",
            "description": "Fotoatelye"
          },
          {
            "value": "Химчистка",
            "key": "HIMCHISTKA",
            "description": "Himchistka"
          },
          {
            "value": "Банный комплекс",
            "key": "BANYA",
            "description": "Banya"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630807446623.875
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c1d34742882e4fd1ae9bdbf4bf2ea0dc
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631691548359
    created: 1631691506328
    url: "{{ _.BASE_URL }}/condition-select"
    name: Condition Select
    description: >-
      Список значений для справочника "Состояние объектов недвижимости".
      Возвращаемый результат:


      ```json

      {
        "data": [
          {
            "value": "Автомойка",
            "key": "AUTOMOIKA",
            "description": "Automoika"
          },
          {
            "value": "Автосервис",
            "key": "AUTOSERVICE",
            "description": "Autoservice"
          },
          {
            "value": "Ателье",
            "key": "ATELYE",
            "description": "Atelye"
          },
          {
            "value": "База отдыха\/Лагерь",
            "key": "LAGER",
            "description": "Lager"
          },
          {
            "value": "Банк",
            "key": "BANK",
            "description": "Bank"
          },
          {
            "value": "Бизнес-Центр",
            "key": "BUSINESS_CENTER",
            "description": "Business center"
          },
          {
            "value": "Гаражный комплекс",
            "key": "GARAGE",
            "description": "Garage"
          },
          {
            "value": "Гостиница",
            "key": "HOTEL",
            "description": "Hotel"
          },
          {
            "value": "Инвестиционный проект",
            "key": "INVESTMENT_PROJECT",
            "description": "Investment project"
          },
          {
            "value": "Магазин",
            "key": "SHOP",
            "description": "Shop"
          },
          {
            "value": "Медцентр",
            "key": "MEDCENTER",
            "description": "Medcenter"
          },
          {
            "value": "ОСЗ",
            "key": "OCZ",
            "description": "Ocz"
          },
          {
            "value": "Офис",
            "key": "OFFICE",
            "description": "Office"
          },
          {
            "value": "Офисное здание",
            "key": "OFFICE_BUILDING",
            "description": "Office building"
          },
          {
            "value": "ПСН",
            "key": "PSN",
            "description": "Psn"
          },
          {
            "value": "Парикмахерская",
            "key": "PARIK",
            "description": "Parik"
          },
          {
            "value": "Предприятие питания",
            "key": "PITANIE",
            "description": "Pitanie"
          },
          {
            "value": "Производственно-промышленное помещение",
            "key": "PPP",
            "description": "Ppp"
          },
          {
            "value": "Промышленные земли",
            "key": "PROM_LAND",
            "description": "Prom land"
          },
          {
            "value": "Ресторан",
            "key": "RESTAURANT",
            "description": "Restaurant"
          },
          {
            "value": "Сельхоз земли",
            "key": "AGRO_LAND",
            "description": "Agro land"
          },
          {
            "value": "Склад",
            "key": "SKLAD",
            "description": "Sklad"
          },
          {
            "value": "Стоматология",
            "key": "STOMATOLOGIA",
            "description": "Stomatologia"
          },
          {
            "value": "Торговая площадь",
            "key": "TRADE_LAND",
            "description": "Trade land"
          },
          {
            "value": "Торговый центр",
            "key": "TRADE_CENTER",
            "description": "Trade center"
          },
          {
            "value": "Турфирма",
            "key": "TOURFIRMA",
            "description": "Tourfirma"
          },
          {
            "value": "Учебное помещение",
            "key": "STUDY_BUILDINF",
            "description": "Study buildinf"
          },
          {
            "value": "Фотоателье",
            "key": "FOTOATELYE",
            "description": "Fotoatelye"
          },
          {
            "value": "Химчистка",
            "key": "HIMCHISTKA",
            "description": "Himchistka"
          },
          {
            "value": "Банный комплекс",
            "key": "BANYA",
            "description": "Banya"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630778050750.9375
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_058074f503c74191a8e4d0a504d6e70b
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631691800756
    created: 1631691773227
    url: "{{ _.BASE_URL }}/discount-type"
    name: Discount Type
    description: |-
      Список значений для справочника "Типы скидок". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "percent",
            "key": "PERCENT",
            "description": "В процентах"
          },
          {
            "value": "money",
            "key": "MONEY",
            "description": "В деньгах"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630763352814.4688
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e4a6308f86444153bbb36ab57dd6e342
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631692018962
    created: 1631691970619
    url: "{{ _.BASE_URL }}/garage-status"
    name: Garage Status
    description: >-
      Список значений для справочника "Правовой статус гаража". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "In property",
            "key": "IN_PROPERTY",
            "description": "Собственность"
          },
          {
            "value": "Cooperative",
            "key": "COOP",
            "description": "Кооператив"
          },
          {
            "value": "Doverennost",
            "key": "DOV",
            "description": "По доверенности"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630756003846.2344
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0f98978131364e95afc380ddc153c83c
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631693475494
    created: 1631693447015
    url: "{{ _.BASE_URL }}/home-type"
    name: Home Type
    description: |-
      Список значений для справочника "Типы домов". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "default",
            "key": "DEFAULT",
            "description": "Default"
          },
          {
            "value": "tauhnouse",
            "key": "TAUNHOUSE",
            "description": "Taunhouse"
          },
          {
            "value": "parthouse",
            "key": "PARTHOUSE",
            "description": "Parthouse"
          },
          {
            "value": "land",
            "key": "LAND",
            "description": "Land"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630752329362.1172
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_af273709ac2b4cc0b755f67f08a7c2f8
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631693890429
    created: 1631693861390
    url: "{{ _.BASE_URL }}/house-type"
    name: House Type
    description: |-
      Список значений для справочника "Тип строения". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "brick",
            "key": "BRICK",
            "description": "Кирпичный"
          },
          {
            "value": "monolith",
            "key": "MONOLITH",
            "description": "Монолитный"
          },
          {
            "value": "wood",
            "key": "WOOD",
            "description": "Деревянный"
          },
          {
            "value": "panel",
            "key": "PANEL",
            "description": "Панельный"
          },
          {
            "value": "block",
            "key": "BLOCK",
            "description": "Блочный"
          },
          {
            "value": "stone",
            "key": "STONE",
            "description": "Каменный"
          },
          {
            "value": "monolith-karkas",
            "key": "MONOLITH_KARKAS",
            "description": "Монолитно-каркасный"
          },
          {
            "value": "monolith-panel",
            "key": "MONOLITH_PANEL",
            "description": "Монолитно-панельный"
          },
          {
            "value": "monolith-brick",
            "key": "MONOLITH_BRICK",
            "description": "Монолитно-кирпичный"
          },
          {
            "value": "karkas-module",
            "key": "KARKAS_MODULE",
            "description": "Каркасно-модульный"
          },
          {
            "value": "panel-brick",
            "key": "PANEL_BRICK",
            "description": "Панельно-кирпичный"
          },
          {
            "value": "block-cast",
            "key": "BLOCK_CAST",
            "description": "Блочно-литой"
          },
          {
            "value": "monolith-block",
            "key": "MONOLITH_BLOCK",
            "description": "Монолитно-блочный"
          },
          {
            "value": "penoblock",
            "key": "PENOBLOCK",
            "description": "Пеноблоки"
          },
          {
            "value": "sandwitch-panels",
            "key": "SANDWICH_PANELS",
            "description": "Сендвич панели"
          },
          {
            "value": "gazoblocks",
            "key": "GAZOBLOCKS",
            "description": "Газоблоки"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630751410741.088
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_dfedca6aaf6e4c4c8cda0023fc7530d2
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631693694821
    created: 1631693653562
    url: "{{ _.BASE_URL }}/house-direction"
    name: House Direction
    description: >-
      Список значений для справочника "Направление шоссе". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "Алтуфьевское",
            "key": "ALTUFYEV",
            "description": "Altufyev"
          },
          {
            "value": "Боровское",
            "key": "BOROVSKOE",
            "description": "Borovskoe"
          },
          {
            "value": "Варшавское",
            "key": "VARSHAVSKOE",
            "description": "Varshavskoe"
          },
          {
            "value": "Волоколамское",
            "key": "VOLOKOLAMSKOE",
            "description": "Volokolamskoe"
          },
          {
            "value": "Горьковское",
            "key": "GORKOVSKOE",
            "description": "Gorkovskoe"
          },
          {
            "value": "Дмитровское",
            "key": "DMITROVSKOE",
            "description": "Dmitrovskoe"
          },
          {
            "value": "Егорьевское",
            "key": "EGORYEVSKOE",
            "description": "Egoryevskoe"
          },
          {
            "value": "Заневский проспект",
            "key": "ZANEVSKIY",
            "description": "Zanevskiy"
          },
          {
            "value": "Калужское",
            "key": "KALUZHSKOE",
            "description": "Kaluzhskoe"
          },
          {
            "value": "Каширское",
            "key": "KASHIRSKOE",
            "description": "Kashirskoe"
          },
          {
            "value": "Киевское",
            "key": "KIEVSKOE",
            "description": "Kievskoe"
          },
          {
            "value": "Косинское",
            "key": "KOSINSKOE",
            "description": "Kosinskoe"
          },
          {
            "value": "Кутузовский проспект",
            "key": "KUTUZOVSKIY",
            "description": "Kutuzovskiy"
          },
          {
            "value": "Ленинградское",
            "key": "LENINGRADSKOE",
            "description": "Leningradskoe"
          },
          {
            "value": "Ленинский проспект",
            "key": "LENINSKIY",
            "description": "Leninskiy"
          },
          {
            "value": "Минское",
            "key": "MINSKOE",
            "description": "Minskoe"
          },
          {
            "value": "Можайское",
            "key": "MOZHAISKOE",
            "description": "Mozhaiskoe"
          },
          {
            "value": "Монинское",
            "key": "MONINSKOE",
            "description": "Moninskoe"
          },
          {
            "value": "Новорижское",
            "key": "NOVORIZHSKOE",
            "description": "Novorizhskoe"
          },
          {
            "value": "Новорязанское",
            "key": "NOVORYAZANSKOE",
            "description": "Novoryazanskoe"
          },
          {
            "value": "Носовихинское",
            "key": "NOSOVIHINSKOE",
            "description": "Nosovihinskoe"
          },
          {
            "value": "Остафьевское",
            "key": "OSTAFYEVSKOE",
            "description": "Ostafyevskoe"
          },
          {
            "value": "Осташковское",
            "key": "OSTASHKOVSKOE",
            "description": "Ostashkovskoe"
          },
          {
            "value": "Проспект Маршала Жукова",
            "key": "ZHOKOVA",
            "description": "Zhokova"
          },
          {
            "value": "Проспект Мира",
            "key": "PROSPEKT_MIRA",
            "description": "Prospekt mira"
          },
          {
            "value": "Пятницкое",
            "key": "PYATHICKOE",
            "description": "Pyathickoe"
          },
          {
            "value": "Рублёвское",
            "key": "RUBLYOVSKOE",
            "description": "Rublyovskoe"
          },
          {
            "value": "Рязанское",
            "key": "RYAZANSKOE",
            "description": "Ryazanskoe"
          },
          {
            "value": "Симферопольское",
            "key": "SIMFEROPOLSKOE",
            "description": "Simferopolskoe"
          },
          {
            "value": "Фряновское",
            "key": "FRYANOVSKOE",
            "description": "Fryanovskoe"
          },
          {
            "value": "Щелковское",
            "key": "SHELKOVSKOE",
            "description": "Shelkovskoe"
          },
          {
            "value": "Ярославское",
            "key": "YAROSLAVSKOE",
            "description": "Yaroslavskoe"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630750492120.0586
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3b1e0687edf44023a8f06f3460d91b82
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631694315071
    created: 1631694285253
    url: "{{ _.BASE_URL }}/immovable-status"
    name: Immovable Status
    description: >-
      Список значений для справочника "Статус объявления". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "Open",
            "key": "OPEN",
            "description": "Новое"
          },
          {
            "value": "Processing",
            "key": "PROCESSING",
            "description": "В работе"
          },
          {
            "value": "Accepted",
            "key": "ACCEPTED",
            "description": "Договор"
          },
          {
            "value": "Closed",
            "key": "CLOSED",
            "description": "Продано"
          },
          {
            "value": "Prepayment",
            "key": "PREPAYMENT",
            "description": "Аванс"
          },
          {
            "value": "Stopped",
            "key": "STOPPED",
            "description": "Приостановлено"
          },
          {
            "value": "Registering",
            "key": "REGISTERING",
            "description": "На регистрации"
          },
          {
            "value": "Archive",
            "key": "ARCHIVE",
            "description": "Архив"
          },
          {
            "value": "Refused",
            "key": "REFUSED",
            "description": "Отказ"
          },
          {
            "value": "Trashed",
            "key": "TRASHED",
            "description": "Корзина"
          },
          {
            "value": "Lead",
            "key": "LEAD",
            "description": "Маячки"
          },
          {
            "value": "Network",
            "key": "NETWORK",
            "description": "Сетевик"
          },
          {
            "value": "Premium",
            "key": "PREMIUM",
            "description": "VIP"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630749573499.0293
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_7c7c7808201b4afa8981398f36674782
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631694577365
    created: 1631694549665
    url: "{{ _.BASE_URL }}/land-type"
    name: Land Type
    description: |-
      Список значений для справочника "Тип земли". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "izhs",
            "key": "IZHS",
            "description": "ИЖС"
          },
          {
            "value": "sad",
            "key": "SAD",
            "description": "Садовый"
          },
          {
            "value": "farm",
            "key": "FARM",
            "description": "Фермерский"
          },
          {
            "value": "lph",
            "key": "LPH",
            "description": "Личное подсобное хозяйство"
          },
          {
            "value": "prom",
            "key": "PROM",
            "description": "Земля промназначения"
          },
          {
            "value": "dnp",
            "key": "DNP",
            "description": "ДНП"
          },
          {
            "value": "investproekt",
            "key": "INVESTPROEKT",
            "description": "Инвестпроект"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630749114188.5146
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_7452d6e473ee4c7dafb25785a0f8289c
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631694892948
    created: 1631694865001
    url: "{{ _.BASE_URL }}/model-name"
    name: Model Name
    description: >-
      Список значений для справочника "Тип объекта недвижимости". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "Appartment",
            "key": "APPARTMENT",
            "description": "Жилая недвижимость"
          },
          {
            "value": "Commercial",
            "key": "COMMERCIAL",
            "description": "Коммерческая недвижимость"
          },
          {
            "value": "CommercialLand",
            "key": "COMMERCIAL_LAND",
            "description": "Коммерческие участки"
          },
          {
            "value": "Garage",
            "key": "GARAGE",
            "description": "Гаражи"
          },
          {
            "value": "House",
            "key": "HOUSE",
            "description": "Дома"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630748884533.2573
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f176779c55ba49b9966fb5c4d4bce0f1
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631695902070
    created: 1631695873297
    url: "{{ _.BASE_URL }}/rent-type"
    name: Rent Type
    description: |-
      Список значений для справочника "Тип аренды". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "Direct",
            "key": "DIRECT",
            "description": "Прямая"
          },
          {
            "value": "Subrent",
            "key": "SUBRENT",
            "description": "Субаренда"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630748769705.6287
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0167ec766f164d3bb5378757ac974e2b
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631696027770
    created: 1631696000232
    url: "{{ _.BASE_URL }}/repair-type"
    name: Repair Type
    description: |-
      Список значений для справочника "Вид ремонта". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "cosmetic",
            "key": "COSMETIC",
            "description": "Косметический"
          },
          {
            "value": "euro",
            "key": "EURO",
            "description": "Евро"
          },
          {
            "value": "design",
            "key": "DESIGN",
            "description": "Дизайнерский"
          },
          {
            "value": "no-repair",
            "key": "NO_REPAIR",
            "description": "Без ремонта"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630748712291.8145
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_69c5468fe5d14e71ab61087f5c8a5904
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631696174140
    created: 1631696145260
    url: "{{ _.BASE_URL }}/sale-type"
    name: Sale Type
    description: |-
      Список значений для справочника "Тип продажи". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "free",
            "key": "FREE",
            "description": "Свободная продажа"
          },
          {
            "value": "alternate",
            "key": "ALTERNATE",
            "description": "Альтернативная продажа"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630748683584.9072
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_7ffb2b8141a14a2c9464d303bd1e6f21
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631696360203
    created: 1631696337809
    url: "{{ _.BASE_URL }}/sanuzel-select"
    name: Sanuzel Select
    description: |-
      Список значений для справочника "Тип санузла". Возвращаемый результат:

      ```json
      {
        "data": [
          {
            "value": "integrated",
            "key": "INTEGRATED",
            "description": "Совмещённый"
          },
          {
            "value": "divided",
            "key": "DIVIDED",
            "description": "Раздельный"
          },
          {
            "value": "multiple",
            "key": "MULTIPLE",
            "description": "Более одного"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630748669231.4536
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_cd2b665250bb44db9b58bff6ed4a6ac3
    parentId: fld_b490bc772e4748c48e3ab4d3759a9e3a
    modified: 1631696492317
    created: 1631696467469
    url: "{{ _.BASE_URL }}/tax-type"
    name: Tax Type
    description: >-
      Список значений для справочника "Тип налогообложения". Возвращаемый
      результат:


      ```json

      {
        "data": [
          {
            "value": "USN",
            "key": "USN",
            "description": "УСН"
          },
          {
            "value": "NDS",
            "key": "NDS",
            "description": "НДС"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_34a33836d4b14de49be08b1c142d5a3f
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b7ccd037092d49b9b407f1dd0deaf31a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1630748662054.7268
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_8b48057f5c4c4130a7b03906f1315843
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469158
    created: 1629971469158
    url: "{{ _.BASE_URL }}/immovables"
    name: test Immovables
    description: ""
    method: GET
    body: {}
    parameters:
      - id: pair_2f8448064687474fb5165bba14590f5d
        name: ""
        value: ""
        description: ""
      - name: include
        value: employee
        id: pair_70d881cd304e4e60949ddf02e3fc2279
      - name: page[size]
        value: "10"
        id: pair_79a527199c6c4546a595e7c52b707cde
      - name: page[number]
        value: "1"
        id: pair_6005ffe6bfba427684f21fb2d858ff56
      - name: filter[is_rent]
        value: "false"
        id: pair_dc75b55a04f24f21ad8c88e94459c07c
      - name: filter[appartment.rooms]
        value: 1,2
        id: pair_85542af7bc0d48babdde518dd4b41767
        disabled: false
      - name: filter[price][]
        value: "100000000"
        id: pair_42888c95fdd847e3b523d360630be8df
      - name: filter[price][]
        value: "1000000000"
        id: pair_d5dff54e996e443a823d33589650512b
      - name: filter[total_space][]
        value: "1"
        id: pair_7c28b812ddb94b77b3ef64caa0854f61
      - name: filter[total_space][]
        value: "100"
        id: pair_59a1c456260d4dd695d9d7a60ac8dd11
      - name: filter[appartment.kitchen_space][]
        value: "1"
        id: pair_f2f730d0981340a1b6ea57e65a647428
        disabled: false
      - name: filter[appartment.kitchen_space][]
        value: "100"
        id: pair_c801fabc8c91484f8c0a35c676dbd6b0
        disabled: false
      - name: filter[appartment.floor][]
        value: "1"
        id: pair_adf9771c63ae4dc1b4423f226337ca6b
        disabled: false
      - name: filter[appartment.floor][]
        value: "10"
        id: pair_351cdb7231da46e39835c6131915e309
        disabled: false
      - name: filter[appartment.floors_total][]
        value: "1"
        id: pair_8a68dd23ff2c4a508f0b9ed37b3fcd6e
      - name: filter[appartment.floors_total][]
        value: "20"
        id: pair_8f528b9a5ad64c239ef0513efca08b13
      - name: filter[distance_by_foot]
        value: <45
        id: pair_0c23d8b04511440dafc5bdd745d7b18d
      - name: filter[appartment.room_only]
        value: "false"
        id: pair_86568ff6a72141e7a57bd297d861c5bf
      - name: filter[appartment.is_new_building]
        value: "true"
        id: pair_5814f5a2206a4fdab76101e814f61df6
      - name: filter[model_name]
        value: Appartment
        id: pair_50e75b7309ef4a1ba531e80c85fc500d
    headers:
      - id: pair_3d571b5d3b4244718f8019607822a1cc
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_012991e94e444b3dac49fe24474cd65a
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1629458847323
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e05f40a8eff8484296ad8fa2697a79a7
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469156
    created: 1629971469156
    url: https://cheboksary.cian.ru/cian-api/site/v1/search-regions-cities/?text=Мо
    name: Domclick test
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_156efbe97b75411eb927b02cef63f448
        name: Accept
        value: application/json
        description: ""
      - id: pair_e652435412214a1dba7e69fa24204144
        name: Content-Type
        value: application/json
        description: ""
    authentication: {}
    metaSortKey: -1629103482221
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_185cc531ce0f4fab867f2c113be70f2c
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469155
    created: 1629971469155
    url: https://api.hh.ru/areas
    name: test
    description: ""
    method: GET
    body:
      mimeType: application/json
      text: ""
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
        id: pair_3fd976691bdb45d695547829aac7300f
    authentication: {}
    metaSortKey: -1619081909512
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_bd10d59205d641b89c01cf8fc2660dc9
    parentId: fld_cd39924e2c3c45ad9355c94ec55ac406
    modified: 1629971469153
    created: 1629971469153
    url: "{{ _.BASE_URL }}/potentials/1/visits"
    name: Get visits for current potential
    description: >-
      In order to get visits list for current potential, run this route. You
      should get following response:

      ```json

      {
        "data": [
          {
            "type": "visits",
            "id": "1",
            "attributes": {
              "contact_type": {
                "key": "CALL",
                "value": "call",
                "description": "Звонок"
              },
              "contact_date": "2021-02-03",
              "status": {
                "KEY": "DONE",
                "value": "done",
                "description": "Проведено"
              },      
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
          },
          "relationships": {      
          },
          "links": {
            "self": "http://localhost/api/v1/visits/1"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_9055ec3830534689b0d22bc82f330fd7
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_90b5624dd28f4a1fa81db1332beadda5
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614926017090
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_cd39924e2c3c45ad9355c94ec55ac406
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469150
    created: 1629971469150
    name: Potentials
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614925632643
    _type: request_group
  - _id: req_af7448d598d94e4c9805674577a82671
    parentId: fld_cd39924e2c3c45ad9355c94ec55ac406
    modified: 1629971469152
    created: 1629971469152
    url: "{{ _.BASE_URL }}/potentials"
    name: Get all potentials
    description: Here you can get list of all potentials, assigned to current user
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ed993e81f95f4b2caa2e97652d7db227
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_d4b43c800a204e5180ceb8ea993016f5
    authentication:
      type: bearer
      token: "{{ _.BASE_URL }}"
    metaSortKey: -1614925823506
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3e26609579484f54a9e356fd3a62a2b4
    parentId: fld_cd39924e2c3c45ad9355c94ec55ac406
    modified: 1629971469151
    created: 1629971469151
    url: "{{ _.BASE_URL }}/potentials"
    name: Create new potential
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "leads",
        		"attributes": {
        			"user_id": 1,
        			"employee_id": 3,
        			"immovable_id": 5,
        			"status": "created",
        			"call_from": "10:00",
        			"call_to": "11:00"
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_3ad5ee6892314bc99f3136b41bbd2085
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_65abd47b662d4897a52fac6baa596d30
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614925648608
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_890e24c55fce4c2bb7ab01b3431e43dd
    parentId: fld_9422c27db6ba492d88e9c6363f1455cd
    modified: 1648706221039
    created: 1629971469147
    url: "{{ _.BASE_URL }}/sms-verification"
    name: SMS Verification Send
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"phone_number": "+79876758889"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_cf263290f25e496c834389e66ffc787b
      - id: pair_09dc1a3adb8043f082dacc27b6e2961b
        name: Accept
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1628241583103
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_9422c27db6ba492d88e9c6363f1455cd
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469143
    created: 1629971469143
    name: Auth
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614923910647
    _type: request_group
  - _id: req_1fee77474c734e64883ce14972763073
    parentId: fld_9422c27db6ba492d88e9c6363f1455cd
    modified: 1629971469144
    created: 1629971469144
    url: "{{ _.AUTH_URL }}/oauth/token"
    name: Login BEARER
    description: >-
      Here you can authorize in system. Return following response:

      ```json

      {
        "token_type": "Bearer",
        "expires_in": 31536000,
        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI0IiwianRpIjoiZmQ5YTQ0ZTAwYTk0YjU3ODgzOWNjZWVlYWEwM2MwMjhlZTQyYmMzZjk0YjhkOGJjMjhkNjMxODhiNDA3MmI0OGIyNTA2NjNmZjIwNjM2YmQiLCJpYXQiOiIxNjEwMDUyMDkzLjA3ODA2NyIsIm5iZiI6IjE2MTAwNTIwOTMuMDc4MDcwIiwiZXhwIjoiMTY0MTU4ODA5My4wNTQ4MjciLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.zN5oV2b_pmHelc9nYrTIGVlU5134ZbbJa1O5HXOTn2U2hnVLv2ix8AYNIA6U06Gmzgq10mTSmXo0DV-NzZWSXPqYwxGcRupqccO3-zMoMjGiVtrZ3WK6l9xI_X_9FyK7m5cQ_fZE9dJINy8Z9v76ZR8sORiTV38vRQQpYDxGNk7X2v5poNF2dR40wX-AGhiZXL1HSa8450sNDgvJj1LK5yUybsE1RvTsKWkUnLyRGrDtia_FmEjfbWTytmgO4KpzEStK7jFtMHw2TrBQ6agKXHn1PvCP3x6WdR5MVaIPNMkLpsD58JVLynGKZYM6dj1BwNyOFCVA8BpFRBvztcWY9CJQWem_1yjAiozxBiTr6buBxoVHbRSE5nBj_U4vbgcTzeduN49MvooDQS9mhkOLbAtiZguAijJvNeJBFO2-9g9Yi25HiAwcTkotVfL2lGXqCgrQ6E8UqVkqsabu4d6GMGcjECpAmLyfxogf2d8r6VFngue_4ijZwC5XwoS7kYN17C4yafoBOcitzE8ThRjNjcMu449fTx_-qgefFbjxEgo6meR3oT_aXIBgSLpcjE8zwaiTEn777hd5K3Pt6A8eWFQeklhSZ6g4MsC3jSOPfoayydnWsQjv7TXsMy072OogfJjOsv0J-STqlb1qO8SuR_Mq4lAjGbMaWp48lK2PjTU",
        "refresh_token": "def502005c40371d09db88eca381f887a3cd8da2ddfafb17807b427eed638778062daa97969bc6bd2b94c73a84e30d3a262443822e1f25dd8567b4bf45f7e65d8d695aa846073587913d40982e0275ead0bd6eb5507240ac0a216a59f54c89075a2c14e5d58a9515d938e636438f69f61e53bc713d62f893b312367bc17347f70a300ea8594b729ccbcc505d7303c21025aab148d87cf8a76d635b162293a4b7c720fbf8921b6c2385c7061b20b5fd7245172d42dc60d0eaae64f30236073137cd99c0328c8b27629f0ca7090b2da3bb96e09e7da7699062f1f7414dbd5c14689592632c5d33e9a737de63d053a2490c0a6a15e4cde615bf1ec69acd3ce3f73e44ed8b0931a2335c69ab26b878e272116591f2e690f6f9d58beb9f6e9e7308be4f50a8cf7bc31ca888511d7171ffe1ebcf974e07e00a7209f2f6f54416ddfa59161cde0ceec35d1a1f798b74b90e33d0213bbdb8091e388ec208a02605f6232845"
      }

      ```
    method: POST
    body:
      mimeType: multipart/form-data
      params:
        - name: grant_type
          value: password
          description: ""
          id: pair_538cd4b96a6e428c905fe13b8b7e30b2
        - name: client_id
          value: "{{ _.client_id }}"
          description: ""
          id: pair_1cdabd635ea9426a8d1bf0c0c2211e6a
        - name: client_secret
          value: "{{ _.client_secret }}"
          description: ""
          id: pair_453a90dd43954ccbb78f2fe3f74bb820
        - name: username
          value: "{{ _.USERNAME }}"
          description: ""
          id: pair_8cb4f73b3ddc4fc39b0a1fbdb7efc6d7
        - name: password
          value: "{{ _.PASSWORD }}"
          description: ""
          id: pair_fd20801b2f5641a88fdb875a4de038fb
        - name: scope
          value: "*"
          description: ""
          id: pair_488208f5846848de86efa82f3a2b3a15
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_bb1efc10d8fd462b83bd944514020755
      - name: Accept
        value: application/json
        description: ""
        id: pair_f7531c81a40749afaa0880978d4ecce3
    authentication: {}
    metaSortKey: -1614923981735
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3db54cc08e4040f09df8ad3070331aab
    parentId: fld_9422c27db6ba492d88e9c6363f1455cd
    modified: 1629971469146
    created: 1629971469146
    url: "{{ _.AUTH_URL }}/oauth/token"
    name: Login CLIENT
    description: >-
      Here you can authorize in system. Return following response:

      ```json

      {
        "token_type": "Bearer",
        "expires_in": 31536000,
        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMzEiLCJqdGkiOiI1NzRhMjhmMjBjOTJhM2NlM2RlZmQyN2FlNjJmM2FhNWEyZjQ1NmEzMGFiN2VlNzhjNDA1NDAwZmQ1MzU1NTliOGUyZWUyNTE1YjZmZDUzYyIsImlhdCI6MTYwMjYwNTAwOSwibmJmIjoxNjAyNjA1MDA5LCJleHAiOjE2MzQxNDEwMDksInN1YiI6IiIsInNjb3BlcyI6W119.kvvlB--Cevz4ZdmHFLdoRslfGVnBXV92wVaotWzaBsKYDtj8TKq14fwQF44uD-819rfHfXCdVUBdK2EUiCuSnG-6j0CQoNq075T_yaK4s8gQRqUpzOpf6BJLJIG3OQLKjbWMUXUBVmeVkZKVagwN1CMoxCJIoQqNAR4aUPESivCtQF5vx26jpnE2nG1x4M8XhBsiKB_slsJWMbqDpxFlwjGGILOF4fX1LgooJtohrwNcVRZfr1oIyZvyjssJReaN1aJQgPuow-NKpZEQmLNsZ7_7RLcxAKC-PujLmbHBek86iQxYaMA8qW1sD04UFV3XWIsb_-0aZQ92FOecP3YlraGvrqlRY5wuPoHwTdG6t_P6f6mBM_kr1iUA4Q86cCTeshHMhiU-34w7LVGK8FHWxJl0tLXK2_8OTJvdnnYhodrnLO-JhddV15gSLxXOpP-UfMCBWvw6aaoitsPE3arg1sIdjz9_E8kAGc_vFHrHGd6SmwsDM84_Vf04x27Fi1_K8eEuYt0FBHZuyAT3AclHAt3SotXJuI2akVoyqcCzCzTRRX4FnMz31rH9LREwBnG19qJJU2fii89cQq364MschH7jQvCtsCyul026m6ox5aByBSVdc0bZ-u6fyGzNjZnlTFeskrWHLYids5t_U21ib44CQ4GLTqv0r4eTWeuGt5w"
      }

      ```
    method: POST
    body:
      mimeType: multipart/form-data
      params:
        - name: grant_type
          value: client_credentials
          description: ""
          id: pair_538cd4b96a6e428c905fe13b8b7e30b2
        - name: client_id
          value: "{{ _.client_id }}"
          description: ""
          id: pair_1cdabd635ea9426a8d1bf0c0c2211e6a
        - name: client_secret
          value: "{{ _.client_secret }}"
          description: ""
          id: pair_453a90dd43954ccbb78f2fe3f74bb820
        - name: scope
          value: "*"
          description: ""
          id: pair_488208f5846848de86efa82f3a2b3a15
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_bb1efc10d8fd462b83bd944514020755
      - name: Accept
        value: application/json
        description: ""
        id: pair_f7531c81a40749afaa0880978d4ecce3
    authentication: {}
    metaSortKey: -1614896478450.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_742c722e13a44ecc9998a1d3d833eee3
    parentId: fld_9422c27db6ba492d88e9c6363f1455cd
    modified: 1629971469148
    created: 1629971469148
    url: "{{ _.AUTH_URL }}/oauth/token"
    name: Login By SMS
    description: >-
      Here you can authorize in system. Return following response:

      ```json

      {
        "token_type": "Bearer",
        "expires_in": 31536000,
        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMzEiLCJqdGkiOiI1NzRhMjhmMjBjOTJhM2NlM2RlZmQyN2FlNjJmM2FhNWEyZjQ1NmEzMGFiN2VlNzhjNDA1NDAwZmQ1MzU1NTliOGUyZWUyNTE1YjZmZDUzYyIsImlhdCI6MTYwMjYwNTAwOSwibmJmIjoxNjAyNjA1MDA5LCJleHAiOjE2MzQxNDEwMDksInN1YiI6IiIsInNjb3BlcyI6W119.kvvlB--Cevz4ZdmHFLdoRslfGVnBXV92wVaotWzaBsKYDtj8TKq14fwQF44uD-819rfHfXCdVUBdK2EUiCuSnG-6j0CQoNq075T_yaK4s8gQRqUpzOpf6BJLJIG3OQLKjbWMUXUBVmeVkZKVagwN1CMoxCJIoQqNAR4aUPESivCtQF5vx26jpnE2nG1x4M8XhBsiKB_slsJWMbqDpxFlwjGGILOF4fX1LgooJtohrwNcVRZfr1oIyZvyjssJReaN1aJQgPuow-NKpZEQmLNsZ7_7RLcxAKC-PujLmbHBek86iQxYaMA8qW1sD04UFV3XWIsb_-0aZQ92FOecP3YlraGvrqlRY5wuPoHwTdG6t_P6f6mBM_kr1iUA4Q86cCTeshHMhiU-34w7LVGK8FHWxJl0tLXK2_8OTJvdnnYhodrnLO-JhddV15gSLxXOpP-UfMCBWvw6aaoitsPE3arg1sIdjz9_E8kAGc_vFHrHGd6SmwsDM84_Vf04x27Fi1_K8eEuYt0FBHZuyAT3AclHAt3SotXJuI2akVoyqcCzCzTRRX4FnMz31rH9LREwBnG19qJJU2fii89cQq364MschH7jQvCtsCyul026m6ox5aByBSVdc0bZ-u6fyGzNjZnlTFeskrWHLYids5t_U21ib44CQ4GLTqv0r4eTWeuGt5w"
      }

      ```
    method: POST
    body:
      mimeType: multipart/form-data
      params:
        - name: grant_type
          value: sms
          description: ""
          id: pair_538cd4b96a6e428c905fe13b8b7e30b2
        - name: client_id
          value: "{{ _.client_id }}"
          description: ""
          id: pair_1cdabd635ea9426a8d1bf0c0c2211e6a
          disabled: false
        - name: client_secret
          value: "{{ _.client_secret }}"
          description: ""
          id: pair_453a90dd43954ccbb78f2fe3f74bb820
          disabled: false
        - name: scope
          value: "*"
          description: ""
          id: pair_488208f5846848de86efa82f3a2b3a15
        - id: pair_fb969787dc2947968b78fa21c0162b6c
          name: phone
          value: "+79876758889"
          description: ""
        - id: pair_e325e31a84d1427fb7620deff1209698
          name: code
          value: "2346"
          description: ""
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_bb1efc10d8fd462b83bd944514020755
      - name: Accept
        value: application/json
        description: ""
        id: pair_f7531c81a40749afaa0880978d4ecce3
    authentication: {}
    metaSortKey: -1614882726808.25
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_73b4366c2f4946a681c635ec067de311
    parentId: fld_9ad747e6c61d48bfbd3b72a739cbcae5
    modified: 1649490888905
    created: 1649490862555
    url: "{{ _.BASE_URL }}/lead-target"
    name: Lead Targets
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_bed1b6ade56d49e59d7a36b2a3f27475
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_cc88fec0f17241e78e07ca50f4ac34f0
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1649490862555
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_9ad747e6c61d48bfbd3b72a739cbcae5
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469139
    created: 1629971469139
    name: Leads
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614868868357
    _type: request_group
  - _id: req_9447a05a7ac945f4a6c7def21fa9e93d
    parentId: fld_9ad747e6c61d48bfbd3b72a739cbcae5
    modified: 1650561514056
    created: 1629971469141
    url: "{{ _.BASE_URL }}/leads"
    name: Create new lead
    description: >-
      В данном эндпоинте хранится перечень всех лидов. Если посетитель в
      какой-либо форме оставляет свои контактные данные, мы храним его в таблице
      лидов, назначая посетителю конкретный тип. Типы лидов:

      - buyer: Покупатель объекта

      - seller: Продавец объекта

      - franchize: Покупатель франшизы

      - feedback: Просто оставил вопрос или отзыв. Незивестно кто
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "leads",
        		"attributes": {
        			"name": "Denis vasilyev",
        			"phone": "+79067856725",
        			"immovable_id": 2,
        			"call_from": "10:00:00",
        			"call_to": "13:00:00",
        			"lead_type": "buyer",
        			"question": "Can I use it?",
        			"email": "user@mail.ru",
        			"page_slug": "buy_app",
        			"office_id": 4,
        			"city_population": 500000,
        			"rieltors": 5,
        			"investments": 100000
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_665aaf9d01a94d00bd90c28bce6b2535
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ac492aa274c44499a7242d4e8342bfc1
    authentication: {}
    metaSortKey: -1614868975166
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_76092b940a3e44c3a507d89f04134c6a
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1649411177018
    created: 1649411131734
    url: "{{ _.BASE_URL }}/employees/415/video_feedbacks"
    name: Get Video Feedback By Employee
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_ac5eaeba29384735bd7682346b1dbf7c
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_789808846e5640c09b87fcc39a8ae2cd
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1649411131734
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_f485a1892ae549da915cb129452f9300
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469127
    created: 1629971469127
    name: Feedbacks
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614868461384
    _type: request_group
  - _id: req_11ec3d0b9b124031aee96716bcf3f611
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1649411109066
    created: 1649411087376
    url: "{{ _.BASE_URL }}/video-feedbacks/1"
    name: Get Video Feedback By ID
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_cd6890f30e28421a972c28c5c74bfe9d
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_b9900f20861a4673a96bfe569d443d5b
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1649411087376
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c24c74a5947c453387700c4f8d7c7a33
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1649411067771
    created: 1649411033158
    url: "{{ _.BASE_URL }}/video-feedbacks"
    name: Get All Video Feedbacks
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_3cec12ffd739465fa51e412592c56e2c
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_1025deacdbca4b8c8f1bd7fd476cfec3
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1649411033159
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f5bc738d50f44ad78e9ec188acf40fa0
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1629971469137
    created: 1629971469137
    url: "{{ _.BASE_URL }}/feedbacks/1"
    name: Update Feedback
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "feedbacks",
        		"attributes": {
        			"description": "test feedback",
        			"lead_id": 1,
        			"employee_id": 2
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_c4d2bd2814d84ed0b09bfe5d904e5399
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_0e43025309584b099cb7f8ef5d063ead
    authentication: {}
    metaSortKey: -1619704583719
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0213be3e71af44629b2a08a4fac083a8
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1649494434256
    created: 1629971469135
    url: "{{ _.BASE_URL }}/feedbacks"
    name: Create new feedback
    description: >-
      Отправляем обратную связь о сотруднике.

      Чтобы прикрепить отзыв к конкретному сотруднику, необходимо в аттрибутах заполнить поле employee_id, передав в него номер сотрудника. Если отзыв оставляет лид, который был создан ранее, связь с лидом передаём в поле lead_id.

      В ответ получаем созданный объект.


      ```json

      {
        "data": {
          "type": "feedbacks",
          "id": "31",
          "attributes": {
            "description": "test feedback",
            "is_internal": false,
            "employee_id": 2,
            "is_approved": false,
            "lead_id": 12
          },
          "meta": {
            "created_at": "2021-04-29T13:24:32.000000Z",
            "updated_at": "2021-04-29T13:24:32.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/feedbacks\/31"
          },
          "relationships": {
            "employee": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/feedbacks\/31\/relationships\/employee",
                "related": "http:\/\/tsnnedv.test:8000\/feedbacks\/31\/employee"
              }
            },
            "lead": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/feedbacks\/31\/relationships\/lead",
                "related": "http:\/\/tsnnedv.test:8000\/feedbacks\/31\/lead"
              }
            }
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "feedbacks",
        		"attributes": {
        			"name": "Sergio Gorkadd",
        			"phone": "+79064856677",
        			"description": "test feedback",
        			"employee_id": 2
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_88562f2938d74ea3994ae9c77497b7e9
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_5afecad6ea3844fd993d898e7a1579f3
    authentication: {}
    metaSortKey: -1619702358338
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_740a5c909b7348e681b616bda131bba7
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1649957615881
    created: 1629971469132
    url: "{{ _.BASE_URL }}/feedbacks"
    name: Get all feedbacks
    description: >-
      Выводит список всех отзывов от клиентов. 


      Доступные поля:

      * description - непосредственно сам отзыв.

      * is_internal - является данный отзыв внутренним или добавлен самим клиентом

      * is_approved - утверждён отзыв администратором или нет.


      Доступные связи (/feedbacks/1?include=employee,lead):

      * employee - выводит информацию о связанном сотруднике

      * lead - информация о связанном лиде


      Доступные фильтры (/feedbacks/1?filter[is_approved]=true):

      * is_approved - фильтр по утверждённым отзывам (true или false)


      ```json

      {
        "data": [
          {
            "type": "feedbacks",
            "id": "1",
            "attributes": {
              "description": "Супер отличный сервис!",
              "lead_id": null,
              "employee_id": null,
              "is_internal": true
          },
          "meta": {
              "created_at": "2021-04-02T08:09:03.000000Z",
              "updated_at": "2021-04-02T08:09:03.000000Z"
            },
            "links": {
              "self": "http://localhost/api/v1/feedbacks/1"
            }
          },
          {
            "type": "feedbacks",
            "id": "2",
            "attributes": {
              "description": "Сервис не такой отличный!",
              "lead_id": null,
              "employee_id": null,
              "is_internal": true
          },
           "meta": {
              "created_at": "2021-04-02T08:09:03.000000Z",
              "updated_at": "2021-04-02T08:09:03.000000Z"
            },
            "links": {
              "self": "http://localhost/api/v1/feedbacks/2"
            }
          }
        ],  
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_6393d2783c734af9be46c4f81a020e45
        name: sort
        value: -created_at
        description: ""
      - id: pair_f4dd58cd96b94720909c6b708db4844a
        name: include
        value: lead,employee
        description: ""
      - id: pair_47ee468b5c5c48e2b16edb3d9584aaab
        name: filter[employee_id]
        value: "2"
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c6db6e63ef594b59886de3927d6d889f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e635fdb8f6b946ec81b5c5361b1f9f07
    authentication: {}
    metaSortKey: -1614868679787
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_591f9961af58403497054c0cf6188adf
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1648903514560
    created: 1629971469134
    url: "{{ _.BASE_URL }}/employees/421/feedbacks"
    name: Feedbacks by employee
    description: >-
      Выводит все отзывы на конкретного сотрудника (employees/15/feedbacks, где
      15 - id сотрудника). 


      ```json

      {
        "data": [
          {
            "type": "feedbacks",
            "id": "1",
            "attributes": {
              "description": "Супер отличный сервис!",
              "lead_id": null,
              "employee_id": 15,
              "is_internal": true,
              "is_approved": false
          },
          "meta": {
              "created_at": "2021-04-02T08:09:03.000000Z",
              "updated_at": "2021-04-02T08:09:03.000000Z"
            },
            "links": {
              "self": "http://localhost/api/v1/feedbacks/1"
            }
          },
          {
            "type": "feedbacks",
            "id": "2",
            "attributes": {
              "description": "Сервис не такой отличный!",
              "lead_id": null,
              "employee_id": 15,
              "is_internal": true,
              "is_approved": false,
          },
          "meta": {
              "created_at": "2021-04-02T08:09:03.000000Z",
              "updated_at": "2021-04-02T08:09:03.000000Z"
            },
            "links": {
              "self": "http://localhost/api/v1/feedbacks/2"
            }
          }
        ],  
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_45cdaf4a4d3e464cb047969c0281cca2
        name: sort
        value: -created_at
        description: ""
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c6db6e63ef594b59886de3927d6d889f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e635fdb8f6b946ec81b5c5361b1f9f07
    authentication: {}
    metaSortKey: -1614868589115.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3f79deae1a854f7fa9340afbe9e4af2a
    parentId: fld_f485a1892ae549da915cb129452f9300
    modified: 1629971469130
    created: 1629971469130
    url: "{{ _.BASE_URL }}/feedbacks/1?include=employee,lead"
    name: Get feedback by ID
    description: >-
      Выводит отзыв по его id.


      Доступные поля:

      * description - непосредственно сам отзыв.

      * is_internal - является данный отзыв внутренним или добавлен самим клиентом

      * is_approved - утверждён отзыв администратором или нет.


      Доступные связи (/feedbacks/1?include=employee,lead):

      * employee - выводит информацию о связанном сотруднике

      * lead - информация о связанном лиде


      Доступные фильтры (/feedbacks/1?filter[is_approved]=true):

      * is_approved - фильтр по утверждённым отзывам (true или false)


      ```json

      {
        "data": {
          "type": "feedbacks",
          "id": "1",
          "attributes": {
            "description": "Супер отличный сервис!",
            "lead_id": null,
            "employee_id": null,
            "is_internal": true
          },    
          "meta": {
             "created_at": "2021-04-02T08:09:03.000000Z",
             "updated_at": "2021-04-02T08:09:03.000000Z"
          },
          "links": {
            "self": "http://localhost/api/v1/feedbacks/1"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_43b6265e62054006bdde69d119c949fc
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_8c071e25ea3944398e50d6f64f3c720f
    authentication: {}
    metaSortKey: -1614868498444
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9cc263325d6c4591884d300a68bba1a1
    parentId: fld_5e327fccc8674d59a0b571d451805033
    modified: 1629971469125
    created: 1629971469125
    url: "{{ _.BASE_URL }}/questions"
    name: Get all questions
    description: >-
      Данные для страниы "Ответы на вопросы". Выводятся все вопросы,
      зарегистрированные в системе. Доступные поля:

      * question - вопрос от клиента

      * answer - ответ на вопрос от клиента.

      * is_published - опубликован вопрос или нет

      * lead_id - привязанный лид к вопросу

      * user_id - привязанный пользователь к вопросу


      Доступные фильтры (?filter[is_published]=true):

      * is_published - выводит только опубликованных вопросов


      Доступные связи (?include=employee,lead):

      * employee - информация о связанном сотруднике

      * lead - информация о связанном лиде


      Доступная сортировка(?sort=updated_at):

      * updated_at - сортируем по дате обновления

      * question - сортируем в алфавитном порядке по вопросу


      ```json

      {
        "data": [
          {
            "type": "questions",
            "id": "7",
            "attributes": {
              "question": "Какие услуги вы предоставляете?",
              "answer": "Полный спектр услуг, связанный с недвижимостью",
              "is_published": true,
              "lead_id": null,
              "user_id": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:36.000000Z",
              "updated_at": "2021-04-02T07:14:36.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/questions\/7"
            },
            "relationships": {
              "user": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/questions\/7\/relationships\/user",
                  "related": "http:\/\/tsnnedv.test:8000\/questions\/7\/user"
                }
              },
              "lead": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/questions\/7\/relationships\/lead",
                  "related": "http:\/\/tsnnedv.test:8000\/questions\/7\/lead"
                }
              }
            }
          },
          {
            "type": "questions",
            "id": "8",
            "attributes": {
              "question": "Occaecati omnis consequatur consectetur perferendis.",
              "answer": "Sequi porro porro et. Et dolores quasi dolorem excepturi et commodi.",
              "is_published": true,
              "lead_id": null,
              "user_id": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:36.000000Z",
              "updated_at": "2021-04-02T07:14:36.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/questions\/8"
            },
            "relationships": {
              "user": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/questions\/8\/relationships\/user",
                  "related": "http:\/\/tsnnedv.test:8000\/questions\/8\/user"
                }
              },
              "lead": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/questions\/8\/relationships\/lead",
                  "related": "http:\/\/tsnnedv.test:8000\/questions\/8\/lead"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/questions?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/questions?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/questions?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_1a47863805eb49b48ca7681830d7e708
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_a4d92165c3dd40b2b8302c877bb28f3b
    authentication: {}
    metaSortKey: -1614867303648
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_5e327fccc8674d59a0b571d451805033
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469123
    created: 1629971469123
    name: FAQ
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614866983076
    _type: request_group
  - _id: req_dc76cd7db94744b994400bd76d26582f
    parentId: fld_5e327fccc8674d59a0b571d451805033
    modified: 1629971469124
    created: 1629971469124
    url: "{{ _.BASE_URL }}/questions/1"
    name: Get question by id
    description: |-
      Выводится вся информация о вопросе по его id.

      Доступные поля:
      * question - вопрос от клиента
      * answer - ответ на вопрос от клиента.
      * is_published - опубликован вопрос или нет
      * lead_id - привязанный лид к вопросу
      * user_id - привязанный пользователь к вопросу

      Доступные фильтры (?filter[is_published]=true):
      * is_published - выводит только опубликованных вопросов

      Доступные связи (?include=employee,lead):
      * employee - информация о связанном сотруднике
      * lead - информация о связанном лиде

      Доступная сортировка(?sort=updated_at):
      * updated_at - сортируем по дате обновления
      * question - сортируем в алфавитном порядке по вопросу

      ```json
      {
        "data": {
          "type": "questions",
          "id": "1",
          "attributes": {
            "question": "Как к вам проехать?",
            "answer": "После метро через 100 метров поверните направо",
            "is_published": true,
            "lead_id": null,
            "user_id": null
          },
          "meta": {
            "created_at": "2021-04-02T07:14:36.000000Z",
            "updated_at": "2021-04-02T07:14:36.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/questions\/1"
          }
        }
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_5a916de2068f4ea786c5325a8ff0d135
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_b6f07913fb48497990c7503795757e15
    authentication: {}
    metaSortKey: -1614867013914
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_25fad6258f794be385e934b89e769e69
    parentId: fld_786ec63981b64dc8a53b60d8bb32fc01
    modified: 1629971469121
    created: 1629971469121
    url: "{{ _.BASE_URL }}/searches/2"
    name: Edit search
    description: Send updated search params
    method: PUT
    body:
      mimeType: application/json
      text: >-
        {
        	"data": {
        		"type": "searches",
        		"attributes": {
        			"name": "{% faker 'name', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'en' %}",
        			"email": "user@mail.ru",
        			"params": {"value": "test"},
        			"notifications": 1
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_0f8181e24e9f42709d43806ed591eac4
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_8cbdcfe99dc04a43980d63f0fa77d7db
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614866851745
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_786ec63981b64dc8a53b60d8bb32fc01
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469118
    created: 1629971469118
    name: Searches
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614865754595
    _type: request_group
  - _id: req_5feadb6463754279be248da3eae3214e
    parentId: fld_786ec63981b64dc8a53b60d8bb32fc01
    modified: 1629971469120
    created: 1629971469120
    url: "{{ _.BASE_URL }}/searches"
    name: Save search
    description: By this route you can create new search parameters for user.
    method: POST
    body:
      mimeType: application/json
      text: >-
        {
        	"data": {
        		"type": "searches",
        		"attributes": {
        			"name": "{% faker 'name', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'en' %}",
        			"email": "user@mail.ru",
        			"params": {"value": "test"},
        			"notifications": 1
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_4f01381cfdd54818a4a022b3170b8a9a
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_50e078e290ce42c99da5d610d19a5909
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614866692043
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a3f9c4b73ff44ec4ab351eb07e43bc6e
    parentId: fld_786ec63981b64dc8a53b60d8bb32fc01
    modified: 1629971469119
    created: 1629971469119
    url: "{{ _.BASE_URL }}/searches"
    name: Get all searches
    description: >-
      This route need for getting saved searches for current user. Main
      information we will store in params field as json data. Example response:


      ```json

      {
        "data": [
          {
            "type": "searches",
            "id": "1",
            "attributes": {
              "name": "Search all object",
              "notifications": 1,
              "params": {...},        
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            }      
          },    
        ],  
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_0027287ec59d4cef8cb15eeab890a785
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_cf94b614d2024b00b16e04bcb82d282b
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614866045384
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f277e4c154b747fdb4884fcd5a6e4e54
    parentId: fld_3c1ef244c8a844ba85534a7b7b10c522
    modified: 1629971469114
    created: 1629971469114
    url: "{{ _.BASE_URL }}/employees/1/comments"
    name: Get Comments by Agent
    description: >-
      Комментарии, привязанные к сотруднику. В запросе передаётся номер
      сотрудника. Пример ответа:


      ```json

      {
        "data": [
          {
            "type": "comments",
            "id": "1",
            "attributes": {
              "name": "Josiane Howe Jr.",
              "email": "lucie.hagenes@durgan.com",
              "comment": "Nulla assumenda quisquam incidunt totam ipsum harum error.",
              "agent_id": 1,
              "immovable_id": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/comments\/1"
            },
            "relationships": {
              "agent": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/comments\/1\/relationships\/agent",
                  "related": "http:\/\/tsnnedv.test:8000\/comments\/1\/agent"
                }
              }
            }
          },
          {
            "type": "comments",
            "id": "2",
            "attributes": {
              "name": "Derrick Bashirian",
              "email": "chelsea21@anderson.com",
              "comment": "Blanditiis blanditiis exercitationem eum officia aperiam.",
              "agent_id": 1,
              "immovable_id": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/comments\/2"
            },
            "relationships": {
              "agent": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/comments\/2\/relationships\/agent",
                  "related": "http:\/\/tsnnedv.test:8000\/comments\/2\/agent"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_61a8dc6b8951455aa0953025a8364ac7
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_bdcd34a94e494c62867c005301a2c915
    authentication: {}
    metaSortKey: -1619601303809
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_3c1ef244c8a844ba85534a7b7b10c522
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469110
    created: 1629971469110
    name: Comments
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614864529343
    _type: request_group
  - _id: req_1129d20b632844e3bf7afe6f8163be2d
    parentId: fld_3c1ef244c8a844ba85534a7b7b10c522
    modified: 1629971469116
    created: 1629971469116
    url: "{{ _.BASE_URL }}/immovables/137/comments"
    name: Get Comments by Immovable
    description: >-
      Комментарии, связанные с конкретным объектом недвижимости. Передаётся id
      объекта недвижимости.


      Пример ответа:

      ```json

      {
        "data": [
          {
            "type": "comments",
            "id": "29",
            "attributes": {
              "name": "Tyrell Sauer",
              "email": "ryundt@gmail.com",
              "comment": "Квартира плохо освещена",
              "agent_id": null,
              "immovable_id": 137
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/comments\/29"
            },
            "relationships": {
              "agent": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/comments\/29\/relationships\/agent",
                  "related": "http:\/\/tsnnedv.test:8000\/comments\/29\/agent"
                }
              }
            }
          },
          {
            "type": "comments",
            "id": "30",
            "attributes": {
              "name": "Cleo Quigley",
              "email": "robel.riley@wehner.biz",
              "comment": "Квартира требует срочного ремонта",
              "agent_id": null,
              "immovable_id": 137
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/comments\/30"
            },
            "relationships": {
              "agent": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/comments\/30\/relationships\/agent",
                  "related": "http:\/\/tsnnedv.test:8000\/comments\/30\/agent"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_61a8dc6b8951455aa0953025a8364ac7
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_bdcd34a94e494c62867c005301a2c915
    authentication: {}
    metaSortKey: -1619573551511
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_4e1e1db8944041ffbf1c6b55d71eea9a
    parentId: fld_3c1ef244c8a844ba85534a7b7b10c522
    modified: 1629971469112
    created: 1629971469112
    url: "{{ _.BASE_URL }}/comments"
    name: Get comment list
    description: >-
      Все комментарии, добавленные пользователями к агентам, объектам
      недвижимости. Комментариями могут оставляться в том числе и пользователи,
      соответственно в этом случае им будет назначен user_id.


      Доступные связи (?include=agent):

      * agent - подробная информация о связанном сотруднике


      Доступные фильтры(?filter[agent_id]=1):

      * agent_id - фильтр по конкретному сотруднику


      ```json

      {
        "data": [
          {
            "type": "comments",
            "id": "1",
            "attributes": {
              "name": "Josiane Howe Jr.",
              "email": "lucie.hagenes@durgan.com",
              "comment": "Очень замечательный сотрудник!",
              "agent_id": 1,
              "immovable_id": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/comments\/1"
            },
            "relationships": {
              "agent": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/comments\/1\/relationships\/agent",
                  "related": "http:\/\/tsnnedv.test:8000\/comments\/1\/agent"
                }
              }
            }
          },
          {
            "type": "comments",
            "id": "2",
            "attributes": {
              "name": "Derrick Bashirian",
              "email": "chelsea21@anderson.com",
              "comment": "Помог мне решить проблему!",
              "agent_id": 1,
              "immovable_id": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/comments\/2"
            },
            "relationships": {
              "agent": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/comments\/2\/relationships\/agent",
                  "related": "http:\/\/tsnnedv.test:8000\/comments\/2\/agent"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/comments?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/comments?page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/comments?page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/comments?page%5Bnumber%5D=2"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_9c54c99ba88f442788c002a312f87e19
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_c34edcf648414e4591fc0d86eee12151
    authentication: {}
    metaSortKey: -1614864837325
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_8cda7641ffc1454c86641afa4a06f3d5
    parentId: fld_3c1ef244c8a844ba85534a7b7b10c522
    modified: 1629971469111
    created: 1629971469111
    url: "{{ _.BASE_URL }}/comments"
    name: Send feedback about agent
    description: >-
      Здесь можно оставить комментарий к сотруднику. В поле agent_id требуется
      передать номер сотрудника. Возвращается статус 201. Пример ответа:


      ```json

      {
        "data": {
          "type": "comments",
          "id": "31",
          "attributes": {
            "name": "Andrey Vasilyev",
            "email": "user@mail.ru",
            "comment": "Thank you for cooperation!",
            "agent_id": 2,
            "immovable_id": null
          },
          "meta": {
            "created_at": "2021-05-31T07:08:40.000000Z",
            "updated_at": "2021-05-31T07:08:40.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/comments\/31"
          },
          "relationships": {
            "agent": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/comments\/31\/relationships\/agent",
                "related": "http:\/\/tsnnedv.test:8000\/comments\/31\/agent"
              }
            }
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "comments",
        		"attributes": {
        			"name": "Andrey Vasilyev",
        			"email": "user@mail.ru",
        			"comment": "Thank you for cooperation!",
        			"agent_id": 2
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_2ed8f88179bf426aa0d5738b505edb1a
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2e2bc728612247858846760c055c60f9
    authentication: {}
    metaSortKey: -1614864546341
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9aadfa05d1334681804632cd54b6d6d8
    parentId: fld_3c1ef244c8a844ba85534a7b7b10c522
    modified: 1629971469113
    created: 1629971469113
    url: "{{ _.BASE_URL }}/comments"
    name: Send feedback about immovable
    description: >-
      Оставляем отзыв об объекте недвижимости. В поле immovable_id требуется
      передать номер объекта недвижимости. Возвращается статус 201 со следующим
      содержимимым:


      ```json

      {
        "data": {
          "type": "comments",
          "id": "32",
          "attributes": {
            "name": "Serg Gorka",
            "email": "user@mail.ru",
            "comment": "Super quality immovable",
            "agent_id": null,
            "immovable_id": 136
          },
          "meta": {
            "created_at": "2021-05-31T07:11:51.000000Z",
            "updated_at": "2021-05-31T07:11:51.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/comments\/32"
          },
          "relationships": {
            "agent": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/comments\/32\/relationships\/agent",
                "related": "http:\/\/tsnnedv.test:8000\/comments\/32\/agent"
              }
            }
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "comments",
        		"attributes": {
        			"name": "Serg Gorka",
        			"email": "user@mail.ru",
        			"comment": "Super quality immovable",
        			"immovable_id": 136
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_2ed8f88179bf426aa0d5738b505edb1a
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2e2bc728612247858846760c055c60f9
    authentication: {}
    metaSortKey: -1614864277729
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0a5085b5a53b407d8c5a693cb978cd47
    parentId: fld_4d096ab4ff794267aada8dc7275bfa50
    modified: 1649497607677
    created: 1629971469108
    url: "{{ _.BASE_URL }}/offices"
    name: Offices list
    description: >-
      Получаем список всех офисов агентства недвижимости. В ответе отсутствует
      пагинация.


      Доступные аттрибуты:

      * name - отображаемое наименование офиса

      * primary_phone - номер телефона офиса

      * secondary_phone - дополнительный номер телефона

      * email - электронная почта

      * sun ... sat - график работы офиса на каждый день недели

      * address - массив с адресом. Здесь номер дома передаётся в поле street, пример Ленина, 3


      Доступные связи:

      * employees - выводим информацию о работающих в данном офисе сотрудниках


      ```json

      {
        "data": [
          {
            "type": "offices",
            "id": "14",
            "attributes": {
              "name": "Тестовый офис с новым адресом",
              "primary_phone": "+79876757777",
              "secondary_phone": null,
              "email": {},
              "sun": "9-18",
              "mon": "9-18",
              "tue": null,
              "wed": null,
              "thu": null,
              "fri": null,
              "sat": null,
              "media": null,
              "addresses": {
                "id": 1,
                "street": "Юности, 3",
                "postal_code": "428034",
                "label": "Дом, Юности, 3",
                "organization": "Дом",
                "country_code": "ru",
                "state": "Lucius Terry",
                "family_name": "Емельянов",
                "given_name": "Сергей",
                "city": "North Monique",
                "latitude": null,
                "longitude": null,
                "is_primary": true,
                "is_billing": true,
                "is_shipping": true
              }
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/offices\/14"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/offices\/14\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/offices\/14\/employees"
                }
              },
              "addresses": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/offices\/14\/relationships\/addresses",
                  "related": "http:\/\/tsnnedv.test:8000\/offices\/14\/addresses"
                }
              }
            }
          },
          {
            "type": "offices",
            "id": "12",
            "attributes": {
              "name": "Dr. Rozella Willms DDS333",
              "primary_phone": "+79876757777",
              "secondary_phone": "+79876757777",
              "email": {},
              "sun": "Quaerat voluptas reprehenderit quaerat magnam quo officiis laborum.",
              "mon": "Magnam deserunt magni totam aut labore reiciendis illum.",
              "tue": "Et ipsam reiciendis temporibus quaerat.",
              "wed": "Nihil et quia sed et temporibus quia aut.",
              "thu": "Dolor minima sequi ullam sed.",
              "fri": "Consectetur voluptates accusamus dolorum dicta non ut.",
              "sat": "Veritatis ut quia et sunt.",
              "media": null,
              "addresses": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/offices\/12"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/offices\/12\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/offices\/12\/employees"
                }
              },
              "addresses": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/offices\/12\/relationships\/addresses",
                  "related": "http:\/\/tsnnedv.test:8000\/offices\/12\/addresses"
                }
              }
            }
          },
        ]
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_77f7a6c87f224859b769340df05aac8b
        name: sort
        value: -city
        description: ""
        disabled: true
      - id: pair_f625b3c3be5f48c08ceaec44907eec5c
        name: include
        value: employees
        description: ""
        disabled: false
      - id: pair_cca344d9fa804116becd1cf942d7eb82
        name: filter[addresses.city]
        value: Чебоксары
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_884ea96e60e6425f82eda788600f67e3
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_0fc48c71baae4bf684dd07940699dcda
    authentication: {}
    metaSortKey: -1614864009117
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_4d096ab4ff794267aada8dc7275bfa50
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469106
    created: 1629971469106
    name: Offices
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614862892102
    _type: request_group
  - _id: req_9626ff2a83ec4b96881ba474715c7949
    parentId: fld_4d096ab4ff794267aada8dc7275bfa50
    modified: 1632380846055
    created: 1629971469107
    url: "{{ _.BASE_URL }}/offices/39"
    name: Get office by ID
    description: >-
      Получаем полную информацию об офисе по его ID. 

      Доступные аттрибуты:

      * name - отображаемое наименование офиса

      * primary_phone - номер телефона офиса

      * secondary_phone - дополнительный номер телефона

      * email - электронная почта

      * sun ... sat - график работы офиса на каждый день недели

      * address - массив с адресом. Здесь номер дома передаётся в поле street, пример Ленина, 3

      * description - описание офиса

      * display_name - отображаемое на сайте название офиса

      * month_best - месяц, в котором офис был лучшей командой

      * best_quarter - квартал, в котором офис был лучшей командой

      * best_year - метка о лучшем офисе года


      Доступные связи:

      * employees - выводим информацию о работающих в данном офисе сотрудниках


      ```json

      {
        "data": {
          "type": "offices",
          "id": "14",
          "attributes": {
            "name": "Тестовый офис с новым адресом",
            "primary_phone": "+79876757777",
            "secondary_phone": null,
            "email": {},
            "sun": "9-18",
            "mon": "9-18",
            "tue": null,
            "wed": null,
            "thu": null,
            "fri": null,
            "sat": null,
            "display_name": null,
            "description": "fgdfgdsg sdgsdfd",
            "month_best": {
              "value": 1,
              "key": "JANUARY",
              "description": "January"
            },
            "best_quarter": {
              "value": 1,
              "key": "FIRST",
              "description": "First"
            },
            "best_year": false,
            "media": null,
            "addresses": {
              "id": 1,
              "street": "Юности, 3",
              "postal_code": "428034",
              "label": "Дом, Юности, 3",
              "organization": "Дом",
              "country_code": "ru",
              "state": "Lucius Terry",
              "family_name": "Емельянов",
              "given_name": "Сергей",
              "city": "North Monique",
              "latitude": null,
              "longitude": null,
              "is_primary": true,
              "is_billing": true,
              "is_shipping": true
            }
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/offices\/14"
          },
          "relationships": {
            "employees": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/offices\/14\/relationships\/employees",
                "related": "http:\/\/tsnnedv.test:8000\/offices\/14\/employees"
              }
            },
            "addresses": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/offices\/14\/relationships\/addresses",
                "related": "http:\/\/tsnnedv.test:8000\/offices\/14\/addresses"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_3ee8005ee7da48a5961a807f3872c3a6
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_a49b0c1810ec4c8ba9e6a2a6633aba9f
    authentication: {}
    metaSortKey: -1614862922442
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_11b06950431e464196f651aff1566105
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469104
    created: 1629971469104
    url: "{{ _.BASE_URL }}/histories"
    name: Add history to immovable
    description: >-
      Добавляем историю просмотра по объекту недвижимости. Отправляем
      POST-запрос с номером объекта недвижимости в аттрибутах. Для передачи
      истории просмотра требуется авторизация пользователя. Извне путь не
      доступен.

      В ответ получаем содержимое созданного истории просмотра со статусом 201:


      ```json

      {
        "data": {
          "type": "histories",
          "id": "1001",
          "attributes": {
            "star": "4.4",
            "is_liked": false,
            "comment": null,
            "in_comparison": true,
            "notifications": {
              "value": 0,
              "key": "NONE",
              "description": "Без оповещений"
            },
            "user_id": 1,
            "immovable_id": 12
          },
          "meta": {
            "created_at": "2021-05-21T13:21:54.000000Z",
            "updated_at": "2021-05-24T06:23:26.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/histories\/1001"
          },
          "relationships": {
            "user": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/histories\/1001\/relationships\/user",
                "related": "http:\/\/tsnnedv.test:8000\/histories\/1001\/user"
              }
            },
            "immovable": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/histories\/1001\/relationships\/immovable",
                "related": "http:\/\/tsnnedv.test:8000\/histories\/1001\/immovable"
              }
            }
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "histories",
        		"attributes": {
        			"immovable_id": 12
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_8ca45e8cc1384497b2071a21d3008cbf
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ebd00fd3144e4bf08a4bc4e4fab5fa2f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1621510411410
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469090
    created: 1629971469090
    name: Histories
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614857546721
    _type: request_group
  - _id: req_db2c285f971545508255b4fc40c0c854
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469103
    created: 1629971469103
    url: "{{ _.BASE_URL }}/histories/rating/2"
    name: Get avarage rating
    description: >-
      Получаем средний рейтинг по объекту недвижимости. В адресе следует
      передать номер объекта недвижимости. В ответ приходит объект с полем
      result, в котором содержится число в диапазоне от 1 до 5.

      ```json

      {
        "data": {
          "result": 4.3
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2fb5c9b1653f4974b2b8ce6cb728e447
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_7b891449ec7c43f59ecbd5e2b21bea5b
    authentication: {}
    metaSortKey: -1614861376530
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_1114132d18d747b9ada4396e8a4cd3b8
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469100
    created: 1629971469100
    url: "{{ _.BASE_URL }}/histories?filter[in_comparison]=true&include=immovable"
    name: Get list in comparison objects
    description: >-
      Получаем все объекты истории, добавленные в сравнение. При добавлении
      объекта недвижимости в сравнение, данный факт отражается на объекте
      история. Поэтому, чтобы получить все объекты недвижимости, добавленные в
      сравнение, можно получить все истории с фильтром in_comparison и
      присоединить объекты недвижимости


      ```json

      {
        "data": [
          {
            "type": "histories",
            "id": "1",
            "attributes": {
              "immovable_id": "2",
              "star": 5,
              "is_liked": true,
              "comment": null,
              "in_comparison": true,
              "notifications": null,
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http://localhost/api/v1/histories/1/relationships/immovables",
                  "related": "http://localhost/api/v1/histories/1/immovables"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/histories/1"
            }
          },
          {
            "type": "histories",
            "id": "3",
            "attributes": {
              "immovable_id": "4",
              "star": null,
              "is_liked": false,
              "comment": null,
              "in_comparison": true,
              "notifications": null,
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http://localhost/api/v1/histories/4/relationships/immovables",
                  "related": "http://localhost/api/v1/histories/4/immovables"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/histories/4"
            }
          }
        ],
        "included": [
          {
            "type": "immovables",
            "id": "1",
            "attributes": {
              ...
            },
            "relationships": {
              ...
            },
            "links": {
              "self": "http://localhost/api/v1/immovables/1"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4c012f049c2c4c6bbda0bd1063f42239
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e44ed27c38424847b91ce71fd4de1ee9
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614860885651
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2d33a1fe31004069a6d8970402034be2
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469101
    created: 1629971469101
    url: "{{ _.BASE_URL }}/histories?filter[is_liked]=true&include=immovable"
    name: Get liked immovables
    description: >-
      Получаем все объекты с лайками. Факт лайка у нас сохраняется в объекте
      histories, а не immovables. Поэтому, чтобы получить все лайки, можно
      получить все истории с фильтром is_liked и присоединить привязанные к
      истории объекты недвижимости


      ```json

      {
        "data": [
          {
            "type": "histories",
            "id": "1",
            "attributes": {
              "immovable_id": "2",
              "star": 5,
              "is_liked": true,
              "comment": null,
              "in_comparison": false,
              "notifications": null,
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http://localhost/api/v1/histories/1/relationships/immovables",
                  "related": "http://localhost/api/v1/histories/1/immovables"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/histories/1"
            }
          },
          {
            "type": "histories",
            "id": "3",
            "attributes": {
              "immovable_id": "4",
              "star": null,
              "is_liked": true,
              "comment": null,
              "in_comparison": false,
              "notifications": null,
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http://localhost/api/v1/histories/4/relationships/immovables",
                  "related": "http://localhost/api/v1/histories/4/immovables"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/histories/4"
            }
          }
        ],
        "included": [
          {
            "type": "immovables",
            "id": "1",
            "attributes": {
              ...
            },
            "relationships": {
              ...
            },
            "links": {
              "self": "http://localhost/api/v1/immovables/1"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4c012f049c2c4c6bbda0bd1063f42239
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e44ed27c38424847b91ce71fd4de1ee9
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614860448343.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2ac53a98e1594b1690706af3481e947e
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469093
    created: 1629971469093
    url: "{{ _.BASE_URL }}/histories/immovable/12"
    name: Set stars to immovable
    description: Отправляем рейтинг по текущему объекту недвижимости. В адресной
      строке передаём номер объекта, а также этот же номер передаём в
      json-запросе. В аттрибутах отправляем текущий рейтинг в поле star. В ответ
      получаем объект истории со статусом 202
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "histories",
        		"id": "12",
        		"attributes": {
        			"star": 4.4
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_34da351a31c5459f98bf5923b4e40072
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c38cf0dd01ac4fa29368a92562eafb9f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614860011036
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c189fdf3307b4badb4b72169d07befcd
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469094
    created: 1629971469094
    url: "{{ _.BASE_URL }}/histories/immovable/12"
    name: Like immovable
    description: Отправляем аттрибут is_liked по текущему объекту недвижимости.
      Должна быть проведена авторизация пользователя. В адресной строке передаём
      номер объекта, а также этот же номер передаём в json-запросе. В аттрибутах
      отправляем текущий статус is_liked (true or false). В ответ получаем
      объект истории со статусом 202
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "histories",
        		"id": "12",
        		"attributes": {
        			"is_liked": false
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_34da351a31c5459f98bf5923b4e40072
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c38cf0dd01ac4fa29368a92562eafb9f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614859903958.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_b6ba56067e434752bb58456b849a1af1
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469097
    created: 1629971469097
    url: "{{ _.BASE_URL }}/histories/immovable/12"
    name: Add to in comparison
    description: Добавляем текущий объект недвижимости в сравнение. Должна быть
      авторизация по пользователю. В адресной строке передаём номер объекта, а
      также этот же номер передаём в json-запросе. В аттрибутах отправляем
      статус сравнения в поле in_comparison. В ответ получаем объект истории со
      статусом 202
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "histories",
        		"id": "12",
        		"attributes": {
        			"in_comparison": true
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_34da351a31c5459f98bf5923b4e40072
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c38cf0dd01ac4fa29368a92562eafb9f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614859877189.125
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2070da3adfaa4319ae90801046132053
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469099
    created: 1629971469099
    url: "{{ _.BASE_URL }}/histories/immovable/2"
    name: Subscribe to notifications
    description: >-
      Here you can subscribe user to notifications about current immovable. Just
      pass notifications key. Available values:

      * 1 - every hour

      * 3 - every day

      * 7 - every week


      Returns 202 status with data of current history object
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "histories",
        		"attributes": {
        			"notifications": 1
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_34da351a31c5459f98bf5923b4e40072
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c38cf0dd01ac4fa29368a92562eafb9f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614859863804.4375
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_4b90760628b942249d857fb831645fb4
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469096
    created: 1629971469096
    url: "{{ _.BASE_URL }}/histories/immovable/2"
    name: Add comment about immovable
    description: Отправляем комментарий по текущему объекту недвижимости. Должна
      быть проведена авторизация. В адресной строке передаём номер объекта, а
      также этот же номер передаём в json-запросе. В аттрибутах отправляем
      текущий текущий комментарий в поле comment. В ответ получаем объект
      истории со статусом 202
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "histories",
        		"attributes": {
        			"comment": "This is very cool appartment! I like it!"
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_34da351a31c5459f98bf5923b4e40072
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c38cf0dd01ac4fa29368a92562eafb9f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614859850419.75
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a87b00894a5e4e0c8f3ed094fb780179
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469092
    created: 1629971469092
    url: "{{ _.BASE_URL }}/histories/1001"
    name: Get history info by ID
    description: >-
      Получаем информацию по истории по её id. 


      Доступные аттрибуты:

      * star - текущий сохранённый рейтинг

      * is_liked - метка лайка

      * comment - прикреплённый комментарий

      * in_comparison - добавлен в сравнение или нет

      * notifications - как уведомлять при изменении


      Доступные связи:

      * immovables - информация о привязанном объекте недвижимости


      Получаем объект в следующем формате:

      ```json

      {
        "data": {
          "type": "histories",
          "id": "1001",
          "attributes": {
            "star": "4.3",
            "is_liked": true,
            "comment": null,
            "in_comparison": false,
            "notifications": {
              "value": 0,
              "key": "NONE",
              "description": "Без оповещений"
            },
            "user_id": 1,
            "immovable_id": 12
          },
          "meta": {
            "created_at": "2021-05-21T13:21:54.000000Z",
            "updated_at": "2021-05-21T13:32:19.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/histories\/1001"
          },
          "relationships": {
            "user": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/histories\/1001\/relationships\/user",
                "related": "http:\/\/tsnnedv.test:8000\/histories\/1001\/user"
              }
            },
            "immovable": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/histories\/1001\/relationships\/immovable",
                "related": "http:\/\/tsnnedv.test:8000\/histories\/1001\/immovable"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4d34161f057e425c93abe6fbf4954d7e
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_902b69a3d72442bdaa92861447c6c72f
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614859796881
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_17650c746cac4368a3328dcf16bbcc18
    parentId: fld_c61e1065079c4f68ba284c9ae7a7bb3d
    modified: 1629971469091
    created: 1629971469091
    url: "{{ _.BASE_URL }}/histories"
    name: Get all histories
    description: >-
      Получаем всю историю просмотра у текущего авторизованног опользователя. 


      Доступные аттрибуты:

      * star - текущий сохранённый рейтинг

      * is_liked - метка лайка

      * comment - прикреплённый комментарий

      * in_comparison - добавлен в сравнение или нет

      * notifications - как уведомлять при изменении


      Доступные связи:

      * immovables - информация о привязанном объекте недвижимости


      ```json

      {
        "data": [
          {
            "type": "histories",
            "id": "1",
            "attributes": {
              "immovable_id": "2",
              "star": 5,
              "is_liked": true,
              "comment": null,
              "in_comparison": false,
              "notifications": null,
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http://localhost/api/v1/histories/1/relationships/immovables",
                  "related": "http://localhost/api/v1/histories/1/immovables"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/histories/1"
            }
          },
          {
            "type": "histories",
            "id": "3",
            "attributes": {
              "immovable_id": "4",
              "star": null,
              "is_liked": false,
              "comment": null,
              "in_comparison": true,
              "notifications": null,
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http://localhost/api/v1/histories/4/relationships/immovables",
                  "related": "http://localhost/api/v1/histories/4/immovables"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/histories/4"
            }
          }
        ],
        "links": {
          "first": "http://127.0.0.1/api/v1/histories?page=1",
          "last":  "http://127.0.0.1/api/v1/histories?page=5",
          "prev": null,
          "next": "http://127.0.0.1/api/v1/histories?page=2",
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_a5818b941c7d4634bfcfcbadfeb91c39
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_5b7d910e830d4ff19d614d20f66ffb6c
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614857661327
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_72e60dc4fe8147a9aa0dd7a2e71b02f4
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1649235159546
    created: 1629971469084
    url: "{{ _.BASE_URL }}/employees/5"
    name: Get employee by ID
    description: >-
      Получаем объект сотнудника по его номеру.


      Доступные аттрибуты:

      * first_name - имя сотрудника

      * last_name - фамилия сотрудника

      * middle_name - отчество сотрудника

      * position - его должность

      * is_agent - является агентом или нет

      * phone - номер телефона сотрудника

      * email - его адрес электронной почты

      * is_best - метка о лучшем сотруднике

      * description - описание сотрудника

      * office_id - в каком офисе он работает, id офиса

      * avatar - фотография сотрудника


      ```json

      {
        "data": {
          "type": "employees",
          "id": "2",
          "attributes": {
            "first_name": "Kristin",
            "last_name": "Hettinger",
            "middle_name": "Marianna Howell",
            "position": "quae",
            "is_agent": true,
            "phone": "+74958886758",
            "email": "maurine20@yahoo.com",
            "is_best": false,
            "description": "Qui et blanditiis aspernatur doloremque eligendi voluptatem.",
            "office_id": 3,
            "avatar": {
              "id": 72,
              "url": "http:\/\/tsnnedv.test:8000\/storage\/72\/2.jpg",
              "size": 297268,
              "mime_type": "image\/jpeg",
              "responsive": []
            }
          },
          "meta": {
            "created_at": "2021-04-02T07:14:41.000000Z",
            "updated_at": "2021-04-19T10:10:12.000000Z",
            "deleted_at": null
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/employees\/2"
          },
          "relationships": {
            "comments": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/employees\/2\/relationships\/comments",
                "related": "http:\/\/tsnnedv.test:8000\/employees\/2\/comments"
              }
            },
            "feedbacks": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/employees\/2\/relationships\/feedbacks",
                "related": "http:\/\/tsnnedv.test:8000\/employees\/2\/feedbacks"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_49b03735ff524699bb7a4b115ef6403e
        name: include
        value: comments
        description: ""
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_333060ea7eb149959db5670f74429d8b
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_45b097d505554b11b2f0d73294951610
    authentication: {}
    metaSortKey: -1614856831770
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_0532ba615de54e37adf8830a3a569861
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469080
    created: 1629971469080
    name: Employees
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614851655924
    _type: request_group
  - _id: req_a97512da7a2b40f39f49c4a88bb5fd87
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1632380718170
    created: 1632319424185
    url: "{{ _.BASE_URL }}/employees/418/immovables"
    name: Get immovables by Employee
    description: Получаем все объекты недвижимости, привязанные к сотруднику. Поиск
      идёт по полю employee_id в карте объекта
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_333060ea7eb149959db5670f74429d8b
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_45b097d505554b11b2f0d73294951610
    authentication: {}
    metaSortKey: -1614855658091.25
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_1346e5b966504a43afe3572b6d50015d
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1631625922815
    created: 1629971469088
    url: "{{ _.BASE_URL }}/departments/1"
    name: Get department by ID
    description: >-
      Получаем объект отдела по его номеру.


      Доступные аттрибуты:

      * name - наименование отдела



      ```json

      {
        "data": {
          "type": "departments",
          "id": "1",
          "attributes": {
            "name": "Юридический департамент",
            "crmid": "123213"
          },
          "meta": {
            "created_at": "2021-06-08T10:08:42.000000Z",
            "updated_at": "2021-06-08T10:08:42.000000Z",
            "deleted_at": null
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/departments\/1"
          },
          "relationships": {
            "employees": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/departments\/1\/relationships\/employees",
                "related": "http:\/\/tsnnedv.test:8000\/departments\/1\/employees"
              },
              "data": [
                {
                  "type": "employees",
                  "id": "2"
                },
                {
                  "type": "employees",
                  "id": "130"
                }
              ]
            }
          }
        },
        "included": [
          {
            "type": "employees",
            "id": "2",
            "attributes": {
              "first_name": "Kristin",
              "last_name": "Hettinger",
              "middle_name": "Marianna Howell",
              "position": "quae",
              "is_agent": true,
              "phone": "+74958886758",
              "email": "maurine20@yahoo.com",
              "is_best": false,
              "description": "<p>Qui et blanditiis aspernatur doloremque eligendi voluptatem.<\/p>",
              "office_id": 3,
              "department_id": 1
            },
            "meta": {
              "created_at": "2021-06-08T12:39:53.000000Z",
              "updated_at": "2021-06-08T12:39:53.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/employees\/2"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/employees\/2\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test:8000\/employees\/2\/comments"
                }
              },
              "feedbacks": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/employees\/2\/relationships\/feedbacks",
                  "related": "http:\/\/tsnnedv.test:8000\/employees\/2\/feedbacks"
                }
              },
              "department": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/employees\/2\/relationships\/department",
                  "related": "http:\/\/tsnnedv.test:8000\/employees\/2\/department"
                }
              }
            }
          },
          {
            "type": "employees",
            "id": "130",
            "attributes": {
              "first_name": "Minnie",
              "last_name": "Windler",
              "middle_name": "Meghan Hagenes",
              "position": "maiores",
              "is_agent": false,
              "phone": "+74958886758",
              "email": "kenny50@hotmail.com",
              "is_best": false,
              "description": "<p>Quibusdam aut saepe commodi est consequatur.<\/p>",
              "office_id": 10,
              "department_id": 1
            },
            "meta": {
              "created_at": "2021-06-08T10:10:02.000000Z",
              "updated_at": "2021-06-08T10:10:02.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/employees\/130"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/employees\/130\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test:8000\/employees\/130\/comments"
                }
              },
              "feedbacks": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/employees\/130\/relationships\/feedbacks",
                  "related": "http:\/\/tsnnedv.test:8000\/employees\/130\/feedbacks"
                }
              },
              "department": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/employees\/130\/relationships\/department",
                  "related": "http:\/\/tsnnedv.test:8000\/employees\/130\/department"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_52437672850f419d8b68c735d86ff627
        name: include
        value: employees
        description: ""
      - id: pair_00fdeb68695d4d3eb5633df22ad70789
        name: fields[employees]
        value: id,first_name,last_name,middle_name
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_333060ea7eb149959db5670f74429d8b
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_45b097d505554b11b2f0d73294951610
    authentication: {}
    metaSortKey: -1614854484412.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_606107b4b1bf47f1b772a57386cb13c2
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1649496514463
    created: 1629971469081
    url: "{{ _.BASE_URL }}/employees"
    name: Get employees list
    description: >-
      Получаем список всех сотрудников агентства недвижимости.


      Доступные аттрибуты:

      * first_name - имя сотрудника

      * last_name - фамилия сотрудника

      * middle_name - отчество сотрудника

      * position - его должность

      * is_agent - является агентом или нет

      * phone - номер телефона сотрудника

      * email - его адрес электронной почты

      * is_best - метка о лучшем сотруднике

      * description - описание сотрудника

      * office_id - в каком офисе он работает, id офиса

      * avatar - фотография сотрудника


      ```json

      {
        "data": [
          {
            "type": "employees",
            "id": "2",
            "attributes": {
              "first_name": "Kristin",
              "last_name": "Hettinger",
              "middle_name": "Marianna Howell",
              "position": "quae",
              "is_agent": true,
              "phone": "+74958886758",
              "email": "maurine20@yahoo.com",
              "is_best": false,
              "description": "Qui et blanditiis aspernatur doloremque eligendi voluptatem.",
              "office_id": 3,
              "avatar": {
                "id": 72,
                "url": "http:\/\/tsnnedv.test\/storage\/72\/2.jpg",
                "size": 297268,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-19T10:10:12.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test\/employees\/2"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test\/employees\/2\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test\/employees\/2\/comments"
                }
              }
            }
          },
          {
            "type": "employees",
            "id": "3",
            "attributes": {
              "first_name": "Dell",
              "last_name": "Abernathy",
              "middle_name": "Miss Constance Roob IV",
              "position": "sint",
              "is_agent": false,
              "phone": "+74958886758",
              "email": "tre.schulist@turner.com",
              "is_best": true,
              "description": "Vero quidem aliquam molestiae sed.",
              "office_id": 7,
              "avatar": {
                "id": 73,
                "url": "http:\/\/tsnnedv.test\/storage\/73\/3.jpg",
                "size": 274437,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-19T10:10:12.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test\/employees\/3"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test\/employees\/3\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test\/employees\/3\/comments"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?page%5Bnumber%5D=7"
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_982e4e761b214c40a33845d38b9d9fed
        name: fields[employees]
        value: id,first_name,last_name,middle_name,phone
        description: ""
        disabled: true
      - id: pair_8654a79408d04b348fc4e0f408d0aaa8
        name: page[number]
        value: "1"
        description: ""
      - id: pair_6d8ab397f58b4170a20d63c17089a758
        name: page[size]
        value: "500"
        description: ""
      - id: pair_d281ebdb8f4643ad800351c8474755dd
        name: sort
        value: id
        description: ""
        disabled: false
      - id: pair_1161dd46c63e42f68f10d7ca7a5e599d
        name: filter[department_id]
        value: "4"
        description: ""
        disabled: true
      - id: pair_e878e734b8d44024ad32fa20e302b837
        name: filter[is_best]
        value: "false"
        description: ""
        disabled: true
      - id: pair_f998722a2f8c48ceb11ceef15087c34d
        name: filter[full_name]
        value: Kristin
        description: ""
        disabled: true
      - id: pair_a70c87b899de408d8361206d73787b94
        name: include
        value: comments
        description: ""
        disabled: false
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fc17852cd74441fc88923811fd9e158a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_9b8a033bec9949518d03b6a30e18c118
    authentication: {}
    metaSortKey: -1614852137055
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_5e1f361a2f4c4ac79d2c383cc74fe86a
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1631612999730
    created: 1629971469087
    url: "{{ _.BASE_URL }}/departments"
    name: Get departments list
    description: >-
      Получаем список всех отделов агентства недвижимости.


      Доступные аттрибуты:

      * name - название отдела


      ```json

      {
        "data": [
          {
            "type": "departments",
            "id": "1",
            "attributes": {
              "name": "Юридический департамент",
              "crmid": "123213"
            },
            "meta": {
              "created_at": "2021-06-08T10:08:42.000000Z",
              "updated_at": "2021-06-08T10:08:42.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/departments\/1"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/departments\/1\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/departments\/1\/employees"
                }
              }
            }
          },
          {
            "type": "departments",
            "id": "30",
            "attributes": {
              "name": "ОП Свердловский",
              "crmid": "16"
            },
            "meta": {
              "created_at": "2021-06-16T13:41:10.000000Z",
              "updated_at": "2021-06-18T11:50:26.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/departments\/30"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/departments\/30\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/departments\/30\/employees"
                }
              }
            }
          },
          {
            "type": "departments",
            "id": "32",
            "attributes": {
              "name": "Руководство КП Грибово life",
              "crmid": "17"
            },
            "meta": {
              "created_at": "2021-06-16T13:41:10.000000Z",
              "updated_at": "2021-06-18T11:50:26.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/departments\/32"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/departments\/32\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/departments\/32\/employees"
                }
              }
            }
          },
          {
            "type": "departments",
            "id": "6",
            "attributes": {
              "name": "Подрядчики IT",
              "crmid": "19"
            },
            "meta": {
              "created_at": "2021-06-16T13:41:10.000000Z",
              "updated_at": "2021-06-18T11:50:26.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/departments\/6"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/departments\/6\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/departments\/6\/employees"
                }
              }
            }
          },
          {
            "type": "departments",
            "id": "7",
            "attributes": {
              "name": "Руководство",
              "crmid": "20"
            },
            "meta": {
              "created_at": "2021-06-16T13:41:10.000000Z",
              "updated_at": "2021-06-18T11:50:26.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/departments\/7"
            },
            "relationships": {
              "employees": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/departments\/7\/relationships\/employees",
                  "related": "http:\/\/tsnnedv.test:8000\/departments\/7\/employees"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 33,
            "count": 20,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 2
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/departments?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/departments?page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/departments?page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/departments?page%5Bnumber%5D=2"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fc17852cd74441fc88923811fd9e158a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_9b8a033bec9949518d03b6a30e18c118
    authentication: {}
    metaSortKey: -1614851636845.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9bd62b57558049d388277177772a748c
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1629971469082
    created: 1629971469082
    url: "{{ _.BASE_URL }}/employees?filter[is_agent]=true"
    name: Get agents list
    description: >-
      Пример применения фильтра при получении списка сотрудников. В данном
      примере мы получаем всех сотрудников с меткой is_agent, т.е. всех агентов
      компании.

      Получаем следующий формат ответа:

      ```json

      {
        "data": [
          {
            "type": "employees",
            "id": "1",
            "attributes": {
              "first_name": "Jack",
              "last_name": "Ortiz",
              "middle_name": "Prof. Jesse Reynolds MD",
              "position": "iusto",
              "is_agent": true,
              "phone": "1-857-842-9507",
              "email": "hkunze@kuhn.biz",
              "is_best": false,
              "description": "Sit omnis officiis officia aliquam nobis optio voluptates.",
              "office_id": 5,
              "avatar": {
                "id": 71,
                "url": "http:\/\/tsnnedv.test\/storage\/71\/1.jpg",
                "size": 426095,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test\/employees\/1"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test\/employees\/1\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test\/employees\/1\/comments"
                }
              }
            }
          },
          {
            "type": "employees",
            "id": "2",
            "attributes": {
              "first_name": "Kristin",
              "last_name": "Hettinger",
              "middle_name": "Marianna Howell",
              "position": "quae",
              "is_agent": true,
              "phone": "+1-892-849-7876",
              "email": "maurine20@yahoo.com",
              "is_best": false,
              "description": "Qui et blanditiis aspernatur doloremque eligendi voluptatem.",
              "office_id": 3,
              "avatar": {
                "id": 72,
                "url": "http:\/\/tsnnedv.test\/storage\/72\/2.jpg",
                "size": 297268,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-02T07:14:41.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test\/employees\/2"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test\/employees\/2\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test\/employees\/2\/comments"
                }
              }
            }
          },
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?filter%5Bis_agent%5D=true&page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?filter%5Bis_agent%5D=true&page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?filter%5Bis_agent%5D=true&page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/employees?filter%5Bis_agent%5D=true&page%5Bnumber%5D=3"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fc17852cd74441fc88923811fd9e158a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_9b8a033bec9949518d03b6a30e18c118
    authentication: {}
    metaSortKey: -1614851136636
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_4f2659f778fe439fbf7aa2cc3de99235
    parentId: fld_0532ba615de54e37adf8830a3a569861
    modified: 1629971469085
    created: 1629971469085
    url: "{{ _.BASE_URL }}/offices/6/employees"
    name: Get employees By office ID
    description: >-
      Получаем список всех сотрудников, работающих в указанном офисе. В запросе
      следует передать id офиса. Пример ответа:


      ```json

      {
        "data": [
          {
            "type": "employees",
            "id": "5",
            "attributes": {
              "first_name": "Nicolas",
              "last_name": "Pacocha",
              "middle_name": "Gina Cassin",
              "position": "repudiandae",
              "is_agent": true,
              "phone": "+74958886758",
              "email": "mellie03@yahoo.com",
              "is_best": true,
              "description": "Qui quisquam exercitationem blanditiis.",
              "office_id": 6,
              "avatar": {
                "id": 75,
                "url": "http:\/\/tsnnedv.test\/storage\/75\/2.jpg",
                "size": 297268,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:41.000000Z",
              "updated_at": "2021-04-19T10:10:12.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test\/employees\/5"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test\/employees\/5\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test\/employees\/5\/comments"
                }
              }
            }
          },
          {
            "type": "employees",
            "id": "43",
            "attributes": {
              "first_name": "Leon",
              "last_name": "O'Conner",
              "middle_name": "Candelario Buckridge DDS",
              "position": "officiis",
              "is_agent": true,
              "phone": "+74958886758",
              "email": "reilly.andreane@stokes.com",
              "is_best": false,
              "description": "Esse impedit reprehenderit autem autem hic.",
              "office_id": 6,
              "avatar": {
                "id": 143,
                "url": "http:\/\/tsnnedv.test\/storage\/143\/2.jpg",
                "size": 297268,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:15:04.000000Z",
              "updated_at": "2021-04-19T10:10:12.000000Z",
              "deleted_at": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test\/employees\/43"
            },
            "relationships": {
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test\/employees\/43\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test\/employees\/43\/comments"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fc17852cd74441fc88923811fd9e158a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_9b8a033bec9949518d03b6a30e18c118
    authentication: {}
    metaSortKey: -1614850636426.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_29e817295a294ae8b12b674daa8d0918
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1648046673374
    created: 1635495955833
    url: "{{ _.BASE_URL }}/immovables/search"
    name: Search Immovables
    description: Поиск объектов по ключевым словам. Поиск осуществлятся по
      ElasticSearch, по всей карточки объекта недвижимости. Сам запрос
      необходимо передавать в get-параметре query.
    method: GET
    body: {}
    parameters:
      - id: pair_9259d287143b4be0a2eb3170fe068f54
        name: query
        value: id248486
        description: ""
        disabled: false
    headers:
      - id: pair_ee7154802f4c4625b497b5311b7956be
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_3d4f4bf565664c5dba1d5c1725ed75bc
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1635495955833
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_d1c5fd89e1f44a53b93232c6cf694f36
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469059
    created: 1629971469059
    name: Immovables
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614844908215
    _type: request_group
  - _id: req_19346cd3ac6842af9d36115102bc8966
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1631773200113
    created: 1631773091275
    url: "{{ _.BASE_URL }}/infrastructure-type"
    name: Infrastructure Types
    description: |-
      Справочник типов "Тип инфраструктуры". Возвращаемые значения:

      ```json
      {
        "data": [
          {
            "value": "security",
            "key": "SECURITY",
            "description": "Безопасность"
          },
          {
            "value": "parking",
            "key": "PARKING",
            "description": "Парковка"
          },
          {
            "value": "commercial-parking",
            "key": "COMMERCIAL_PARKING",
            "description": "Коммерческая парковка"
          },
          {
            "value": "infrastructure",
            "key": "INFRASTRUCTURE",
            "description": "Инфраструктура"
          },
          {
            "value": "equipment",
            "key": "EQUIPMENT",
            "description": "Оборудование"
          },
          {
            "value": "court",
            "key": "COURT",
            "description": "Благоустройство двора"
          },
          {
            "value": "other",
            "key": "OTHER",
            "description": "Прочее"
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_131da31aa98d4a788214caf925ec299e
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_6673ce0784a34caead0aee0c5110bbca
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1631773091366
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_18fc9ebd95e844ccbbedd7f8daaa37ba
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469078
    created: 1629971469078
    url: "{{ _.BASE_URL }}/builders"
    name: Get Builder List
    description: "Получение списка застройщиков и ЖК. В результате мы получаем
      массив объектов, состоящий из двух полей: value и type. Тип может состоять
      из двух значений - building_name или builder_name. Первое - это ЖК, второе
      - застройщик"
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_180d4111a31b4695bcecbdeedd48638e
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_fab6ca8c68b04536a826ab39de8e63b9
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1629883133482
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_5db872637f7946fca4a9af7089067436
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1630054327387
    created: 1629971469074
    url: "{{ _.BASE_URL }}/immovables"
    name: Immovables advanced search
    description: >-
      Расширенный поиск объектов недвижимости по различным параметрам.
      Поддерживаемые фильтры:

      * `filter[city]=Москва` - ищем по названию города. Точное совпадение по слову.

      * `filter[appartment.builder_name]=Ромаш` - поиск по названию застройщика. Пытаемся найти слово Ромашка

      * `filter[appartment.building_name]=Мурав` - поиск по названию ЖК. Пытаемся найти слово Муравейник

      * `filter[appartment.flf]=f,l` - убираем первый и последний этаж

      * `filter[appartment.repair_type]=euro` - поиск по типу ремонта. Возможные варианты: cosmetic, euro, design, no-repair

      * `filter[is_rent]=true` - фильтр "Купить или снять". Если нужна только аренда, ставим true. Для покупки - false

      * `filter[is_sold]=false` - Показываем только не проданные объекты

      * `filter[is_top_ten]=true` - Показывавем только объекты, входящие в ТОП10

      * `filter[is_avansed]=true` - Показывавем только авансированные объекты

      * `filter[three_d_tour_url]=http` - Наличие панорамы

      * `filter[is_available_online]=true` - Доступен онлайн показ или нет

      * `filter[model_name]=Appartment` - тип объекта недвижимости. Допустимые значения: Appartment, Commercial, CommercialLand, Garage, House

      * `filter[appartment.is_studio]=true` - является квартира студией или нет. Студия у нас сейчас только в квартирах

      * `filter[appartment.is_appartments]=true` - показываем только аппартаменты

      * `filter[appartment.rooms]=5,6,7,8` - ищем количество комнат. 5+ пока не поддерживается, рекомендуется передавать значения через запятую

      * `filter[price]=>1000000` - ищем объекты по цене больше 1 млн. Стоит иметь в виду, что цены передаются в копейках, целым числом

      * `filter[price]=<500000` - ищем объекты по цене менее 500 тыс. Стоит иметь в виду, что цены передаются в копейках, целым числом

      * `filter[price_square]=>70000` - фильтруем объекты по цене за квадратный метр

      * `filter[appartment.room_only]=true` - показываем только объекты "Комната"

      * `filter[price][]=1000000&filter[price][]=1500000` - ищем объекты по цене от 1 млн до 2 млн

      * `filter[price_square][]=50000&filter[price_square][]=70000` - ищем объекты по цене за квадратный метр от 50 тыс до 70 тыс

      * `filter[appartment.is_new_building]=true` - ищем только новостройки

      * `filter[commercial.type]=10,11` - фильтр по типу коммерческой недвижимости (Гараж, автосервис). Типы коммерческой недвижимости есть в отдельном роуте

      * `?filter[model_name]=Commercial&filter[commercial.building_class]=A,A+` - Фильтр по классу здания

      * `filter[house.house_direction]=North` - направление от шоссе. Доступные варианты: North, North-East, East, South-East, South, South-West, West, North-West

      * `filter[house.type]` - тип дома. Возможные варианты: default (просто дом), tauhnouse (таунхаус), parthouse (часть дома), land (земля)

      * `filter[distance_by_foot]=<50` - расстояние до метро пешком, до 50 минут

      * `filter[distance_by_car]=<10` - расстояние до метро на машине, до 10 минут

      * `filter[distance_to_mkad]=<20` - расстояние до МКАД, до 20 км

      * `filter[total_space][]=50&filter[total_space][]=80` - объекты с площадью от 50 до 80 кв м

      * `?filter[model_name]=Appartment&filter[appartment.kitchen_space][]=50&filter[appartment.kitchen_space][]=80` - объекты с площадью кухни от 50 до 80 кв м

      * `?filter[model_name]=CommercialLand&filter[commercialLand.land_square][]=100&filter[commercialLand.land_square][]=200` - Коммерческие земли площадью от 100 до 200

      * `?filter[model_name]=House&filter[house.land_square][]=2&filter[house.land_square][]=3` - Дома площадью земельного участка от 2 до 3

      * `?filter[model_name]=Appartment&filter[appartment.floor][]=2&filter[appartment.floor][]=4` - ищем квартиры между 2 и 4 этажом

      * `?filter[model_name]=Commercial&filter[commercial.floor][]=2&filter[commercial.floor][]=4` - ищем коммерческую недвижимость между 2 и 4 этажом

      * `?filter[model_name]=Appartment&filter[appartment.floors_total][]=2&filter[appartment.floors_total][]=4` - Дома с общей этажностью между 2 и 4 этажом

      * `?filter[model_name]=Commercial&filter[commercial.floors_total][]=2&filter[commercial.floors_total][]=4` - коммерческая недвижимость с общей этажностью от 2 до 4

      * * `?filter[model_name]=Appartment&filter[appartment.house_type]=btick,monolith` - Квартиры с типом дома кирпичный и монолитный. Поддерживаются следующие значения: brick, monolith, wood, panel, block. Поддерживаются и другие типы недвижимости: Commercial, House

      * `?filter[model_name]=Appartment&filter[appartment.build_at][]=2000&filter[appartment.build_at][]=2005` - Квартиры с годом постройки 2000-2005. Поддерживается также commercial.build_at. Внимание! У домов фильтр называется по-другому: `house.year`

      * `?filter[model_name]=Appartment&filter[appartment.condition_level][]=3&filter[appartment.condition_level][]=5` - квартиры с состоянием от 3 до 5. Также поддерживается фильтр: commercial.condition_level, house.condition_level

      * `?filter[published_at]=>2011-05-06` - все объекты недвижимости с датой публикации после 6 мая 2011 года

      * `filter[house.land_type]` - Тип земельного участка. Варианты: izhs, sad, farm, lph, prom, dnp, investproekt. Для коммерческих земель фильтр называется commercialLand.land_type

      * `filter[garage.is_carplace]` - Получаем только машиноместа в гараже. Значения true or false.

      * `filter[video_url]=http` - все объекты с видеопрезентацией

      * `filter[infrastructures]=1,2&include=infrastructures` - поиск объектов недвижимости по айди инфраструктур. Аналогичный принцип применяется для фильтра outviews (вид из окна)

      * `filter[published_at_period]=3` - количество дней для периода, т.е. в этом случае мы из сегодняшнего вычитаем 3 дня. 0 - ищет только за сегодня.

      * `filter[for_mortgage]=true` - Показываем только объекты, доступные в ипотеку
    method: GET
    body: {}
    parameters:
      - name: filter[radius_coord][distance]
        value: "1000"
        id: pair_7a66178eaa594943ad014cd80a37f090
        disabled: true
      - name: filter[radius_coord][lat]
        value: "55.9341445"
        id: pair_d8e2e55884944999b7ee393ad7cd607e
        disabled: true
      - name: filter[radius_coord][lon]
        value: "37.9199825"
        id: pair_50fba336956648e094f4b888974c104c
        disabled: true
      - id: pair_d3fbb965bca4405c9b364ad89456f28d
        name: filter[model_name]
        value: Appartment
        description: ""
        disabled: false
      - id: pair_b639295566dc4d1da5fcc61d3a8f2789
        name: filter[appartment.repair_type]
        value: euro
        description: ""
        disabled: true
      - id: pair_fe58291968d341b08afbebc1ad41267e
        name: filter[appartment.flf]
        value: f
        description: ""
        disabled: true
      - id: pair_1fb625e01acb452fbd6759c14c05dbcc
        name: filter[distance_to_mkad]
        value: ">10"
        description: ""
        disabled: true
      - id: pair_ad8c90c125194d6cb31453c69bd1f025
        name: filter[published_at_period]
        value: "3"
        description: ""
        disabled: true
      - id: pair_6e3e3d75df4f4e02ae0fed3a3106aaeb
        name: filter[for_mortgage]
        value: "true"
        description: ""
    headers:
      - id: pair_0c865c1ee30640d39dfed70b5e2e8832
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_ac2c6330573e4b39929dab8f6b154ac2
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1622613983493
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_567ec4c1c38c4baea72dbd499365fd0f
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1630057315503
    created: 1629971469073
    url: "{{ _.BASE_URL }}/nearests/254/1000"
    name: Immovable by distance
    description: >-
      Получаем ближайшие объекты недвижимости в указанном радиусе.

      nearests/{id}/{distance}

      где id - номер объекта, по которому ищем ближайшие.

      distance - радиус в метрах


      Точка входа поддерживает пагинацию. Но стоит иметь в виду, что после получения результата сервер убирает объект, по которому ищется ближайшие, поэтому если будет указано page[size]=3, то по факту он выдаст не 3 результата, а два.
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2d7e8fed6a254a8cb84e0d0a7de1f7e1
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_3a75ff0e66b245be926bd85b100bcf68
    authentication: {}
    metaSortKey: -1622183740715
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_5a07d70f964748859156dae4c38a3471
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1650562814612
    created: 1629971469071
    url: "{{ _.BASE_URL }}/immovables"
    name: Store Immovable
    description: >-
      Производит сохранение объекта недвижимости. Передаётся json-объект с
      данными по недвижимости. 


      Следует обратит внимание на следующие поля:

      * photos - массив фотографий, предварительно добавленных в систему

      * addresses - объект с адресом, который будет привязан к недвижимости

      * Appartment - название модели (берётся из model_name)


      Доступный перечень моделей:

      * Appartment - квартиры

      * Commercial - коммерческая недвижимость

      * CommercialLand - Земли под коммерческую недвижимость

      * Garage - Гаражи

      * House - Дома


      В качестве картинок можно передать массив вида:

      ```json

      "photos": [
      				{
      					"isMain": true,
      					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/488999",
      					"size": 191562
      				},
      				{
      					"isMain": false,
      					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489000",
      					"size": 205353
      				}
      			]
      ```


      # Доступные поля

      ## Appartments:


      * rooms - integer

      * is_studio - boolean

      * is_appartments - boolean

      * app_no - string

      * kitchen_space - float

      * live_space - float

      * floor - int

      * floors_total - int

      * room_height - float

      * sanuzel - enum - integrated, divided, multiple

      * has_balcony - bool

      * is_replanning - bool

      * repair_type - enum - cosmetic, euro, design, no-repair

      * build_at - int

      * house_type - enum - brick, monolith, wood, panel, block, stone, ...

      * elevators - int

      * has_baggage_elevator - bool;

      * has_gaz - bool;

      * has_trash_cute - bool;

      * years_in_property - int

      * registered_no - int;

      * is_children_registered - bool;

      * condition_level - int;

      * has_online_tour - bool;

      * has_plan_solution - bool;

      * has_trash_chute - bool;

      * room_only - bool;

      * is_sunny_side - bool;

      * rooms_qty - int;

      * room_space - float;

      * is_new_building - bool;

      * builder_name - string;

      * building_name - string;

      * sale_start - date;


      ## Commercial


      * type - enum - Автомойка, Автосервис, Ателье ...;

      * floor - int;

      * floors_total - int;

      * rooms - int;

      * building_type - enum - businesss_center, storage_room, trade_center, separate_building;

      * is_separate_entrance - bool;

      * condition - enum - shell_core, smoothing, ready_to_enter, construction;

      * house_type - enum - brick, monolith, wood, panel, block, stone ...;

      * power - int;

      * has_legal_address - bool;

      * is_busy - bool;

      * heating - bool;

      * access - enum - free, restricted;

      * build_at - int;

      * condition_level - int;

      * building_class - enum - A, A+, B, B+, C, C+;

      * building_name - string;

      * rent_type - enum - Direct, Subrent;

      * tax_type - enum - USN, NDS;


      ## Commercial Land

      * electricity - bool;

      * water_supply - bool;

      * gaz - bool;

      * canalization - bool;

      * land_square - float;

      * rent_type - enum - Direct, Subrent;

      * tax_type - enum - USN, NDS;

      * land_type - enum - izhs, sad, farm, lph, prom, dnp, investproekt;


      ## Garage

      * status - enum - In property, Cooperative, Doverennost;

      * name - string;

      * access - enum - free, restricted;

      * security - bool;

      * electricity - bool;

      * heating - bool;

      * water - bool;

      * is_carplace - bool;

      * floor - int;

      * floors_total - int


      ## House

      * floors_total - int;

      * land_square - float;

      * land_type - enum;

      * rooms - int;

      * year - int;

      * house_type - int;

      * house_direction - enum - Алтуфьевское, Боровское, Варшавское ...;

      * is_toilet_outdoor - bool;

      * heating - bool;

      * electricity - bool;

      * water_supply - bool;

      * canalization - bool;

      * garage - bool;

      * sauna - bool;

      * basin - bool;

      * condition_level - int;

      * registered_no - int;

      * is_children_registered - bool;

      * type - enum - default, tauhnouse, parthouse, land;

      * part_house - string;
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "data": {
            "type": "immovables",
            "attributes": {
              "is_active": true,
              "status": "Closed",
              "description": "Super mega appartment for any purposes again.",
              "label": "Good appartment",
              "is_sold": false,
              "is_hot": false,
              "discount_size": "9",
              "discount_type": "percent",
              "slug": "good-appartment-any-again",
              "is_rent": false,
              "video_url": null,
              "torg_available": true,
              "kadastr_no": "90w2703d-3e7c-39c9-9d6b-cd4c4bf531aa",
              "sale_type": "alternate",
              "properties_no": 2,
              "is_children_in_property": true,
              "deposit": 24,
              "deposit_months": null,
              "utilities_included": false,
              "crmid": "24976ec2-2fe1-3d25-84b8-9d01623d71f4",
              "is_available_online": true,
              "distance_by_foot": "669.03",
              "distance_by_car": "1076.6",
              "model_name": "Appartment",
              "price": 3578654,
        			"photos": ["610132e77df023.38861369-1627468519"],
              "addresses": {
                "street": "Росинка, без улицы",
                "postal_code": null,
                "label": "Дом, Красногорский р-н",
                "organization": null,
                "country_code": "ru",
                "state": null,
                "family_name": "dom-krasnogorskiy-r-n_id220233",
                "given_name": "Дом, Красногорский р-н",
                "city": "Москва",
                "latitude": 55.7896295,
                "longitude": 37.1834748,
                "is_primary": true,
                "is_billing": true,
                "is_shipping": true     
              },
              "Appartment": {
                "rooms": 2,
                "is_studio": false,
                "app_no": "15",
                "total_space": "142.1",
                "kitchen_space": "24.8",
                "live_space": "40.4",
                "floor": 17,
                "floors_total": 13,
                "room_height": "98.11",
                "sanuzel": "integrated",
                "balcony": 4,
                "is_replanning": false,
                "repair_type": "design",
                "build_at": 1978,
                "house_type": "wood",
                "elevators": 2,
                "has_baggage_elevator": false,
                "has_gaz": false,
                "has_trash_chute": true,
                "years_in_property": 1,
                "registered_no": 2,
                "is_children_registered": false,
                "condition_level": 4,
                "has_online_tour": true,
                "has_plan_solution": false,
                "room_only": false,
                "is_sunny_side": true,
                "rooms_qty": null,
                "room_space": "45.11",
                "sale_start": "2021-07-01"
              },
        			"Commercial": [],
        			"CommercialLand": [],
        			"Garage": [],
        			"House": []
            }
          }
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_339daf46f88141c38adb71e6f2927ab1
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fbe8bd3e37ae45048989d06501cd66a9
    authentication: {}
    metaSortKey: -1621248774115
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0925520b7817432f9fbe81837f42e485
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469077
    created: 1629971469077
    url: "{{ _.BASE_URL }}/immovables/crm/220233"
    name: Update Immovable
    description: >-
      Производит изменение объекта недвижимости. Передаётся json-объект с
      данными по недвижимости. 

      В адресной строке мы передаём slug
    method: PUT
    body:
      mimeType: application/json
      text: >-
        {
        	"data": {
        		"type": "immovables",
        		"id": "160",
        		"attributes": {
        			"is_active": true,
        			"status": "Processing",
        			"description": "220233-Сдается загородный  дом город Москва, Новорижское шоссе  на территории коттеджного поселка  «Росинка». Общая площадь дома 270 метров, 2 этажа.\nПервый этаж включает: холл, кухня-столовая, гостиная,  спальня и  санузел, сауна  и душевая, прачечная.\nВторой этаж: холл,  3  спальни, 3 санузла,  3  гардеробные,  гостевая  и бар-кухня.\nДом полностью меблирован.\nВсе удобства и качественный ремонт для круглогодичного комфортного проживания.\nОбустроенный  участок , зона отдыха, мангал.\nВсе центральные коммуникации. Сдается на длительный срок.22\n",
        			"label": "Дом, Красногорский р-н",
        			"is_sold": false,
        			"is_hot": false,
        			"discount_size": "9",
        			"discount_type": "percent",
        			"slug": "dom_krasnogorskiy_r_n_id220233",
        			"is_rent": false,
        			"video_url": null,
        			"torg_available": true,
        			"kadastr_no": "90w2703d-3e7c-39c9-9d6b-cd4c4bf531aa",
        			"sale_type": "alternate",
        			"properties_no": 2,
        			"is_children_in_property": true,
        			"deposit": 24,
        			"deposit_months": null,
        			"utilities_included": false,
        			"crmid": "220233",
        			"is_available_online": true,
        			"distance_by_foot": "669.03",
        			"distance_by_car": "1076.6",
        			"model_name": "House",
        			"price": 3578654,
        			"photos": [
        				{
        					"isMain": true,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/488999",
        					"size": 191562
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489000",
        					"size": 205353
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489001",
        					"size": 231990
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489002",
        					"size": 222381
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489003",
        					"size": 178863
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489004",
        					"size": 209361
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489005",
        					"size": 201463
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489006",
        					"size": 213179
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489007",
        					"size": 206394
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489008",
        					"size": 196084
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489009",
        					"size": 216277
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489010",
        					"size": 207181
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489011",
        					"size": 216585
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489012",
        					"size": 141787
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489013",
        					"size": 111994
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489014",
        					"size": 144161
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489015",
        					"size": 178334
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489016",
        					"size": 207181
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489017",
        					"size": 172232
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489018",
        					"size": 210725
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489019",
        					"size": 191476
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489025",
        					"size": 150841
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489026",
        					"size": 135079
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489027",
        					"size": 169846
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489028",
        					"size": 206624
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489029",
        					"size": 152033
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489030",
        					"size": 121830
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489031",
        					"size": null
        				},
        				{
        					"isMain": false,
        					"url": "http:\/\/base.tsnnedv.ru\/Publisher\/ItemPicture\/489032",
        					"size": 140551
        				}
        			],
        			"addresses": {
                "street": "Росинка, без улицы",
                "postal_code": null,
                "label": "Дом, Красногорский р-н",
                "organization": null,
                "country_code": "ru",
                "state": null,
                "family_name": "dom-krasnogorskiy-r-n_id220233",
                "given_name": "Дом, Красногорский р-н",
                "city": "Росинка",
                "latitude": 55.7896295,
                "longitude": 37.1834748,
                "is_primary": true,
                "is_billing": true,
                "is_shipping": true
        			},
        			"Appartment": [],
        			"Commercial": [],
        			"CommercialLand": [],
        			"Garage": [],
        			"House": {
        				"id": 160,
        				"floors_total": 2,
        				"land_square": 12,
        				"land_type": "sad",
        				"rooms": 7,
        				"year": null,
        				"house_type": "block",
        				"is_toilet_outdoor": false,
        				"heating": true,
        				"electricity": true,
        				"water_supply": true,
        				"canalization": true,
        				"garage": false,
        				"sauna": false,
        				"basin": false,
        				"condition_level": null,
        				"registered_no": null,
        				"is_children_registered": false,
        				"type": "default",
        				"part_house": null,
        				"house_direction": "Новорижское"
        			}
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_339daf46f88141c38adb71e6f2927ab1
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fbe8bd3e37ae45048989d06501cd66a9
    authentication: {}
    metaSortKey: -1620830098105
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c89a33f0116947b9bee09c0ece8311c2
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469070
    created: 1629971469070
    url: "{{ _.BASE_URL }}/prices/119/current"
    name: Get Current Immovable Price
    description: >-
      Получаем текущую и актуальную цену у передаваемого объекта недвижимости. В
      запросе передаём id объекта недвижимости.


      В ответ получаем следующее:

      ```json

      {
        "data": {
          "type": "prices",
          "id": "366",
          "attributes": {
            "value": {
              "amount": 100500,
              "value": 1005,
              "currency": "₽"
            },
            "immovable_id": 119
          },
          "meta": {
            "created_at": "2021-04-02T07:15:45.000000Z",
            "updated_at": "2021-04-02T07:15:45.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/prices\/366"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_48bf252978b249b0a357b7c3d405317b
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_1110f045fe9a4d0e821d88e89997a77d
    authentication: {}
    metaSortKey: -1620376342629
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0a192b1e1ee041da9fe50591b7732bd0
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469067
    created: 1629971469067
    url: "{{ _.BASE_URL }}/immovables/119/prices?sort=id"
    name: Price history
    description: >-
      Здесь можно получить историю изменения цен по объекту недвижимости. В
      запросе мы передаёт id объекта.


      Поддерживается сортировка по id


      В ответ мы получаем массив с ценами, где цена хранится в поле value->value в десятичном формате или value->amount в копейках.


      ```json

      {
        "data": [
          {
            "type": "prices",
            "id": "366",
            "attributes": {
              "value": {
                "amount": 100500,
                "value": 1005,
                "currency": "₽"
              },
              "immovable_id": 119
            },
            "meta": {
              "created_at": "2021-04-02T07:15:45.000000Z",
              "updated_at": "2021-04-02T07:15:45.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/prices\/366"
            }
          },
          {
            "type": "prices",
            "id": "357",
            "attributes": {
              "value": {
                "amount": 7090982,
                "value": 70909.82,
                "currency": "₽"
              },
              "immovable_id": 119
            },
            "meta": {
              "created_at": "2021-04-02T07:15:45.000000Z",
              "updated_at": "2021-04-02T07:15:45.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/prices\/357"
            }
          },
          {
            "type": "prices",
            "id": "356",
            "attributes": {
              "value": {
                "amount": 68822573,
                "value": 688225.73,
                "currency": "₽"
              },
              "immovable_id": 119
            },
            "meta": {
              "created_at": "2021-04-02T07:15:45.000000Z",
              "updated_at": "2021-04-02T07:15:45.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/prices\/356"
            }
          },
          {
            "type": "prices",
            "id": "355",
            "attributes": {
              "value": {
                "amount": 40057021,
                "value": 400570.21,
                "currency": "₽"
              },
              "immovable_id": 119
            },
            "meta": {
              "created_at": "2021-04-02T07:15:45.000000Z",
              "updated_at": "2021-04-02T07:15:45.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/prices\/355"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_5f04203111c242b59442d3f06f8c0d42
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_25af554f4e2e48a0ad316f0babfe5634
    authentication: {}
    metaSortKey: -1614929349363
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e464e3e234174ddaac199e5131b11e4b
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469068
    created: 1629971469068
    url: "{{ _.BASE_URL }}/immovables/categories"
    name: Get immovable categories
    description: >-
      Здесь можно получить список всех категорий объектов недвижимости или
      содержимое поля model_name


      Сортировки и фильтрации здесь не поддерживаются


      ```json

      {
        "data": [
          {
            "type": "model_name",
            "id": "APPARTMENT",
            "attributes": {
              "key": "APPARTMENT",
              "value": "Appartment",
              "description": "Жилая недвижимость",
              "immovables_count": 25,
              "image": "http:\/\/tsnnedv.test:8000\/images\/APPARTMENT.jpg"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/model_name\/APPARTMENT"
            }
          },
          {
            "type": "model_name",
            "id": "COMMERCIAL",
            "attributes": {
              "key": "COMMERCIAL",
              "value": "Commercial",
              "description": "Коммерческая недвижимость",
              "immovables_count": 18,
              "image": "http:\/\/tsnnedv.test:8000\/images\/COMMERCIAL.jpg"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/model_name\/COMMERCIAL"
            }
          },
          {
            "type": "model_name",
            "id": "COMMERCIAL_LAND",
            "attributes": {
              "key": "COMMERCIAL_LAND",
              "value": "CommercialLand",
              "description": "Коммерческие участки",
              "immovables_count": 36,
              "image": "http:\/\/tsnnedv.test:8000\/images\/COMMERCIAL_LAND.jpg"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/model_name\/COMMERCIAL_LAND"
            }
          },
          {
            "type": "model_name",
            "id": "GARAGE",
            "attributes": {
              "key": "GARAGE",
              "value": "Garage",
              "description": "Гаражи",
              "immovables_count": 43,
              "image": "http:\/\/tsnnedv.test:8000\/images\/GARAGE.jpg"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/model_name\/GARAGE"
            }
          },
          {
            "type": "model_name",
            "id": "HOUSE",
            "attributes": {
              "key": "HOUSE",
              "value": "House",
              "description": "Дома",
              "immovables_count": 32,
              "image": "http:\/\/tsnnedv.test:8000\/images\/HOUSE.jpg"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/model_name\/HOUSE"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_5f04203111c242b59442d3f06f8c0d42
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_25af554f4e2e48a0ad316f0babfe5634
    authentication: {}
    metaSortKey: -1614927683226.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_5c194c97aac74b439b3f8b845a232c73
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1649350088204
    created: 1629971469065
    url: "{{ _.BASE_URL }}/immovables"
    name: Get immovables list
    description: >-
      Получаем список всех объектов недвижимости. Фотографии к объектам
      содержатся в массиве media.


      Поля, на которые следует обратить внимание:

      * balcony - количество балконов

      * price - цена объекта недвижимости

      * label - заголовок объявления


      Доступные связи:

      * prices - если понадобится показать список цен

      * comments - для отображения всех комментариев к объекту

      * address - связанный адрес

      * extra - дополнительная информация по объекту

      * infrastructures - связанные инфраструктуры

      * outviews - вид из окна

      * employee - сотрудник


      Доступные сортировки:

      * created_at

      * published_at

      * is_special

      * total_space


      Доступные фильтры:

      * slug

      * model_name

      * is_exclusive

      * is_special

      * is_hot


      Example response:

      ```json

      {
        "data": [
          {
            "type": "immovables",
            "id": "10",
            "attributes": {
              "is_active": true,
              "status": {
                "value": "Closed",
                "key": "CLOSED",
                "description": "Закрыт"
              },
              "description": "Reiciendis perferendis eveniet tempore mollitia molestiae quae. Qui dolorem a quae. Ea dolorem iure perferendis expedita asperiores. Dolor placeat eligendi nostrum itaque facere voluptatem.",
              "label": "suscipit",
              "is_sold": true,
              "is_hot": null,
              "is_exclusive": false,
              "discount_size": "4117.34",
              "discount_type": {
                "value": "money",
                "key": "MONEY",
                "description": "В деньгах"
              },
              "slug": "suscipit-est-qui-et-et-praesentium",
              "is_rent": true,
              "video_url": "http:\/\/jast.com\/harum-exercitationem-laborum-ratione.html",
              "torg_available": false,
              "kadastr_no": "1b5636ae-48ab-34ba-9171-43a557b6497b",
              "sale_type": {
                "value": "free",
                "key": "FREE",
                "description": "Свободная продажа"
              },
              "properties_no": 1,
              "is_children_in_property": false,
              "deposit": {
                "amount": 791,
                "value": 7.91,
                "currency": "₽"
              },
              "deposit_months": 4,
              "utilities_included": true,
              "crmid": "f0f1b3ae-da37-3731-944d-3fd3cff0f016",
              "is_available_online": false,
              "distance_by_foot": "365.78",
              "distance_by_car": "725.9",
              "model_name": {
                "value": "Appartment",
                "key": "APPARTMENT",
                "description": "Жилая недвижимость"
              },
              "price": null,
              "media": [
                {
                  "id": 120,
                  "url": "http:\/\/tsnnedv.test:8000\/storage\/120\/6.jpg",
                  "size": 571360,
                  "mime_type": "image\/jpeg",
                  "responsive": []
                }
              ],
              "addresses": [],
              "extra": {
                "id": 10,
                "rooms": 8,
                "is_studio": false,
                "app_no": "82",
                "total_space": "25.5",
                "kitchen_space": "55.1",
                "live_space": "33.3",
                "floor": 15,
                "floors_total": 13,
                "room_height": "49.27",
                "sanuzel": {
                  "value": "integrated",
                  "key": "INTEGRATED",
                  "description": "Совмещённый"
                },
                "balcony": 4,
                "is_replanning": true,
                "repair_type": {
                  "value": "cosmetic",
                  "key": "COSMETIC",
                  "description": "Косметический"
                },
                "build_at": 1976,
                "house_type": {
                  "value": "panel",
                  "key": "PANEL",
                  "description": "Панельный"
                },
                "elevators": 1,
                "has_baggage_elevator": true,
                "has_gaz": true,
                "has_trash_chute": false,
                "years_in_property": 1,
                "registered_no": 4,
                "is_children_registered": false,
                "condition_level": 4,
                "has_online_tour": true,
                "has_plan_solution": true,
                "room_only": false,
                "is_sunny_side": null,
                "rooms_qty": null,
                "room_space": "93.96",
                "sale_start": null
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:55.000000Z",
              "updated_at": "2021-04-02T07:14:55.000000Z",
              "deleted_at": null,
              "published_at": "1994-03-25 03:01:15"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/immovables\/10"
            },
            "relationships": {
              "extra": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/10\/relationships\/extra",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/10\/extra"
                }
              },
              "address": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/10\/relationships\/address",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/10\/address"
                }
              },
              "prices": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/10\/relationships\/prices",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/10\/prices"
                }
              },
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/10\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/10\/comments"
                }
              },
              "infrastructures": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/10\/relationships\/infrastructures",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/10\/infrastructures"
                }
              },
              "employee": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/10\/relationships\/employee",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/10\/employee"
                }
              }
            }
          },
          {
            "type": "immovables",
            "id": "12",
            "attributes": {
              "is_active": true,
              "status": {
                "value": "Premium",
                "key": "PREMIUM",
                "description": "VIP"
              },
              "description": "Ea quis consectetur non ipsum quos nostrum. Et molestias adipisci molestias sint. Iure modi quaerat neque assumenda.",
              "label": "nisi",
              "is_sold": true,
              "is_hot": null,
              "is_exclusive": false,
              "discount_size": "9660.61",
              "discount_type": {
                "value": "percent",
                "key": "PERCENT",
                "description": "В процентах"
              },
              "slug": "et-molestiae-ut-sed-fugit-perspiciatis-sunt-eius",
              "is_rent": false,
              "video_url": "http:\/\/www.howell.info\/culpa-quia-ducimus-magnam-ut-iusto-aut-facere.html",
              "torg_available": true,
              "kadastr_no": "bd4f35d0-0149-3fe1-8676-20460481c306",
              "sale_type": {
                "value": "alternate",
                "key": "ALTERNATE",
                "description": "Альтернативная продажа"
              },
              "properties_no": 9,
              "is_children_in_property": true,
              "deposit": {
                "amount": 867,
                "value": 8.67,
                "currency": "₽"
              },
              "deposit_months": 8,
              "utilities_included": true,
              "crmid": "ffc50e65-6be7-385e-9a82-2025faa04303",
              "is_available_online": false,
              "distance_by_foot": "1631.83",
              "distance_by_car": "561.46",
              "model_name": {
                "value": "Appartment",
                "key": "APPARTMENT",
                "description": "Жилая недвижимость"
              },
              "price": null,
              "media": [
                {
                  "id": 122,
                  "url": "http:\/\/tsnnedv.test:8000\/storage\/122\/1.jpg",
                  "size": 530382,
                  "mime_type": "image\/jpeg",
                  "responsive": []
                }
              ],
              "addresses": [],
              "extra": {
                "id": 12,
                "rooms": 4,
                "is_studio": true,
                "app_no": "85",
                "total_space": "196.8",
                "kitchen_space": "38.6",
                "live_space": "92",
                "floor": 18,
                "floors_total": 8,
                "room_height": "111.02",
                "sanuzel": {
                  "value": "integrated",
                  "key": "INTEGRATED",
                  "description": "Совмещённый"
                },
                "balcony": 2,
                "is_replanning": true,
                "repair_type": {
                  "value": "cosmetic",
                  "key": "COSMETIC",
                  "description": "Косметический"
                },
                "build_at": 1953,
                "house_type": {
                  "value": "monolith",
                  "key": "MONOLITH",
                  "description": "Монолитный"
                },
                "elevators": 4,
                "has_baggage_elevator": true,
                "has_gaz": true,
                "has_trash_chute": true,
                "years_in_property": 20,
                "registered_no": 2,
                "is_children_registered": false,
                "condition_level": 0,
                "has_online_tour": false,
                "has_plan_solution": false,
                "room_only": true,
                "is_sunny_side": null,
                "rooms_qty": null,
                "room_space": "46.97",
                "sale_start": null
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:55.000000Z",
              "updated_at": "2021-04-02T07:14:55.000000Z",
              "deleted_at": null,
              "published_at": "2007-01-25 19:24:11"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/immovables\/12"
            },
            "relationships": {
              "extra": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/12\/relationships\/extra",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/12\/extra"
                }
              },
              "address": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/12\/relationships\/address",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/12\/address"
                }
              },
              "prices": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/12\/relationships\/prices",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/12\/prices"
                }
              },
              "comments": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/12\/relationships\/comments",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/12\/comments"
                }
              },
              "infrastructures": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/12\/relationships\/infrastructures",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/12\/infrastructures"
                }
              },
              "employee": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/immovables\/12\/relationships\/employee",
                  "related": "http:\/\/tsnnedv.test:8000\/immovables\/12\/employee"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/immovables?page%5Bsize%5D=20&sort=created_at&page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/immovables?page%5Bsize%5D=20&sort=created_at&page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/immovables?page%5Bsize%5D=20&sort=created_at&page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/immovables?page%5Bsize%5D=20&sort=created_at&page%5Bnumber%5D=7"
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_a4cd0c9dd4624ae79f0dae6bcf1ffdb2
        name: fields[immovables]
        value: id,label,slug,addresses,media
        description: ""
        disabled: true
      - id: pair_80078f8a84fb4e8487643e99c229dbf9
        name: include
        value: employee,underground
        description: ""
        disabled: true
      - id: pair_0da6401c9de44927a9c613b2d03ea20e
        name: filter[is_rent]
        value: "false"
        description: ""
        disabled: true
      - id: pair_f6899a6295a64ee7b2acfbfadbe2a918
        name: filter[model_name]
        value: Appartment
        description: ""
        disabled: true
      - id: pair_8e7a19ceb292451198cc2d362cbe1f4c
        name: filter[radius_coord][distance]
        value: "696"
        description: ""
        disabled: true
      - id: pair_51dd90010586455f946ad90da6c929f9
        name: filter[radius_coord][lat]
        value: "56.11376880288931"
        description: ""
        disabled: true
      - id: pair_518bc85950c041078c73998f697c21d9
        name: filter[radius_coord][lon]
        value: "38.10728975117187"
        description: ""
        disabled: true
      - id: pair_425347bc3a08430e90bf62112fbd0c30
        name: filter[coord_borders][ne][lat]
        value: "55.916476"
        description: ""
        disabled: true
      - id: pair_6f8cebc0e09c4662aaa00d17fae0cbc0
        name: filter[coord_borders][ne][lng]
        value: "38.895731"
        description: ""
        disabled: true
      - id: pair_328fe293119b4d0e8f05a890efb6d1be
        name: filter[coord_borders][sw][lat]
        value: "55.527377"
        description: ""
        disabled: true
      - id: pair_734678e135ba4382b071581f5376f5f9
        name: filter[coord_borders][sw][lng]
        value: "36.742411"
        description: ""
        disabled: true
      - id: pair_acc25fa980af4394aa7328281dc4c1c3
        name: page[size]
        value: "10"
        description: ""
        disabled: true
      - id: pair_885a94e0c5fd4432906f4434746b4ee0
        name: page[number]
        value: "2"
        description: ""
        disabled: true
      - id: pair_71424eaeaf9f40459e396d4daf54b8b9
        name: filter[addresses.city]
        value: Москва
        description: ""
        disabled: true
      - id: pair_d1b6efd55990437eb77308015fe6318c
        name: filter[underground.name]
        value: ВДНХ
        description: ""
        disabled: true
      - id: pair_62554658b36e47218786e70e0210a219
        name: filter[commercial.type]
        value: ПСН
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4c4905b6a9e74e2c87155e399dd04093
      - name: Content-Type
        value: application/vnd.ap
        description: ""
        id: pair_52dcb82e5cb74f37bbe68f0efae8fdc3
    authentication: {}
    metaSortKey: -1614858444735
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_575811d41bc74dc79bcc92764996a714
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469063
    created: 1629971469063
    url: "{{ _.BASE_URL }}/outviews/"
    name: Outviews list
    description: >-
      Содержимое справочника "Вид из окна". Нужен чаще всего для выпадающих
      списков:


      ```json

      {
        "data": [
          {
            "type": "outviews",
            "id": "1",
            "attributes": {
              "name": "Двор"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/outviews\/1"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/outviews\/1\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/outviews\/1\/immovables"
                }
              }
            }
          },
          {
            "type": "outviews",
            "id": "2",
            "attributes": {
              "name": "Водоём"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/outviews\/2"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/outviews\/2\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/outviews\/2\/immovables"
                }
              }
            }
          },
          {
            "type": "outviews",
            "id": "3",
            "attributes": {
              "name": "Улица"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/outviews\/3"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/outviews\/3\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/outviews\/3\/immovables"
                }
              }
            }
          },
          {
            "type": "outviews",
            "id": "4",
            "attributes": {
              "name": "Парк"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/outviews\/4"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/outviews\/4\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/outviews\/4\/immovables"
                }
              }
            }
          },
          {
            "type": "outviews",
            "id": "5",
            "attributes": {
              "name": "Лес"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/outviews\/5"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/outviews\/5\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/outviews\/5\/immovables"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_e21284d2e82740a3bfb35d934f78b67e
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_957e4ced240845a7b18c052335cf5d54
    authentication: {}
    metaSortKey: -1614846642105
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f427e779a85f4cd0982533fdbfefdaf8
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469061
    created: 1629971469061
    url: "{{ _.BASE_URL }}/infrastructures"
    name: Get infrastructure list
    description: >-
      Здесь можно получить список всех элементов инфраструктуры. Стоит иметь в
      виду, что тип - является значением списка. Value мы храним в базе данных,
      а description - отображаемое значение. В ответе также присутствует объект
      'icon' который содержит путь к иконке. 


      Перечень поддерживаемых типов инфраструктур:

      * security - Безопасность,

      * parking - Парковка,

      * commercial-parking - Коммерческая парковка,

      * infrastructure - Инфраструктура,

      * equipment - Оборудование,

      * court - Благоустройство двора

      * other - Прочее


      Пример ответа:


      ```json

      {
        "data": [
          {
            "type": "infrastructures",
            "id": "1",
            "attributes": {
              "name": "Домофон",
              "type": {
                "value": "security",
                "key": "SECURITY",
                "description": "Безопасность"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/1"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/1\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/1\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "2",
            "attributes": {
              "name": "Консьерж",
              "type": {
                "value": "security",
                "key": "SECURITY",
                "description": "Безопасность"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/2"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/2\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/2\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "3",
            "attributes": {
              "name": "Закрытая территория",
              "type": {
                "value": "security",
                "key": "SECURITY",
                "description": "Безопасность"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/3"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/3\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/3\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "4",
            "attributes": {
              "name": "Кодовая дверь",
              "type": {
                "value": "security",
                "key": "SECURITY",
                "description": "Безопасность"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/4"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/4\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/4\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "5",
            "attributes": {
              "name": "Во дворе",
              "type": {
                "value": "parking",
                "key": "PARKING",
                "description": "Парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/5"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/5\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/5\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "6",
            "attributes": {
              "name": "Подземная",
              "type": {
                "value": "parking",
                "key": "PARKING",
                "description": "Парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/6"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/6\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/6\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "7",
            "attributes": {
              "name": "Охраняемая",
              "type": {
                "value": "parking",
                "key": "PARKING",
                "description": "Парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/7"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/7\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/7\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "8",
            "attributes": {
              "name": "Со шлагбаумом",
              "type": {
                "value": "parking",
                "key": "PARKING",
                "description": "Парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/8"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/8\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/8\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "9",
            "attributes": {
              "name": "Есть гараж",
              "type": {
                "value": "parking",
                "key": "PARKING",
                "description": "Парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/9"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/9\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/9\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "10",
            "attributes": {
              "name": "Детская площадка",
              "type": {
                "value": "court",
                "key": "COURT",
                "description": "Благоустройство двора"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/10"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/10\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/10\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "11",
            "attributes": {
              "name": "Спортивная площадка",
              "type": {
                "value": "court",
                "key": "COURT",
                "description": "Благоустройство двора"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/11"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/11\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/11\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "12",
            "attributes": {
              "name": "Школа",
              "type": {
                "value": "infrastructure",
                "key": "INFRASTRUCTURE",
                "description": "Инфраструктура"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/12"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/12\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/12\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "13",
            "attributes": {
              "name": "Детский сад",
              "type": {
                "value": "infrastructure",
                "key": "INFRASTRUCTURE",
                "description": "Инфраструктура"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/13"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/13\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/13\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "14",
            "attributes": {
              "name": "Торговый центр",
              "type": {
                "value": "infrastructure",
                "key": "INFRASTRUCTURE",
                "description": "Инфраструктура"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/14"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/14\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/14\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "15",
            "attributes": {
              "name": "Парк",
              "type": {
                "value": "infrastructure",
                "key": "INFRASTRUCTURE",
                "description": "Инфраструктура"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/15"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/15\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/15\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "16",
            "attributes": {
              "name": "Фитнес",
              "type": {
                "value": "infrastructure",
                "key": "INFRASTRUCTURE",
                "description": "Инфраструктура"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/16"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/16\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/16\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "17",
            "attributes": {
              "name": "Наземная",
              "type": {
                "value": "commercial-parking",
                "key": "COMMERCIAL_PARKING",
                "description": "Коммерческая парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/17"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/17\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/17\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "18",
            "attributes": {
              "name": "Подземная коммерческая",
              "type": {
                "value": "commercial-parking",
                "key": "COMMERCIAL_PARKING",
                "description": "Коммерческая парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/18"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/18\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/18\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "19",
            "attributes": {
              "name": "Многоуровневая",
              "type": {
                "value": "commercial-parking",
                "key": "COMMERCIAL_PARKING",
                "description": "Коммерческая парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/19"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/19\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/19\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "20",
            "attributes": {
              "name": "Бесплатная",
              "type": {
                "value": "commercial-parking",
                "key": "COMMERCIAL_PARKING",
                "description": "Коммерческая парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/20"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/20\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/20\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "21",
            "attributes": {
              "name": "Интернет",
              "type": {
                "value": "equipment",
                "key": "EQUIPMENT",
                "description": "Оборудование"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/21"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/21\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/21\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "22",
            "attributes": {
              "name": "Вентиляция",
              "type": {
                "value": "equipment",
                "key": "EQUIPMENT",
                "description": "Оборудование"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/22"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/22\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/22\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "23",
            "attributes": {
              "name": "Пожарная сигнализация",
              "type": {
                "value": "equipment",
                "key": "EQUIPMENT",
                "description": "Оборудование"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/23"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/23\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/23\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "24",
            "attributes": {
              "name": "Кондиционер",
              "type": {
                "value": "equipment",
                "key": "EQUIPMENT",
                "description": "Оборудование"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/24"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/24\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/24\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "25",
            "attributes": {
              "name": "Кухонное оборудование",
              "type": {
                "value": "equipment",
                "key": "EQUIPMENT",
                "description": "Оборудование"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/25"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/25\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/25\/immovables"
                }
              }
            }
          },
          {
            "type": "infrastructures",
            "id": "26",
            "attributes": {
              "name": "Мебель",
              "type": {
                "value": "equipment",
                "key": "EQUIPMENT",
                "description": "Оборудование"
              },
              "icon": {
                "id": 367,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/367\/60ace0a1e9695_forest.svg",
                "size": 8819,
                "mime_type": "image\/svg+xml",
                "responsive": []
              }
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/26"
            },
            "relationships": {
              "immovables": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/26\/relationships\/immovables",
                  "related": "http:\/\/tsnnedv.test:8000\/infrastructures\/26\/immovables"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c5d9ebdd56f144ffa54bf2b59a9b5149
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e574492730bc4eb0b0b1f28595a767dd
    authentication: {}
    metaSortKey: -1614845808822
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_df9483cb2cbb49918b76ca97dad23828
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1629971469076
    created: 1629971469076
    url: "{{ _.BASE_URL }}/commercial-types"
    name: Get Commercial Types
    description: >-
      Получаем список типов коммерческих объектов недвижимости

      Value - непосредственно само значение, по которому мы взаимодействуем с сервером



      ```json

      {
        "data": [
          {
            "type": "commercial_types",
            "id": "1",
            "attributes": {
              "value": 1,
              "key": "OFFICE",
              "description": "Офис"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/1"
            }
          },
          {
            "type": "commercial_types",
            "id": "2",
            "attributes": {
              "value": 2,
              "key": "TRADE_BUILDING",
              "description": "Торговая площадь"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/2"
            }
          },
          {
            "type": "commercial_types",
            "id": "3",
            "attributes": {
              "value": 3,
              "key": "CAFE",
              "description": "Общепит"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/3"
            }
          },
          {
            "type": "commercial_types",
            "id": "4",
            "attributes": {
              "value": 4,
              "key": "FREE_USAGE",
              "description": "Свободного назначения"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/4"
            }
          },
          {
            "type": "commercial_types",
            "id": "5",
            "attributes": {
              "value": 5,
              "key": "STORE",
              "description": "Склад"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/5"
            }
          },
          {
            "type": "commercial_types",
            "id": "6",
            "attributes": {
              "value": 6,
              "key": "PRODUCTION",
              "description": "Производство"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/6"
            }
          },
          {
            "type": "commercial_types",
            "id": "7",
            "attributes": {
              "value": 7,
              "key": "HOTEL",
              "description": "Гостинница"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/7"
            }
          },
          {
            "type": "commercial_types",
            "id": "8",
            "attributes": {
              "value": 8,
              "key": "LAND",
              "description": "Коммерческая земля"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/8"
            }
          },
          {
            "type": "commercial_types",
            "id": "9",
            "attributes": {
              "value": 9,
              "key": "COWORKING",
              "description": "Коворкинг"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/9"
            }
          },
          {
            "type": "commercial_types",
            "id": "10",
            "attributes": {
              "value": 10,
              "key": "GARAGE",
              "description": "Гараж"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/10"
            }
          },
          {
            "type": "commercial_types",
            "id": "11",
            "attributes": {
              "value": 11,
              "key": "AUTOSERVICE",
              "description": "Автосервис"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/11"
            }
          },
          {
            "type": "commercial_types",
            "id": "12",
            "attributes": {
              "value": 12,
              "key": "READY_BUSINESS",
              "description": "Готовый бизнес"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/12"
            }
          },
          {
            "type": "commercial_types",
            "id": "13",
            "attributes": {
              "value": 13,
              "key": "BUILDING",
              "description": "Здание"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/13"
            }
          },
          {
            "type": "commercial_types",
            "id": "14",
            "attributes": {
              "value": 14,
              "key": "MASS_SERVICE",
              "description": "Бытовые услуги"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/commercial_types\/14"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c5d9ebdd56f144ffa54bf2b59a9b5149
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e574492730bc4eb0b0b1f28595a767dd
    authentication: {}
    metaSortKey: -1614845371090
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_16c50c34fd394c8a9ac6a57fea9114ce
    parentId: fld_d1c5fd89e1f44a53b93232c6cf694f36
    modified: 1647973106917
    created: 1629971469060
    url: "{{ _.BASE_URL
      }}/immovables/2_komn_kvartira_korolev_proezd_burkovskiy_38k1_id185976"
    name: Get immovable by ID
    description: >-
      По данному пути можно получить любой тип недвижимости. Slug у всех
      уникальный. Не важно, является ли недвижимость квартирой, новостройкой,
      путь у всех один. Ниже приведём пример ответа для типа "Квартира". Поля
      для других типов недвижимости можно посмотреть в схеме БД. В данном
      примере мы сразу подгружаем модуль outviews и инфраструктура, который
      покажет нам какая помечены инфраструктура у данного объекта недвижимости и
      какой вид у окна. Также стоит обратить внимание на денежные величины. Они
      все передаются в виде объекта по примеру поля price

      ```json

      {
        "data": {
          "type": "immovables",
          "id": "136",
          "attributes": {
            "is_active": true,
            "status": {
              "value": "Open",
              "key": "OPEN",
              "description": "Открыт"
            },
            "description": "<p>Second test appartment<\/p>",
            "label": "Appartment 20 square",
            "is_sold": false,
            "is_hot": false,
            "is_exclusive": false,
            "discount_size": null,
            "discount_type": null,
            "slug": "test_second_app",
            "is_rent": false,
            "video_url": null,
            "torg_available": false,
            "kadastr_no": null,
            "sale_type": {
              "value": "free",
              "key": "FREE",
              "description": "Свободная продажа"
            },
            "properties_no": 1,
            "is_children_in_property": false,
            "deposit": null,
            "deposit_months": null,
            "utilities_included": false,
            "crmid": null,
            "is_available_online": false,
            "distance_by_foot": null,
            "distance_by_car": null,
            "model_name": {
              "value": "Appartment",
              "key": "APPARTMENT",
              "description": "Жилая недвижимость"
            },
            "price": {
              "amount": 255102500,
              "value": 2551025,
              "currency": "₽"
            },
            "media": [],
            "addresses": {
              "id": 124,
              "street": "Gutkowski Circles",
              "postal_code": "12443",
              "label": "Miss Novella Metz Jr.",
              "organization": null,
              "country_code": "af",
              "state": "Lucius Terry",
              "family_name": "Kirlin",
              "given_name": "Ms. Ernestine Sauer",
              "city": "North Monique",
              "latitude": 22.032444,
              "longitude": -121.128966,
              "is_primary": false,
              "is_billing": false,
              "is_shipping": true
            },
            "extra": {
              "id": 136,
              "rooms": 1,
              "is_studio": false,
              "app_no": "432",
              "total_space": "220.94",
              "kitchen_space": null,
              "live_space": null,
              "floor": 2,
              "floors_total": 4,
              "room_height": null,
              "sanuzel": null,
              "balcony": null,
              "is_replanning": false,
              "repair_type": null,
              "build_at": null,
              "house_type": null,
              "elevators": null,
              "has_baggage_elevator": false,
              "has_gaz": false,
              "has_trash_chute": false,
              "years_in_property": null,
              "registered_no": null,
              "is_children_registered": false,
              "condition_level": null,
              "has_online_tour": false,
              "has_plan_solution": false,
              "room_only": false,
              "is_sunny_side": false,
              "rooms_qty": null,
              "room_space": null,
              "sale_start": null
            }
          },
          "meta": {
            "created_at": "2021-05-26T13:46:53.000000Z",
            "updated_at": "2021-05-26T13:46:53.000000Z",
            "deleted_at": null,
            "published_at": null
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/immovables\/136"
          },
          "relationships": {
            "infrastructures": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/infrastructures",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/infrastructures"
              },
              "data": [
                {
                  "type": "infrastructures",
                  "id": "5"
                }
              ]
            },
            "outviews": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/outviews",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/outviews"
              },
              "data": [
                {
                  "type": "outviews",
                  "id": "3"
                }
              ]
            },
            "extra": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/extra",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/extra"
              }
            },
            "address": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/address",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/address"
              }
            },
            "prices": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/prices",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/prices"
              }
            },
            "comments": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/comments",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/comments"
              }
            },
            "employee": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/immovables\/136\/relationships\/employee",
                "related": "http:\/\/tsnnedv.test:8000\/immovables\/136\/employee"
              }
            }
          }
        },
        "included": [
          {
            "type": "infrastructures",
            "id": "5",
            "attributes": {
              "name": "Во дворе",
              "type": {
                "value": "parking",
                "key": "PARKING",
                "description": "Парковка"
              },
              "icon": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/infrastructures\/5"
            }
          },
          {
            "type": "outviews",
            "id": "3",
            "attributes": {
              "name": "Улица"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/outviews\/3"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2c1907bc4026471e86e740c4a21569ad
      - id: pair_bc91e34f096b4884be23b3f45f045287
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1614844933358
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_170c3a0bb6c244a98868b40f592a37ab
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1641981561442
    created: 1641807158569
    url: "{{ _.BASE_URL }}/cities/search"
    name: Search Cities
    description: Поиск города по всем полям. Название города передаётся в
      get-параметре query. Поиск делается через elasticsearch. Английская версия
      транскрипта хранится в поле eng_name
    method: GET
    body: {}
    parameters:
      - id: pair_980f81984d63495b88f5a369dc312a98
        name: query
        value: Волжск
        description: ""
    headers:
      - id: pair_3646d9318dd542ee87df9172e492781a
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_231f9a8474e04a64911586f982483667
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1641807158569
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_67b634544bc04457980f92b252f25c6a
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469040
    created: 1629971469040
    name: Addresses
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614839689031
    _type: request_group
  - _id: req_5b7501cf6ae8437f90b414802992be71
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469054
    created: 1629971469054
    url: "{{ _.BASE_URL }}/undergrounds"
    name: Undergrounds list
    description: |-
      Получаем список метро.

      Доступные аттрибуты:
      * name - наименование метро
      * line_name - служебное имя линии.
      * fias_id - номер по ФИАС
      * color - цвет линии метро
      * is_closed - закрыто или нет
      * addresses - привязанный к метро адрес

      ```json
      {
        "data": [
          {
            "type": "undergrounds",
            "id": "1",
            "attributes": {
              "name": "Ally Mann I",
              "fias_id": "1856654f-71b8-379a-a47f-dee5002bf669",
              "line_name": "Camron Rau III",
              "color": "LightPink",
              "is_closed": false,
              "addresses": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/undergrounds\/1"
            }
          },
          {
            "type": "undergrounds",
            "id": "2",
            "attributes": {
              "name": "Mr. Patrick Lehner",
              "fias_id": "58f32e6d-a6f0-3592-9a6c-0c6fb85de806",
              "line_name": "Junius Collins",
              "color": "SandyBrown",
              "is_closed": false,
              "addresses": null
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/undergrounds\/2"
            }
          }
        ]
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_eeb4119114634d0ca074b0799c4e5ac6
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_5065d6eaf13b4b4c99564c6ce36f1482
    authentication: {}
    metaSortKey: -1614843529166
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_865691952c9647e483be3d0fe2b45074
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469055
    created: 1629971469055
    url: "{{ _.BASE_URL }}/cities/1/undergrounds"
    name: Undergrounds by city
    description: Получаем список метро, отфильтрованный по городу. В адресе передаём
      id города. В ответ получаем массив с найденными метро в городе
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_eeb4119114634d0ca074b0799c4e5ac6
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_5065d6eaf13b4b4c99564c6ce36f1482
    authentication: {}
    metaSortKey: -1614843227403
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3cfabd4e9d854ebda49407d85aac0d46
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469052
    created: 1629971469052
    url: "{{ _.BASE_URL }}/undergrounds/8"
    name: Get underground by ID
    description: |-
      Получаем метро по его номеру.

      Доступные аттрибуты:
      * name - наименование метро
      * line_name - служебное имя линии.
      * fias_id - номер по ФИАС
      * color - цвет линии метро
      * is_closed - закрыто или нет
      * addresses - привязанный к метро адрес

      ```json
      {
        "data": {
          "type": "undergrounds",
          "id": "8",
          "attributes": {
            "name": "Marian Stoltenberg",
            "fias_id": "3f89b897-7121-3db4-a67d-158dddebbee1",
            "line_name": "Jacinthe Gaylord",
            "color": "DeepPink",
            "is_closed": false,
            "addresses": null
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/undergrounds\/8"
          }
        }
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2e9092af7ff14499ba0f0b6726c7760a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_223757ef10a146e683b9cd6c32c55ab6
    authentication: {}
    metaSortKey: -1614842925640
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_92c669b07f8a4c28a9218246656822fd
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469050
    created: 1629971469050
    url: "{{ _.BASE_URL }}/addresses/10"
    name: Get address by id
    description: |-
      Получаем карту адреса по его id. 

      Доступные аттрибуты:
      * street - название улицы с домом
      * postal_code - почтовый индекс
      * label - заголовок
      * organization - наименование организации
      * country_code - код страны
      * state - название региона
      * family_name - фамилия адресата
      * given_name - имя адресата
      * city - город
      * latitude - координаты, широта
      * longitude - координаты, долгота
      * is_primary - адрес является основным
      * is_billing - адрес является платёжным
      * is_shipping - является адресом доставки.

      ```json
      {
        "data": {
          "type": "addresses",
          "id": "10",
          "attributes": {
            "street": "Gino Extensions",
            "postal_code": "34657-3656",
            "label": "Alfonso Mills",
            "organization": null,
            "country_code": "af",
            "state": "Lucius Terry",
            "family_name": "Herman",
            "given_name": "Adah Rempel",
            "city": "North Monique",
            "latitude": -73.60505,
            "longitude": -174.304346,
            "is_primary": false,
            "is_billing": false,
            "is_shipping": true
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/addresses\/10"
          }
        }
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_7d5d4f80acfc4193bf7a2a428f9a8c31
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_475ad72fe26f49ecbaa05ef893c97b43
    authentication: {}
    metaSortKey: -1614841972852
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_537ed54592e34100921d31fffbf26f6e
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469051
    created: 1629971469051
    url: "{{ _.BASE_URL }}/addresses"
    name: All addresses
    description: >-
      Получаем список всех доступных адресов.


      Доступные аттрибуты:

      * street - название улицы с домом

      * postal_code - почтовый индекс

      * label - заголовок

      * organization - наименование организации

      * country_code - код страны

      * state - название региона

      * family_name - фамилия адресата

      * given_name - имя адресата

      * city - город

      * latitude - координаты, широта

      * longitude - координаты, долгота

      * is_primary - адрес является основным

      * is_billing - адрес является платёжным

      * is_shipping - является адресом доставки.


      ```json

      {
        "data": [
          {
            "type": "addresses",
            "id": "1",
            "attributes": {
              "street": "Юности, 3",
              "postal_code": "428034",
              "label": "Дом, Юности, 3",
              "organization": "Дом",
              "country_code": "ru",
              "state": "Lucius Terry",
              "family_name": "Емельянов",
              "given_name": "Сергей",
              "city": "North Monique",
              "latitude": null,
              "longitude": null,
              "is_primary": true,
              "is_billing": true,
              "is_shipping": true
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/addresses\/1"
            }
          },
          {
            "type": "addresses",
            "id": "4",
            "attributes": {
              "street": "Aurelia Ranch",
              "postal_code": "60956",
              "label": "Mossie Paucek",
              "organization": null,
              "country_code": "af",
              "state": "Lucius Terry",
              "family_name": "Braun",
              "given_name": "Loyce Shields MD",
              "city": "North Monique",
              "latitude": -7.744361,
              "longitude": -25.251366,
              "is_primary": true,
              "is_billing": true,
              "is_shipping": false
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/addresses\/4"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?page%5Bnumber%5D=7"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_7d5d4f80acfc4193bf7a2a428f9a8c31
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_475ad72fe26f49ecbaa05ef893c97b43
    authentication: {}
    metaSortKey: -1614841502135.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_db3014d6b5f84eedb33cc16e947565c2
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469057
    created: 1629971469057
    url: "{{ _.BASE_URL }}/addresses?filter[city]=North"
    name: Addresses By City ID
    description: >-
      Список адресов поддерживает фильтрацию по городам и регионм. Для этого
      достаточно стандартными средствами json api передать название города или
      региона (?filter[city]=North). В ответ получим список адресов,
      отфильтрованных по данному городу

      ```json

      {
        "data": [
          {
            "type": "addresses",
            "id": "1",
            "attributes": {
              "street": "Юности, 3",
              "postal_code": "428034",
              "label": "Дом, Юности, 3",
              "organization": "Дом",
              "country_code": "ru",
              "state": "Lucius Terry",
              "family_name": "Емельянов",
              "given_name": "Сергей",
              "city": "North Monique",
              "latitude": null,
              "longitude": null,
              "is_primary": true,
              "is_billing": true,
              "is_shipping": true
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/addresses\/1"
            }
          },
          {
            "type": "addresses",
            "id": "4",
            "attributes": {
              "street": "Aurelia Ranch",
              "postal_code": "60956",
              "label": "Mossie Paucek",
              "organization": null,
              "country_code": "af",
              "state": "Lucius Terry",
              "family_name": "Braun",
              "given_name": "Loyce Shields MD",
              "city": "North Monique",
              "latitude": -7.744361,
              "longitude": -25.251366,
              "is_primary": true,
              "is_billing": true,
              "is_shipping": false
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/addresses\/4"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 122,
            "count": 20,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 7
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?filter%5Bcity%5D=North&page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?filter%5Bcity%5D=North&page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?filter%5Bcity%5D=North&page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/addresses?filter%5Bcity%5D=North&page%5Bnumber%5D=7"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_7d5d4f80acfc4193bf7a2a428f9a8c31
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_475ad72fe26f49ecbaa05ef893c97b43
    authentication: {}
    metaSortKey: -1614841266777.25
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_7e34d4a45a394edfbeca33953306a7a6
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1641980485277
    created: 1629971469046
    url: "{{ _.BASE_URL }}/cities"
    name: Cities list
    description: >-
      Список городов. Часто будет нужен для выпадающего списка. Поэтому,
      рекомендуется уточнять список полей - ?fields[cities]=id,name


      Для получения избранных городов, добавляем фильтр: `filter[starred]=true`


      Для транскритп кириллицы в латиницу было добавлено в аттрибутах поле eng_name.


      Для регистрации адреса нужно только название города, т.е. поле name. Адреса напрямую с городом не связаны.


      ```json

      {
        "data": [
          {
            "type": "cities",
            "id": "1",
            "attributes": {
              "name": "Москва",
              "code": 77,
              "phone_code": "495",
              "region_id": "1",
              "fias_id": "432452",
              "city_type_full": "город",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
          },
          "relationships": {      
            "region": {
              "links": {
                "self": "http://localhost/api/v1/cities/1/relationships/region",
                "related": "http://localhost/api/v1/cities/1/region"
              }
            },
            "undergrounds": {
              "links": {
                "self": "http://localhost/api/v1/cities/1/relationships/undergrounds",
                "related": "http://localhost/api/v1/cities/1/undergrounds"
              }
            }
          },
          "links": {
            "self": "http://localhost/api/v1/cities/1"
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_6aa4f98ca98345f4b1ba042c735fd8de
        name: filter[starred]
        value: "true"
        description: ""
        disabled: true
      - id: pair_46dd969250a848c7974ca39b6bee8d1f
        name: include
        value: region
        description: ""
        disabled: true
      - id: pair_492e2227a39f43808dd7876db827e81b
        name: fields[cities]
        value: id,name
        description: ""
      - id: pair_53b2df9319ba45b5a190f544c19fa2df
        name: filter[name]
        value: Мос
        description: ""
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_439640396e764e10927dcff306f4e74f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_94f33ce6b41c4fd59f37f9e67998bafa
    authentication:
      type: basic
      useISO88591: false
      disabled: false
      username: webit
      password: webitdev
    metaSortKey: -1614841031419
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_d26e512d08044ae0b84d9e45efa16362
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469048
    created: 1629971469048
    url: "{{ _.BASE_URL }}/cities/11834?include=region"
    name: Get city by ID
    description: >-
      Получаем город по его id.


      Доступные аттрибуты:

      * name - наименование города

      * code - код города

      * phone_code - телефонный код

      * region_id - привязанный регион

      * fias_id - ФИАС

      * city_type_full - полный тип города


      ```json

      {
        "data": {
          "type": "cities",
          "id": "1",
          "attributes": {
            "name": "Москва",
            "code": 77,
            "phone_code": "495",
            "region_id": "1",
            "fias_id": "432452",
            "city_type_full": "город",
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00"
          },
          "relationships": {      
            "region": {
              "links": {
                "self": "http://localhost/api/v1/cities/1/relationships/region",
                "related": "http://localhost/api/v1/cities/1/region"
              }
            },
            "undergrounds": {
              "links": {
                "self": "http://localhost/api/v1/cities/1/relationships/undergrounds",
                "related": "http://localhost/api/v1/cities/1/undergrounds"
              }
            }
          },
          "links": {
            "self": "http://localhost/api/v1/cities/1"
          }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_439640396e764e10927dcff306f4e74f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_94f33ce6b41c4fd59f37f9e67998bafa
    authentication: {}
    metaSortKey: -1614840911993
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c28fd513ead84840a01ede9b85b19b27
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1630394447786
    created: 1629971469056
    url: "{{ _.BASE_URL }}/regions/8028/cities"
    name: Cities by region ID
    description: >-
      Получаем список городов, отфильтрованных по региону. В адресной строке
      передаём номер региона.

      ```json

      {
        "data": {
          "type": "cities",
          "id": "1",
          "attributes": {
            "name": "Москва",
            "code": 77,
            "phone_code": "495",
            "region_id": "1",
            "fias_id": "432452",
            "city_type_full": "город",
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00"
          },
          "relationships": {      
            "region": {
              "links": {
                "self": "http://localhost/api/v1/cities/1/relationships/region",
                "related": "http://localhost/api/v1/cities/1/region"
              }
            },
            "undergrounds": {
              "links": {
                "self": "http://localhost/api/v1/cities/1/relationships/undergrounds",
                "related": "http://localhost/api/v1/cities/1/undergrounds"
              }
            }
          },
          "links": {
            "self": "http://localhost/api/v1/cities/1"
          }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_439640396e764e10927dcff306f4e74f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_94f33ce6b41c4fd59f37f9e67998bafa
    authentication: {}
    metaSortKey: -1614840852280
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_31a59001f95e410796e25b75ef73a8d3
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1630314274082
    created: 1629971469044
    url: "{{ _.BASE_URL }}/regions/104"
    name: Get region by ID
    description: >-
      Здесь можно получить информацию по региону по его id. Кроме id в качестве
      параметра можно передать код региона. Например, rostov. Часто будет нужно
      для выпадающих списков. Поэтому рекомендуется ограничивать список полей.
      Для списка нужно только name


      Доступные аттрибуты:

      * name - наименование региона. 

      * country_id - привязанная страна.

      * region_type_full - тип региона

      * region_fias_id - номер ФИАС


      ```json

      {
        "data": {
          "type": "regions",
          "id": "1",
          "attributes": {
            "name": "Московская область",
            "country_id": 1,
            "region_type_full": "Область",
            "region_fias_id": "3432423",        
            "created_at": "2020-06-04 13:16:28",
            "updated_at": "2020-06-04 13:16:28"
          },
          "relationships": {
            "cities": {
              "links": {
                "related": "http://laravel-json-api-v2.test/api/v1/regions/1/cities"
              }
            }        
          },
          "links": {
            "self": "http://laravel-json-api-v2.test/api/v1/regions/1"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_9e81deb994e84e5889c628e14e10d826
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_ddd257917f974bf593741b85649d2a98
    authentication: {}
    metaSortKey: -1614840792567
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c9216e22dd9a4904b25fb2efa8445734
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1649498131370
    created: 1629971469043
    url: "{{ _.BASE_URL }}/regions"
    name: Regions list
    description: >-
      Получаем список регионов. Доступен фильтро по стране. Пагинация
      отсутствует.


      Доступные аттрибуты:

      * name - наименование региона.

      * country_id - привязанная страна.

      * region_type_full - тип региона

      * region_fias_id - номер ФИАС


      ```json

      {
        "data": [
          {
            "type": "regions",
            "id": "1",
            "attributes": {
              "name": "Московская область",
              "country_id": 1,
              "region_type_full": "Область",
              "region_fias_id": "3432423",        
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "cities": {
                "links": {
                  "related": "http://laravel-json-api-v2.test/api/v1/regions/1/cities"
                }
              }        
            },
            "links": {
              "self": "http://laravel-json-api-v2.test/api/v1/regions/1"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_bd07d6b56bcc4bde994782a11905d19c
        name: fields[regions]
        value: name,id
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_44378e649b5b43d480f4357f2590c36f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_953609171fe94048ad04f5505b550fc9
    authentication: {}
    metaSortKey: -1614840383760
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9ea55acd16d34d94ad4dced1c8c3a143
    parentId: fld_67b634544bc04457980f92b252f25c6a
    modified: 1629971469042
    created: 1629971469042
    url: "{{ _.BASE_URL }}/countries"
    name: Countries list
    description: >-
      Получаем список стран.


      Доступные аттрибуты:

      * name - наименование страны

      * short_code - код страны


      ```json

      {
        "data": [
          {
            "type": "countries",
            "id": "1",
            "attributes": {
              "name": "Russia",
              "short_code": "ru",        
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },
            "relationships": {
              "regions": {
                "links": {
                  "related": "http://laravel-json-api-v2.test/api/v1/countries/1/regions"
                }
              }
            },
            "links": {
              "self": "http://laravel-json-api-v2.test/api/v1/countries/1"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ca33453d94a34cf992824f2e1977066a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_ef6da2bd526148bf8273d100a560d212
    authentication: {}
    metaSortKey: -1614840080351
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3971b38bfbfd473593d1304847c9185e
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1649254329586
    created: 1649253218016
    url: "{{ _.BASE_URL }}/service-orders"
    name: Create Service Order
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"service_id": 22
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_574a15834b3c4d6ab096fa55cc4d45bf
      - id: pair_8dc42140c4a84eba8849bc81a33f48b8
        name: Accept
        value: application/vnd.api+json
        description: ""
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1649253218017
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_9f663ed720974655a473cc90f00052df
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469017
    created: 1629971469017
    name: Partners and Services
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614772896044
    _type: request_group
  - _id: req_d36336f4b0c94857811c34d72fd2e328
    parentId: fld_16407cc1669040ff99edfc51af6e8704
    modified: 1629971469023
    created: 1629971469023
    url: "{{ _.BASE_URL }}/services/1/promocodes"
    name: Get promocodes from service
    description: >-
      Здесь можно получить перечень всех промокодов по переданному id услуги.


      Receive following result:

      ```json

      {
        "data": [
          {
            "type": "promocodes",
            "id": "1",
            "attributes": {
              "code": "5b46e06b-7150-3dcc-bf23-2fc451094cc9",
              "expires_at": "1989-11-11T21:19:30.000000Z",
              "partner_id": 1
            },
            "meta": {
              "created_at": "2021-04-02T07:14:43.000000Z",
              "updated_at": "2021-04-02T07:14:43.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/promocodes\/1"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/partner"
                }
              },
              "service": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/relationships\/service",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/service"
                }
              }
            }
          },
          {
            "type": "promocodes",
            "id": "2",
            "attributes": {
              "code": "0e2daa46-edaa-378f-8b78-91ff474e0dd4",
              "expires_at": "1989-05-09T13:07:49.000000Z",
              "partner_id": 2
            },
            "meta": {
              "created_at": "2021-04-02T07:14:44.000000Z",
              "updated_at": "2021-04-02T07:14:44.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/promocodes\/2"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/2\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/2\/partner"
                }
              },
              "service": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/2\/relationships\/service",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/2\/service"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ff26d5e430bf4fc9bc0bb2f20c64dc85
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_dbbfb48a20c74f168a552a0086f131f6
    authentication: {}
    metaSortKey: -1614838580088
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_16407cc1669040ff99edfc51af6e8704
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1629971469018
    created: 1629971469018
    name: Relationships
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614779924888
    _type: request_group
  - _id: req_39c5b0f37eab4580bd05441f0d21d5ff
    parentId: fld_16407cc1669040ff99edfc51af6e8704
    modified: 1629971469024
    created: 1629971469024
    url: "{{ _.BASE_URL }}/partners/1/promocodes"
    name: Get promocodes from partner
    description: >-
      Получаем все промокоды по переданному id партнёра


      Receive following result:

      ```json

      {
        "data": [
          {
            "type": "promocodes",
            "id": "1",
            "attributes": {
              "code": "5b46e06b-7150-3dcc-bf23-2fc451094cc9",
              "expires_at": "1989-11-11T21:19:30.000000Z",
              "partner_id": 1
            },
            "meta": {
              "created_at": "2021-04-02T07:14:43.000000Z",
              "updated_at": "2021-04-02T07:14:43.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/promocodes\/1"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/partner"
                }
              },
              "service": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/relationships\/service",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/1\/service"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ff26d5e430bf4fc9bc0bb2f20c64dc85
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_dbbfb48a20c74f168a552a0086f131f6
    authentication: {}
    metaSortKey: -1614811016874
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a924bad52c71459ab50023134a625f72
    parentId: fld_16407cc1669040ff99edfc51af6e8704
    modified: 1629971469022
    created: 1629971469022
    url: "{{ _.BASE_URL }}/partners/6/mortgages"
    name: Get all mortgages of partner
    description: >-
      Пример того, как можно получить все ипотеки передаваемого id партнёра


      Example response:

      ```json

      {
        "data": [
          {
            "type": "mortgages",
            "id": "3",
            "attributes": {
              "credit_period": 3,
              "min_payment": "578",
              "percent_rate": "11.37",
              "is_active": false,
              "payment_type": {
                "value": "Difference",
                "key": "DIFFERENCE",
                "description": "Дифференцированные"
              },
              "partner_id": 6
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/mortgages\/3"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/mortgages\/3\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/mortgages\/3\/partner"
                }
              }
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_84194c1fa6bd44879f561ca6a1410b2c
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_b183e90fbea74b82b7620de75a2767a9
    authentication: {}
    metaSortKey: -1614783453660
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_d92d001098904d51a0f47fdc37835337
    parentId: fld_16407cc1669040ff99edfc51af6e8704
    modified: 1629971469020
    created: 1629971469020
    url: "{{ _.BASE_URL }}/services/1/relationships/partner"
    name: Link between service and partner
    description: >-
      Here is relationship with partner we can get from service. Example
      response:

      ```json

      {
        "links": {
           "self": "http://localhost/api/v1/services/1/relationships/partner",
           "related": "http://localhost/api/v1/services/1/partner"
        },
        "data": {
          "type": "partner",
          "id": "1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_572a73577e634819983ef637510db6af
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_a557015e9e2740e7ac05bd75021e588b
    authentication: {}
    metaSortKey: -1614779082838
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e5c4dc13a72445b0a665098b688de368
    parentId: fld_16407cc1669040ff99edfc51af6e8704
    modified: 1629971469019
    created: 1629971469019
    url: "{{ _.BASE_URL }}/partners/1/relationships/promocodes"
    name: Relationship Link Between partners and promocodes
    description: >-
      This link needs for adding and removing relationships. But here you can
      get short information about relationship. You can see following result:

      ```json

      {
        "links": {
          "self": "http://localhost/api/v1/partners/1/relationships/promocodes",
          "related": "http://localhost/api/v1/partners/1/promocodes"
        },
        "data": [
          { "type": "promocodes", "id": "2" },
          { "type": "promocodes", "id": "3" }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_bc316eb5cf9c448e91685dc46b710299
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_b11e1d9bb53145138ade41d4d65f8521
    authentication: {}
    metaSortKey: -1614779082788
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e00fcca752314be7a68755f552c261cc
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1629971469038
    created: 1629971469038
    url: "{{ _.BASE_URL }}/services?filter[category]=internal"
    name: Get internal services
    description: >-
      Получаем список всех услуг, предоставляемх компанией TSN. Т.е. это
      внутренние услуги, где category=internal. Или где partner_id=null


      Доступные аттрибуты:

      * name - наименование услуги

      * slug - адрес url услуги

      * description - описание услуги

      * category - категория. Доступные значения: finance, legal, internal

      * partner_id - привязанный партнёр в услуге

      * media - прикреплённая картинка


      Example response:

      ```json

      {
        "data": [
          {
            "type": "services",
            "id": "1",
            "attributes": {
              "name": "Miss Rebecca Heaney",
              "slug": "similique-aut-facere-quibusdam-velit-voluptatem-sequi-quod",
              "description": "Impedit a qui eaque. Recusandae libero quo impedit ducimus est rerum. Dolorem quo ab provident ut illo eum.",
              "category": {
                "value": "internal",
                "key": "INTERNAL",
                "description": "Внутренние"
              },
              "partner_id": 4,
              "media": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/services\/1"
            },
            "relationships": {
              "images": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/images",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/images"
                }
              },
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/partner"
                }
              },
              "promocodes": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/promocodes",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/promocodes"
                }
              },
              "image": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/image",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/image"
                }
              }
            }
          },
          {
            "type": "services",
            "id": "3",
            "attributes": {
              "name": "Beaulah Nitzsche",
              "slug": "asperiores-non-eum-sint-qui-ipsum-saepe-harum",
              "description": "Ipsam tenetur ea et deleniti cumque. Eligendi vel id fugit facilis. Iure et ducimus officia explicabo et.",
              "category": {
                "value": "internal",
                "key": "INTERNAL",
                "description": "Внутренние"
              },
              "partner_id": 4,
              "media": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/services\/3"
            },
            "relationships": {
              "images": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/images",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/images"
                }
              },
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/partner"
                }
              },
              "promocodes": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/promocodes",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/promocodes"
                }
              },
              "image": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/image",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/image"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 5,
            "count": 5,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/services?filter%5Bcategory%5D=internal&page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/services?filter%5Bcategory%5D=internal&page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/services?filter%5Bcategory%5D=internal&page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_d92df663e4c0486c9dbc0b62b94d6b6c
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_0324d992b4de40e4bbc147f13a1a61ed
    authentication: {}
    metaSortKey: -1614779156618
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_7d2759f5468e407b81937e388189c936
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1630930512018
    created: 1629971469036
    url: "{{ _.BASE_URL }}/mortgages/1"
    name: Get mortgage by ID
    description: >-
      Получаем подробную информацию об условиях ипотеки по её id.


      Доступные связи:

      * partner


      Доступные аттрибуты:

      * credit_period - на какой срок выдаётся ипотека

      * min_payment - минимальный размер платежа

      * percent_rate - процентная ставка

      * is_active - активно предложение или нет

      * partner_id - привязанный партнёр

      * payment_type - тип платежа: Difference, Annuity


      Returning following response:

      ```json

      {
        "data": {
          "type": "mortgages",
          "id": "3",
          "attributes": {
            "credit_period": 3,
            "min_payment": "578",
            "percent_rate": "11.37",
            "is_active": false,
            "payment_type": {
              "value": "Difference",
              "key": "DIFFERENCE",
              "description": "Дифференцированные"
            },
            "partner_id": 6
          },
          "meta": {
            "created_at": "2021-04-02T07:14:50.000000Z",
            "updated_at": "2021-04-02T07:14:50.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/mortgages\/3"
          },
          "relationships": {
            "partner": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/mortgages\/3\/relationships\/partner",
                "related": "http:\/\/tsnnedv.test:8000\/mortgages\/3\/partner"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_b6a085b688494daaaa9e64157a07aa8f
        name: include
        value: partner
        description: ""
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ce7c77e4d6704ca3ac48f330d3d54586
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_bfcf801a09f34d8d80aab457da0570b4
    authentication: {}
    metaSortKey: -1614778388348
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_34005d48a4ad4642bf54607e5bbb6b55
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1629971469035
    created: 1629971469035
    url: "{{ _.BASE_URL }}/promocodes"
    name: Get all promocodes
    description: >-
      Получаем все промокоды в системе.


      Доступные аттрибуты:

      * code - непосредственно сам код

      * expires_at - годен до

      * partner_id - привязанный номер партнёра


      Доступные связи (?include=partner):

      * partner

      * service


      Доступные фильтры (?filter[expires_at]=2021-05-02 18:18:18):

      * expires_at - передаём дату в корерктном формате. В этом случае будут показаны все промокоды, у которых дата истечения больше заявленной в фильтре


      Returning following response:

      ```json

      {
        "data": [
          {
            "type": "promocodes",
            "id": "3",
            "attributes": {
              "code": "5dbc59c7-9716-33ab-91e8-44651ea5004e",
              "expires_at": "2015-08-09T13:04:07.000000Z",
              "partner_id": 3
            },
            "meta": {
              "created_at": "2021-04-02T07:14:45.000000Z",
              "updated_at": "2021-04-02T07:14:45.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/promocodes\/3"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/partner"
                }
              },
              "service": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/relationships\/service",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/service"
                }
              }
            }
          },
          {
            "type": "promocodes",
            "id": "4",
            "attributes": {
              "code": "f304a2b8-433c-332f-9b99-6cb7a481c7a7",
              "expires_at": "2000-04-07T02:02:06.000000Z",
              "partner_id": 4
            },
            "meta": {
              "created_at": "2021-04-02T07:14:45.000000Z",
              "updated_at": "2021-04-02T07:14:45.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/promocodes\/4"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/4\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/4\/partner"
                }
              },
              "service": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/promocodes\/4\/relationships\/service",
                  "related": "http:\/\/tsnnedv.test:8000\/promocodes\/4\/service"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/promocodes?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/promocodes?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/promocodes?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_8141f333a6ec4bcbb9b9848d989008b0
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_22f8b2ca79fd4cd3b3ba8ec06bfb107e
    authentication: {}
    metaSortKey: -1614777282003
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_6affa0cb7ba84a0ba02ef2fe3bf1aa75
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1630930539635
    created: 1629971469039
    url: "{{ _.BASE_URL }}/mortgages?page[number]=1"
    name: Get all mortgages
    description: >-
      Получаем список всех условий по ипотеке. 


      Доступные аттрибуты:

      * credit_period - на какой срок выдаётся ипотека

      * min_payment - минимальный размер платежа

      * percent_rate - процентная ставка

      * is_active - активно предложение или нет

      * partner_id - привязанный партнёр

      * payment_type - тип платежа: Difference, Annuity


      Returning following response:

      ```json

      {
        "data": [
          {
            "type": "mortgages",
            "id": "1",
            "attributes": {
              "credit_period": 9,
              "min_payment": "757",
              "percent_rate": "10.82",
              "is_active": true,
              "payment_type": {
                "value": "Difference",
                "key": "DIFFERENCE",
                "description": "Дифференцированные"
              },
              "partner_id": 2
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/mortgages\/1"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/mortgages\/1\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/mortgages\/1\/partner"
                }
              }
            }
          },
          {
            "type": "mortgages",
            "id": "2",
            "attributes": {
              "credit_period": 6,
              "min_payment": "54",
              "percent_rate": "7.44",
              "is_active": false,
              "payment_type": {
                "value": "Annuity",
                "key": "ANNUITY",
                "description": "Аннуитентные"
              },
              "partner_id": 10
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/mortgages\/2"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/mortgages\/2\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/mortgages\/2\/partner"
                }
              }
            }
          },
          {
            "type": "mortgages",
            "id": "3",
            "attributes": {
              "credit_period": 3,
              "min_payment": "578",
              "percent_rate": "11.37",
              "is_active": false,
              "payment_type": {
                "value": "Difference",
                "key": "DIFFERENCE",
                "description": "Дифференцированные"
              },
              "partner_id": 6
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/mortgages\/3"
            },
            "relationships": {
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/mortgages\/3\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/mortgages\/3\/partner"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 3,
            "count": 3,
            "per_page": 3,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/mortgages?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/mortgages?page%5Bnumber%5D=1",
          "next": "http:\/\/tsnnedv.test:8000\/api\/v1\/mortgages?page%5Bnumber%5D=2",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/mortgages?page%5Bnumber%5D=2"
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_8aa914886a32440683911e518ce00cb5
        name: include
        value: partner
        description: ""
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_8141f333a6ec4bcbb9b9848d989008b0
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_22f8b2ca79fd4cd3b3ba8ec06bfb107e
    authentication: {}
    metaSortKey: -1614776904481
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_baa7957dfab2467ca3d53bb73a06d84e
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1629971469033
    created: 1629971469033
    url: "{{ _.BASE_URL }}/promocodes/3"
    name: Get promocode by ID
    description: >-
      Получаем промокод по его id


      Доступные связи (?include=partner):

      * partner

      * service


      Доступные аттрибуты:

      * code - непосредственно сам код

      * expires_at - годен до

      * partner_id - привязанный номер партнёра


      Here is an example response:

      ```json

      {
        "data": {
          "type": "promocodes",
          "id": "3",
          "attributes": {
            "code": "5dbc59c7-9716-33ab-91e8-44651ea5004e",
            "expires_at": "2015-08-09T13:04:07.000000Z",
            "partner_id": 3
          },
          "meta": {
            "created_at": "2021-04-02T07:14:45.000000Z",
            "updated_at": "2021-04-02T07:14:45.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/promocodes\/3"
          },
          "relationships": {
            "partner": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/relationships\/partner",
                "related": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/partner"
              }
            },
            "service": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/relationships\/service",
                "related": "http:\/\/tsnnedv.test:8000\/promocodes\/3\/service"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_d55f42e69c904868945826ceafc6cbc7
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_32ad429cf28c4ef7a305514a7af7aafb
    authentication: {}
    metaSortKey: -1614776526959
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2c9a71496308469184e86e7868ba314e
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1649490608064
    created: 1629971469032
    url: "{{ _.BASE_URL }}/services"
    name: Get all services
    description: >-
      Получаем список всех доступных услуг. Выводится вместе с пагинацией


      Доступные фильтры (?filter[category]=legal):

      * category

      * partner_id


      Доступные аттрибуты:

      * name - наименование услуги

      * slug - адрес url услуги

      * description - описание услуги

      * category - категория. Доступные значения: finance, legal, internal

      * partner_id - привязанный партнёр в услуге

      * media - прикреплённая картинка


      Example response:

      ```json

      {
        "data": [
          {
            "type": "services",
            "id": "1",
            "attributes": {
              "name": "Miss Rebecca Heaney",
              "slug": "similique-aut-facere-quibusdam-velit-voluptatem-sequi-quod",
              "description": "Impedit a qui eaque. Recusandae libero quo impedit ducimus est rerum. Dolorem quo ab provident ut illo eum.",
              "category": {
                "value": "internal",
                "key": "INTERNAL",
                "description": "Внутренние"
              },
              "partner_id": 4,
              "media": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/services\/1"
            },
            "relationships": {
              "images": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/images",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/images"
                }
              },
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/partner"
                }
              },
              "promocodes": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/promocodes",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/promocodes"
                }
              },
              "image": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/1\/relationships\/image",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/1\/image"
                }
              }
            }
          },
          {
            "type": "services",
            "id": "2",
            "attributes": {
              "name": "Dortha Blick",
              "slug": "et-praesentium-sint-quam-tempora-asperiores",
              "description": "Et doloremque sint quis deleniti. Optio molestias et voluptatem et unde consectetur officiis ducimus. Porro et minima velit a qui enim. Tempora recusandae et ea aut et.",
              "category": {
                "value": "legal",
                "key": "LEGAL",
                "description": "Законодательство"
              },
              "partner_id": null,
              "media": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/services\/2"
            },
            "relationships": {
              "images": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/2\/relationships\/images",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/2\/images"
                }
              },
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/2\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/2\/partner"
                }
              },
              "promocodes": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/2\/relationships\/promocodes",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/2\/promocodes"
                }
              },
              "image": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/2\/relationships\/image",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/2\/image"
                }
              }
            }
          },
          {
            "type": "services",
            "id": "3",
            "attributes": {
              "name": "Beaulah Nitzsche",
              "slug": "asperiores-non-eum-sint-qui-ipsum-saepe-harum",
              "description": "Ipsam tenetur ea et deleniti cumque. Eligendi vel id fugit facilis. Iure et ducimus officia explicabo et.",
              "category": {
                "value": "internal",
                "key": "INTERNAL",
                "description": "Внутренние"
              },
              "partner_id": 4,
              "media": null
            },
            "meta": {
              "created_at": "2021-04-02T07:14:50.000000Z",
              "updated_at": "2021-04-02T07:14:50.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/services\/3"
            },
            "relationships": {
              "images": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/images",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/images"
                }
              },
              "partner": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/partner",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/partner"
                }
              },
              "promocodes": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/promocodes",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/promocodes"
                }
              },
              "image": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/services\/3\/relationships\/image",
                  "related": "http:\/\/tsnnedv.test:8000\/services\/3\/image"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/services?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/services?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/services?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_1dd884aaddcb4d0ebda50f6433ff23e8
        name: include
        value: partner
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_cd9ee2a8aca54c849932ebbdc6576401
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_0daeed7783844486bde72b8799cd4d59
    authentication: {}
    metaSortKey: -1614776203666
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_35bc793c01be40c898063a7b05921fe4
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1649498710645
    created: 1629971469030
    url: "{{ _.BASE_URL }}/services/22"
    name: Get service by ID
    description: >-
      Получаем информацию по услуги, Передавая id.


      Доступные аттрибуты:

      * name - наименование услуги

      * slug - адрес url услуги

      * description - описание услуги

      * category - категория. Доступные значения: finance, legal, internal

      * partner_id - привязанный партнёр в услуге

      * media - прикреплённая картинка


      Доступные связи (?include=partner):

      * promocodes

      * partner


      Returning following response:

      ```json

      {
        "data": {
          "type": "services",
          "id": "5",
          "attributes": {
            "name": "Delores Balistreri",
            "slug": "pariatur-veniam-quas-excepturi-consequatur",
            "description": "Error et eveniet optio blanditiis quam eveniet aut. Possimus neque earum assumenda eius corrupti voluptatum.",
            "category": {
              "value": "internal",
              "key": "INTERNAL",
              "description": "Внутренние"
            },
            "partner_id": 4,
            "media": null
          },
          "meta": {
            "created_at": "2021-04-02T07:14:50.000000Z",
            "updated_at": "2021-04-02T07:14:50.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/services\/5"
          },
          "relationships": {
            "images": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/services\/5\/relationships\/images",
                "related": "http:\/\/tsnnedv.test:8000\/services\/5\/images"
              }
            },
            "partner": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/services\/5\/relationships\/partner",
                "related": "http:\/\/tsnnedv.test:8000\/services\/5\/partner"
              }
            },
            "promocodes": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/services\/5\/relationships\/promocodes",
                "related": "http:\/\/tsnnedv.test:8000\/services\/5\/promocodes"
              }
            },
            "image": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/services\/5\/relationships\/image",
                "related": "http:\/\/tsnnedv.test:8000\/services\/5\/image"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_d4fad5dca529493eb4dc1310ac3827e3
        name: include
        value: partner
        description: ""
        disabled: false
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_3a23cad420664d15b1fc47d9c6b248a5
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_8d00ce1301994ac8b50794a00f125ed6
    authentication: {}
    metaSortKey: -1614774679652
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_1a13187e5459483b90de3a67a38bf03b
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1629971469028
    created: 1629971469028
    url: "{{ _.BASE_URL }}/partners?filter[type]=Bank"
    name: Get list of partners
    description: >-
      Получаем список партнёров.


      Доступные аттрибуты:

      * name - наименование партнёра

      * description - подробное описание партнёра

      * type - тип партнёра. Возможные варианты: Bank, Franchize

      * media - прикреплённая картинка к партёру


      Доступные связи:

      * services

      * promocodes

      * mortgages


      Доступные фильтры (?filter[type]=Bank):

      * type - по типу партнёра. Имейте в виду, что здесь фильтруем по полю value в типе.


      ```json

      {
        "data": [
          {
            "type": "partners",
            "id": "1",
            "attributes": {
            "name": "Sberbank",
            "description": "Сбербанк России",
            "type": {
              "key": "BANKS",
              "value": "Banks",
              "description": "Банки"
            },
            "logo": [{
              "id": 2,
              "uuid": "4325tgtgerft-454rf",
              "collection_name": "default",
              "name": "dublin",
              "file_name": "dubl.jpg",
              "mime_type": "image/jpeg",
              "url": "http://localhost/dublon.jpg",
              "size": 34222
            }],
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "promocodes": {
                "links": {
                  "related": "http://localhost/api/v1/partners/1/promocodes"
                }
              },
              "services": {
                "links": {
                  "self": "http://localhost/api/v1/partners/1/relationships/services",
                  "related": "http://localhost/api/v1/partners/1/services"
                }
              },
              "mortgages": {
                "links": {
                  "self": "http://localhost/api/v1/partners/1/relationships/mortgages",
                  "related": "http://localhost/api/v1/partners/1/mortgages"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/partners/1"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_72a60c32692c4b8ab5f1ee98f019ff4e
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_411f47982205445e8232d56290e311d0
    authentication: {}
    metaSortKey: -1614774027094
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_435e2f4f89d94f289b10cb2047b81b30
    parentId: fld_9f663ed720974655a473cc90f00052df
    modified: 1648715663965
    created: 1629971469027
    url: "{{ _.BASE_URL }}/partners/13"
    name: Get partner by ID
    description: >-
      Получаем информацию о партнёре по его id. 


      Доступные аттрибуты:

      * name - наименование партнёра

      * description - подробное описание партнёра

      * type - тип партнёра. Возможные варианты: Bank, Franchize

      * media - прикреплённая картинка к партёру


      Доступные связи:

      * services

      * promocodes

      * mortgages


      Getting following response:

      ```json

      {
        "data": {
          "type": "partners",
          "id": "2",
          "attributes": {
            "name": "Kilback, Bashirian and Carroll",
            "description": "Consequatur iure est et aut. Sed in et nihil praesentium et et fugit ut. Ut et voluptatem ipsa rerum quia debitis.",
            "type": {
              "value": "Bank",
              "key": "BANK",
              "description": "Банк"
            },
            "media": null
          },
          "meta": {
            "created_at": "2021-04-02T07:14:44.000000Z",
            "updated_at": "2021-04-02T07:14:44.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/partners\/2"
          },
          "relationships": {
            "services": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/partners\/2\/relationships\/services",
                "related": "http:\/\/tsnnedv.test:8000\/partners\/2\/services"
              }
            },
            "promocodes": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/partners\/2\/relationships\/promocodes",
                "related": "http:\/\/tsnnedv.test:8000\/partners\/2\/promocodes"
              }
            },
            "mortgages": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/partners\/2\/relationships\/mortgages",
                "related": "http:\/\/tsnnedv.test:8000\/partners\/2\/mortgages"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_36a1ef7624c14eec8eb86fc133ebcc96
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_f568492b4ef0467598574cdf282e9086
    authentication: {}
    metaSortKey: -1614772920867
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_450ed5bec910452a89076de6df6a9d21
    parentId: fld_a47183278ee341a2b606cdf60ade8a89
    modified: 1629971469015
    created: 1629971469015
    url: "{{ _.BASE_URL }}/upload"
    name: File Upload
    description: "Смотрите видео-инструкцию того, как это всё работает:
      https://cloud.mail.ru/public/ejZ8/zPY9zFVnh"
    method: POST
    body:
      mimeType: multipart/form-data
      params:
        - name: file_upload
          value: ""
          description: ""
          id: pair_197c07731a6d4826be871d3b81b43ef7
          type: file
          fileName: /home/sergey/Изображения/2021-07-12_13-04.png
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_d966c5d15b9740d0adb2dee029f4d129
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_21ea820f185b4ec7b3f24a3ed8fb06a1
    authentication: {}
    metaSortKey: -1618317324342
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_a47183278ee341a2b606cdf60ade8a89
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469008
    created: 1629971469008
    name: Vacancies and Candidates
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614770401938
    _type: request_group
  - _id: req_c5a4543deada4157969c91fc2c944514
    parentId: fld_a47183278ee341a2b606cdf60ade8a89
    modified: 1629971469014
    created: 1629971469014
    url: "{{ _.BASE_URL }}/candidates"
    name: Send detail resume
    description: >-
      Передаём подробную анкету кандидата с приложенными фотографиями. Получаем
      объект кандидата


      Стоит отметить следующее:

      * В разделе included мы передаём массив всех связанных записей, а именно опыт работы, образование кандидата.

      * В поле photo передаётся id картинки, которую требуется предварительно загрузить в систему.


      ```json

      {
        "data": {
          "type": "candidates",
          "id": "25",
          "attributes": {
            "first_name": "Mihail",
            "last_name": "Ivaniov",
            "middle_name": "Ivanovich",
            "status": {
              "value": "Open",
              "key": "OPEN",
              "description": "Открыт"
            },
            "position": "Cool Seller",
            "birth_date": "1991-06-06T12:01:10.000000Z",
            "education_level": {
              "value": "Bachelor",
              "key": "BACHELOR",
              "description": "Bachelor's or equivalent"
            },
            "marital_status": {
              "value": "Married",
              "key": "MARRIED",
              "description": "Замужем\/Жунат"
            },
            "residence": "Russia",
            "phone": "+79876757788",
            "computer_level": {
              "value": 2,
              "key": "PROFESSIONAL",
              "description": "Профессиональный"
            },
            "has_auto": false,
            "qualities": "Proud and quick work",
            "additional_info": null
          },
          "meta": {
            "created_at": "2021-04-15T12:01:10.000000Z",
            "updated_at": "2021-04-15T12:01:10.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test\/candidates\/25"
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "candidates",
        		"attributes": {
        			"first_name": "Mihail",
        			"last_name": "Ivaniov",
        			"middle_name": "Ivanovich",
        			"position": "Cool Seller",
        			"birth_date": "1991-06-06",
        			"city_id": 15,
        			"status": "Open",
        			"education_level": "Bachelor",
        			"marital_status": "Married",
        			"residence": "Russia",
        			"phone": "+79876757788",
        			"computer_level": 2,
        			"has_auto": false,
        			"qualities": "Proud and quick work",
        			"photo": "60782ac2744828.77247299-1618488002",
        			"additional_information": "Here you can find additional information"
        		}
        	},
        	"included": [
        			{
        				"type": "educations",
        				"attributes": {
        					"org_name": "CHGU",
        					"end_date": "2009-09-01",
        					"department": "Economy",
        					"specialization": "World Economy",
        					"study_type": "ochnaya",
        					"is_primary": true,
        					"study_theme": "economy",
        					"file": "60782ad5cd7717.23737182-1618488021"
        				}
        			},
        			{
        				"type": "experiences",
        				"attributes": {
        					"date_start": "2020-05-06",
        					"date_end": "2020-09-08",
        					"position": "Manager",
        					"company": "Roga i kopyta",
        					"responsibilities": "Floor wash"
        				}
        			}
        		]
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_760f81d0b18d486d9f2879535f30edb0
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_bb53f4a3886d40efb14168dcaf7d851b
    authentication: {}
    metaSortKey: -1614771673743
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_842138e05b4e42a1a0041664f71b599e
    parentId: fld_a47183278ee341a2b606cdf60ade8a89
    modified: 1629971469012
    created: 1629971469012
    url: "{{ _.BASE_URL }}/resume/file"
    name: Send resume with file
    description: Отправляем резюме с кратким описанием кандидата. Стоит иметь в
      виду, что в отправляемых аттрибутах, в поле cv мы передаём id файла,
      который предварительно следует загрузить в систему. Получаем статус 200 и
      объект кандидата
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "candidates",
        		"attributes": {
        			"first_name": "Sergey",
        			"last_name": "Borisov",
        			"middle_name": "Leonidovich",
        			"status": "Open",
        			"position": "Rieltor",
        			"cv": "6076bb1a1a36e0.98760078-1618393882"
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_74cef03d5d9746eabed9384d5ff51490
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_475b26518b01485cbe9af2102e0c07be
    authentication: {}
    metaSortKey: -1614771386319
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c226aefbf2f04921805ffbf84f2ab7d7
    parentId: fld_a47183278ee341a2b606cdf60ade8a89
    modified: 1629971469011
    created: 1629971469011
    url: "{{ _.BASE_URL }}/vacancies/1"
    name: Get vacancy by id
    description: >-
      Получаем информацию по вакансии, передавая её id. 


      Доступные аттрибуты:

      * title - Заголовок вакансии

      * description - html-описание вакансии

      * salary - ожидаемый уровень зарплаты. Объект денег.

      * salary_type - тип зарплаты. Возможные значения: from, to, exact

      * is_need_experience - требуется опыт работы или нет.

      * is_active - набор продолжается или нет

      * slug - utl-адрес вакансии


      Exmple reponse:

      ```json

      {
        "data": {
          "type": "vacancies",
          "id": "1",
          "attributes": {
            "title": "Prof.",
            "description": "Aut placeat magni asperiores. Adipisci dicta voluptas debitis qui ut. Voluptatum quisquam assumenda non debitis et.",
            "salary": {
              "amount": 95654,
              "value": 956.54,
              "currency": "₽"
            },
            "salary_type": {
              "value": "to",
              "key": "TO",
              "description": "До"
            },
            "is_need_experience": false,
            "is_active": true,
            "slug": "aspernatur-eos-aliquid-sit-molestias-occaecati-ipsa-non"
          },
          "meta": {
            "created_at": "2021-04-02T07:14:17.000000Z",
            "updated_at": "2021-04-02T07:14:17.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/vacancies\/1"
          },
          "relationships": {
            "candidates": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/vacancies\/1\/relationships\/candidates",
                "related": "http:\/\/tsnnedv.test:8000\/vacancies\/1\/candidates"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_f282bbbd3f8343f7a9faf421dc2faf55
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_6f2a81cd1bba4fc09baa3d1fcb04604d
    authentication: {}
    metaSortKey: -1614771114945
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f91e072a9cc8402a8bb193bc88fb09f2
    parentId: fld_a47183278ee341a2b606cdf60ade8a89
    modified: 1629971469009
    created: 1629971469009
    url: "{{ _.BASE_URL }}/vacancies"
    name: Get all vacancies
    description: >-
      Получаем список вакансий


      Доступные аттрибуты:

      * title - Заголовок вакансии

      * description - html-описание вакансии

      * salary - ожидаемый уровень зарплаты. Объект денег.

      * salary_type - тип зарплаты. Возможные значения: from, to, exact

      * is_need_experience - требуется опыт работы или нет.

      * is_active - набор продолжается или нет

      * slug - utl-адрес вакансии


      Доступные фильтры (?filter[salary_type]=to):

      * salary_type


      Example response:

      ```json

      {
        "data": [
          {
            "type": "vacancies",
            "id": "1",
            "attributes": {
              "title": "Prof.",
              "description": "Aut placeat magni asperiores. Adipisci dicta voluptas debitis qui ut. Voluptatum quisquam assumenda non debitis et.",
              "salary": {
                "amount": 95654,
                "value": 956.54,
                "currency": "₽"
              },
              "salary_type": {
                "value": "to",
                "key": "TO",
                "description": "До"
              },
              "is_need_experience": false,
              "is_active": true,
              "slug": "aspernatur-eos-aliquid-sit-molestias-occaecati-ipsa-non"
            },
            "meta": {
              "created_at": "2021-04-02T07:14:17.000000Z",
              "updated_at": "2021-04-02T07:14:17.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/vacancies\/1"
            },
            "relationships": {
              "candidates": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/vacancies\/1\/relationships\/candidates",
                  "related": "http:\/\/tsnnedv.test:8000\/vacancies\/1\/candidates"
                }
              }
            }
          },
          {
            "type": "vacancies",
            "id": "2",
            "attributes": {
              "title": "Prof.",
              "description": "Nobis libero sunt qui et odio ipsa. Vel dolores voluptatum rerum et exercitationem. Architecto et velit facere.",
              "salary": {
                "amount": 19958,
                "value": 199.58,
                "currency": "₽"
              },
              "salary_type": {
                "value": "exact",
                "key": "EXACT",
                "description": "Равно"
              },
              "is_need_experience": false,
              "is_active": true,
              "slug": "nesciunt-fuga-consequatur-aut-nam-et"
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/vacancies\/2"
            },
            "relationships": {
              "candidates": {
                "links": {
                  "self": "http:\/\/tsnnedv.test:8000\/vacancies\/2\/relationships\/candidates",
                  "related": "http:\/\/tsnnedv.test:8000\/vacancies\/2\/candidates"
                }
              }
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/vacancies?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/vacancies?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/vacancies?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_e2a935738c044aa79938e5b222d35b1a
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_8dc5becff86c49a29b26d8ce6862c35c
    authentication: {}
    metaSortKey: -1614770420210
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c23f20c47a4646d6adda5baa2c84d376
    parentId: fld_d3ecc49978dc4abd831dc4c06be0926f
    modified: 1629971469007
    created: 1629971469007
    url: "{{ _.BASE_URL }}/notifications"
    name: Create notification
    description: >-
      Here you can create custom notification. Returns status 201 with following
      content:


      ```json

      {
        "data": {
          "id": "3",
          "type": "notifications",
          "attributes": {
            "title": "Администратор передаёт вам привет!",
            "description": "Приветствуем тебя и поздравляем с чем-то!",
            "link": "http://localhost/news/3",
            "type": "Custom",
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00",      
            "read_at": null
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "notifications",
        		"attributes": {
        			"title": "Администратор передаёт вам привет!",
        			"description": "Приветствуем тебя и поздравляем с чем-то!",
        			"link": "http://localhost/news/3",
        			"type": "Custom"
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_38c549734bcd4c679157afe29d72cb13
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_2f80de4122e54261b5d5c828f2a00d16
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614764697531
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_d3ecc49978dc4abd831dc4c06be0926f
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971468999
    created: 1629971468999
    name: Notifications
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614763391664
    _type: request_group
  - _id: req_3e6f7ee3f9824b389db586ee253a30b9
    parentId: fld_d3ecc49978dc4abd831dc4c06be0926f
    modified: 1629971469006
    created: 1629971469006
    url: "{{ _.BASE_URL }}/notifications/2"
    name: Delete notification
    description: You can remove notification by ID. Returns no content with status 204
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_3af2ad0aaef34a6b895bfd1b8489401b
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_05ad574f3a054237a95d9f5f236c4bf6
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614764608969
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a7ac1abad7e3491992ce19b1214a1ed3
    parentId: fld_d3ecc49978dc4abd831dc4c06be0926f
    modified: 1629971469003
    created: 1629971469003
    url: "{{ _.BASE_URL }}/notifications/2/read"
    name: Read notification
    description: Here we can mark current notification ass read. Return no content
      with status 202
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_1634bbf0142f479795bb9c109518710d
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_5e07fea9c63641148cb4493aa50f7202
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614764334344
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_26bc5efa8aeb4794984373174545f766
    parentId: fld_d3ecc49978dc4abd831dc4c06be0926f
    modified: 1629971469004
    created: 1629971469004
    url: "{{ _.BASE_URL }}/notifications/2/read"
    name: Unread notification
    description: Here we can mark current notification as unread. Return no content
      with status 202
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_1634bbf0142f479795bb9c109518710d
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_5e07fea9c63641148cb4493aa50f7202
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614763870854.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_d1b5967e947a411699289982f5174444
    parentId: fld_d3ecc49978dc4abd831dc4c06be0926f
    modified: 1629971469000
    created: 1629971469000
    url: "{{ _.BASE_URL }}/notifications/unread"
    name: Get notifications of current user
    description: >-
      Receiving list of unread notifications. We can not apply read_at filter,
      because it is virtual field. Example response:


      ```json

      {
        "data": [
          {
            "type": "notifications",
            "id": "2",
            "attributes": {
              "title": "Вы получили новое сообщение",
              "description": "Проверьте ваш почтовый ящик",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00",
              "link": "http://localhost/messages/2",
              "type": "Messages",
              "read_at": null
            },
            "links": {
              "self": "http://localhost/api/v1/notifications/2"
            }
          }
        ],
        "links": {
          "first": "http://127.0.0.1/api/v1/notifications?page=1",
          "last":  "http://127.0.0.1/api/v1/notifications?page=5",
          "prev": null,
          "next": "http://127.0.0.1/api/v1/notifications?page=2",
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4109ae5d83234a078d182b4b22da2d20
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_192d4b3408284fa683d05bd42f12d7af
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614763407365
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_5d74cefc52314e23a9cc42bff1fc43a1
    parentId: fld_d3ecc49978dc4abd831dc4c06be0926f
    modified: 1629971469001
    created: 1629971469001
    url: "{{ _.BASE_URL }}/notifications?sort=created_at"
    name: Get unread notifications
    description: >-
      Get list of all notifications. Note, that we get notifications only
      currently authentificated user. You can also apply inrequest sort
      functionality. Example response:


      ```json

      {
        "data": [
          {
            "type": "notifications",
            "id": "1",
            "attributes": {
              "title": "Ваше объявление одобрено!",
              "description": "Ваше объявление прошло модерацию. Поздравляем!",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00",
              "link": "http://localhost/immovables/2",
              "type": "Automatic",
              "is_seen": "2020-05-25"
            },
            "links": {
              "self": "http://localhost/api/v1/notifications/1"
            }
          },
          {
            "type": "notifications",
            "id": "2",
            "attributes": {
              "title": "Вы получили новое сообщение",
              "description": "Проверьте ваш почтовый ящик",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00",
              "link": "http://localhost/messages/2",
              "type": "Messages",
              "is_seen": null
            },
            "links": {
              "self": "http://localhost/api/v1/notifications/2"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4109ae5d83234a078d182b4b22da2d20
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_192d4b3408284fa683d05bd42f12d7af
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614763159559
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_904a916231004693a6fe1df975224d02
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468996
    created: 1629971468996
    url: "{{ _.BASE_URL }}/me"
    name: Delete my profile
    description: Here wecan delete profile of currently authorized user. In response
      we get a no content with status code 204
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_d77b62b8facf45038c56778b9985dd28
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_26608d211c3c447b9dfc0d80bb9db646
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614762911753
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_221ce48296ad4f61af1c726935525ec2
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971468982
    created: 1629971468982
    name: Users and Roles
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614757780694
    _type: request_group
  - _id: req_91cccf922ecc4b1e97ec392f0dbd0a25
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468994
    created: 1629971468994
    url: "{{ _.BASE_URL }}/users"
    name: Create user
    description: >-
      Here you can create a new user. When creating a resource you can also
      define a relationship. Here you can see how we can attach roles to new
      user. We give a resource identifier object through the data member and the
      server will take care of the rest.


      ```json

      {
        "data": {
          "type": "users",
          "id": "2",
          "attributes": {
            "name": "New User",
            "email": "new_user@email.com",
            "phone": "+79876757777",
            "first_name": "Sergey",
            "last_name": "Emelyanov",
            "profile_image": "https://localhost/uploads/users/profile-image/image.jpeg",
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00"
          },
          "relationships": {
            "roles": {
              "links": {
                "self": "http://localhost/api/v1/users/2/relationships/roles",
                "related": "http://localhost/api/v1/users/2/roles"
              }
            }
          },
          "links": {
            "self": "http://localhost/api/v1/users/2"
          }
        }
      }

      ```
    method: POST
    body:
      mimeType: application/json
      text: >-
        {
        	"data": {
        		"type": "users",
        		"attributes": {
        			"name": "New User",
        			"email": "new_user@email.com",
        			"profile_image": "https://laravel-json-api-v2.test/uploads/users/profile-image/image.jpeg",
        			"password": "some_password",
        			"password_confirmation": "some_password",
        			"phone": "+79876757777",
        			"first_name": "Sergey",
        			"last_name": "Emelyanov"
        		},
        		"relationships": {
        			"roles": {
        				"data": [
        					{
        						"id": "1",
        						"type": "roles"
        					}
        				]
        			}
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_83f15930634048739d9e950bae66cdcd
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_fa7a33082df842aa84bd61ef5d875f72
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614762502073
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_03a8f0ab62a7467bbd95d86b50f421e2
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468993
    created: 1629971468993
    url: "{{ _.BASE_URL }}/users/1"
    name: Show user information
    description: >-
      Получаем информацию о пользователе по его ID.


      Следует учесть, что у авторизированного пользователя должны быть права на просмотр данных о пользователе


      Доступные связи (?include=roles):

      * roles


      Example response:

      ```json

      {
        "data": {
          "type": "users",
          "id": "1",
          "attributes": {
            "name": null,
            "email": "admin@admin.com",
            "phone": "+79876758889",
            "first_name": "Sergey",
            "last_name": "Emelyanov",
            "middle_name": "Petrovich",
            "birth_date": "1986-07-01",
            "avatar": {
              "id": 366,
              "url": "http:\/\/tsnnedv.test:8000\/storage\/366\/2021-05-23_18-05.png",
              "size": 17058,
              "mime_type": "image\/png",
              "responsive": []
            }
          },
          "meta": {
            "created_at": "2021-05-24T12:24:37.000000Z",
            "updated_at": "2021-05-31T12:24:11.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/users\/1"
          },
          "relationships": {
            "roles.permissions": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/users\/1\/relationships\/roles.permissions",
                "related": "http:\/\/tsnnedv.test:8000\/users\/1\/roles.permissions"
              }
            },
            "roles": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/users\/1\/relationships\/roles",
                "related": "http:\/\/tsnnedv.test:8000\/users\/1\/roles"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_8439a4658aa24919a5aa2eb300e2ec9e
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_b4713c823a694fab81048d26c50db163
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614761888823
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_078ab42c61bf4e31b2df1d13b035553e
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468991
    created: 1629971468991
    url: "{{ _.BASE_URL
      }}/users?page[number]=1&include=roles&sort=-roles.name&page[size]=5"
    name: List of users
    description: >-
      Here you can get list of all users. In example request you see following
      params:

      * include - Incudes the specified relations in the requested collection. Possible values: roles, roles.permissions.

      * sort - Sorts the resource collection by the specified value. Possible values are: name, email, roles, created_at. All values can be appended with either + or - to specify the sorting order.

      * page[size]5


      ```json

      {
        "data": [
          {
            "type": "users",
            "id": "1tsdtgf-rsfdh-rysfg",
            "attributes": {
              "name": "User Name",
              "email": "user@email.com",
              "phone": "+79876757777",
              "first_name": "Sergey",
              "last_name": "Borisov",
              "middle_name": "Leonidovich",
              "birth_date": "1986-07-01",
              "crmid": 53423,
              "profile_image": "http://localhost/uploads/users/profile-image/image.jpeg",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "roles": {
                "links": {
                  "self": "http://laravel-json-api-v2.test/api/v1/users/1/relationships/roles",
                  "related": "http://laravel-json-api-v2.test/api/v1/users/1/roles"
                }
              }
            },
            "links": {
              "self": "http://laravel-json-api-v2.test/api/v1/users/1"
            }
          }
        ],
          "links": {
          "first": "http://127.0.0.1/api/v1/users?page=1",
          "last":  "http://127.0.0.1/api/v1/users?page=5",
          "prev": null,
          "next": "http://127.0.0.1/api/v1/users?page=2",
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_81db54869ce5476bac432f8d83c5512e
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_530411b6dca64de3a25bbbb8973dcc5d
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614761363509
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ad6add4513864d3da0deb26f503161f6
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468990
    created: 1629971468990
    url: "{{ _.BASE_URL }}/me"
    name: Update profile
    description: |-
      Обновляем информацию о текущем авторизованном пользователе

      Для обновления паролья необходимо передать текущий пароль

      В ответ получаем статус 202 и обновлённый объект профиля
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
        	"data": {
        		"type": "users",
        		"id": "1",
        		"attributes": {
        			"password": "password2",
        			"password_new": "password",
        			"password_new_confirmation": "password",
        			"first_name": "Sergey",
        			"last_name": "Emelyanov",
        			"middle_name": "Petrovich",
        			"birth_date": "1986-07-01"
        		}
        	}
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/vnd.api+json
        id: pair_79b878fd325c48f2b8ed5f70a73452ff
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_28ea6ea07a6e4f44a4a139352b3460c4
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614760812932
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0bf0e38cb6ab4f028596211cd69f669a
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1649253754472
    created: 1629971468988
    url: "{{ _.BASE_URL }}/me"
    name: Get profile info
    description: >-
      Получаем данные по авторизованному пользователю.


      Доступные аттрибуты:

      * name - имя пользователя

      * email - адрес электронной почты

      * phone - номер телефона

      * first_name - имя

      * last_name - фамилия

      * middle_name - отчество

      * birth_date - дата рождения

      * avatar - привязанная картинка


      ```json

      {
        "data": {
          "type": "users",
          "id": "1",
          "attributes": {
            "name": null,
            "email": "admin@admin.com",
            "phone": "+79876758889",
            "first_name": "Sergey",
            "last_name": "Emelyanov",
            "middle_name": "Petrovich",
            "birth_date": "1986-07-01",
            "avatar": {
              "id": 366,
              "url": "http:\/\/tsnnedv.test:8000\/storage\/366\/2021-05-23_18-05.png",
              "size": 17058,
              "mime_type": "image\/png",
              "responsive": []
            }
          },
          "meta": {
            "created_at": "2021-05-24T12:24:37.000000Z",
            "updated_at": "2021-05-24T12:30:33.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/users\/1"
          },
          "relationships": {
            "roles.permissions": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/users\/1\/relationships\/roles.permissions",
                "related": "http:\/\/tsnnedv.test:8000\/users\/1\/roles.permissions"
              }
            },
            "roles": {
              "links": {
                "self": "http:\/\/tsnnedv.test:8000\/users\/1\/relationships\/roles",
                "related": "http:\/\/tsnnedv.test:8000\/users\/1\/roles"
              }
            }
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_183775f9c7b3413daf3bd9a50eb3a566
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_9764d167828d4af89c8e186d6f871f20
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614759271084
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e91e3732193a4a80b7378bad206987fd
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468986
    created: 1629971468986
    url: "{{ _.BASE_URL }}/permissions"
    name: List of all permissions
    description: >-
      Список прав доступа в систему.


      Example response:

      ```json

      {
        "data": [
          {
            "type": "permissions",
            "id": "1",
            "attributes": {
              "name": "view_users",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "roles": {
                "links": {
                  "self": "http://localhost/api/v1/permissions/1/relationships/roles",
                  "related": "http://localhost/api/v1/permissions/1/roles"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/permissions/1"
            }
          },
          {
            "type": "permissions",
            "id": "2",
            "attributes": {
              "name": "create_users",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "roles": {
                "links": {
                  "self": "http://localhost/api/v1/permissions/2/relationships/roles",
                  "related": "http://localhost/api/v1/permissions/2/roles"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/permissions/2"
            }
          },
          {
            "type": "permissions",
            "id": "3",
            "attributes": {
              "name": "edit_users",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "roles": {
                "links": {
                  "self": "http://localhost/api/v1/permissions/3/relationships/roles",
                  "related": "http://localhost/api/v1/permissions/3/roles"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/permissions/3"
            }
          },
          {
            "type": "permissions",
            "id": "4",
            "attributes": {
              "name": "delete_users",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "roles": {
                "links": {
                  "self": "http://localhost/api/v1/permissions/4/relationships/roles",
                  "related": "http://localhost/api/v1/permissions/4/roles"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/permissions/4"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_ef515112fd9a4b86a5d970fd5fbb39f9
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_0cdcaa5526d8484eb163e715537a5a4b
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614758894188
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_264d3531da7e4bdc8035e3fac362a93a
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468985
    created: 1629971468985
    url: "{{ _.BASE_URL }}/roles"
    name: List of all roles
    description: >-
      Получаем все доступные роли. Доступ только авторизованным пользователям.


      You will get following response:

      ```json

      {
        "data": [
          {
            "type": "roles",
            "id": "1",
            "attributes": {
              "name": "admin",
              "display_name": "Administrator",
              "description": "Администратор",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "permissions": {
                "links": {
                  "self": "http://localhost/api/v1/roles/1/relationships/permissions",
                  "related": "http://localhost/api/v1/roles/1/permissions"
                }
              },
              "users": {
                "links": {
                  "self": "http://localhost/api/v1/roles/1/relationships/users",
                  "related": "http://localhost/api/v1/roles/1/users"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/roles/1"
            }
          },
          {
            "type": "roles",
            "id": "2",
            "attributes": {
              "name": "buyer",
              "display_name": "Buyer",
              "description": "Покупатель",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "permissions": {
                "links": {
                  "self": "http://localhost/api/v1/roles/2/relationships/permissions",
                  "related": "http://localhost/api/v1/roles/2/permissions"
                }
              },
              "users": {
                "links": {
                  "self": "http://localhost/api/v1/roles/2/relationships/users",
                  "related": "http://localhost/api/v1/roles/2/users"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/roles/2"
            }
          },
          {
            "type": "roles",
            "id": "3",
            "attributes": {
              "name": "seller",
              "display_name": "Seller",
              "description": "Продавец",
              "created_at": "2020-01-01 00:00:00",
              "updated_at": "2020-01-01 00:00:00"
            },
            "relationships": {
              "permissions": {
                "links": {
                  "self": "http://localhost/api/v1/roles/3/relationships/permissions",
                  "related": "http://localhost/api/v1/roles/3/permissions"
                }
              },
              "users": {
                "links": {
                  "self": "http://localhost/api/v1/roles/3/relationships/users",
                  "related": "http://localhost/api/v1/roles/3/users"
                }
              }
            },
            "links": {
              "self": "http://localhost/api/v1/roles/3"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_60abb627a2114bfe9e855c6ea6176827
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_9998291231d04223a7fcc29f963940a6
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614758615019
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ed9802dc78bf4efe8410d79d8b4878bc
    parentId: fld_221ce48296ad4f61af1c726935525ec2
    modified: 1629971468983
    created: 1629971468983
    url: "{{ _.BASE_URL }}/roles/1?include=permissions"
    name: Get role by id
    description: >-
      Получаем информацию о роли по её идентификатору


      Также есть возможность получить привязанные к роли права доступа - ?include=permissions


      Пример ответа по роли администратора:


      ```json

      {
        "data": {
          "type": "roles",
          "id": "1",
          "attributes": {
            "name": "admin",
            "display_name": "Administrator",
            "description": "Администратор",
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00"
          },
          "relationships": {
            "permissions": {
              "links": {
                "self": "http://localhost/api/v1/roles/1/relationships/permissions",
                "related": "http://localhost/api/v1/roles/1/permissions"
              }
            },
            "users": {
              "links": {
                "self": "http://localhost/api/v1/roles/1/relationships/users",
                "related": "http://localhost/api/v1/roles/1/users"
              }
            }
          },
          "links": {
            "self": "http://localhost/api/v1/roles/1"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_a093cb3c4b8149cc82c67049f9b864e8
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_e8ce5ca94b4b4a06a3c0374133aaa2a5
    authentication:
      type: bearer
      token: "{{ _.BEARER_TOKEN }}"
    metaSortKey: -1614757856510
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_150439cbfe764906b0d63631681a935c
    parentId: fld_ff983d296255436d9fa2e15f8a3ac3c6
    modified: 1629971468979
    created: 1629971468979
    url: "{{ _.BASE_URL }}/settings/date_format"
    name: Get setting value by key
    description: |-
      Получаем данные по определённой настройке по ключу

      ```json
      {
        "data": {
          "type": "settings",
          "id": "1",
          "attributes": {
            "name": "date_format",
            "value": "Y-m-d",      
            "created_at": "2020-01-01 00:00:00",
            "updated_at": "2020-01-01 00:00:00"
          },
          "links": {
            "self": "http://localhost/api/v1/settings/date_format"
          }
        }
      }
      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_63284a3952604abf9cdd86b074a4915b
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_c73780283d514a8892544c70a57e6cee
    authentication: {}
    metaSortKey: -1614756329189
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_ff983d296255436d9fa2e15f8a3ac3c6
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971468977
    created: 1629971468977
    name: Settings
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614756015075
    _type: request_group
  - _id: req_ad5de31c57f64acda3b03eaad40a7d7b
    parentId: fld_ff983d296255436d9fa2e15f8a3ac3c6
    modified: 1629971468978
    created: 1629971468978
    url: "{{ _.BASE_URL }}/settings"
    name: List of all settings
    description: >-
      Данный роут предназначен для получения списка всех настроек. Они могут
      пригодиться для хранения глобальных параметров портала.


      Пример ответа:


      ```json

      {
        "data": [
          {
            "type": "settings",
            "id": "1",
            "attributes": {
              "name": "paginate",
              "value": "20",        
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },      
            "links": {
              "self": "http://laravel-json-api-v2.test/api/v1/settings/paginate"
            }
          },
          {
            "type": "settings",
            "id": "2",
            "attributes": {
              "name": "date_format",
              "value": "Y-m-d",        
              "created_at": "2020-06-04 13:16:28",
              "updated_at": "2020-06-04 13:16:28"
            },      
            "links": {
              "self": "http://laravel-json-api-v2.test/api/v1/settings/date_format"
            }
          }
        ]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_c477bff70b09468e8a056e7df829c575
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_6250b31984c8457a8b3aea441fed3c79
    authentication: {}
    metaSortKey: -1614756033680
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_8b0407cf718c464ea1eebf960ab53304
    parentId: fld_70a7ff91508c4ee2a79772cb272f6bb1
    modified: 1649841382573
    created: 1629971468975
    url: "{{ _.BASE_URL }}/posts/415"
    name: Get post by ID
    description: >-
      Получаем полную информацию по посту по его ID


      Доступные поля:

      * slug - url-адрес поста

      * title - заголовок поста

      * description - описание поста

      * category - текущая категория поста

      * media - прикреплённое изображение


      As a result we get following response:


      ```json

      {
        "data": {
          "type": "posts",
          "id": "3",
          "attributes": {
            "slug": "quisquam-voluptas-eos-optio",
            "title": "Dr.",
            "description": "Voluptas beatae cupiditate eius maxime rerum illum architecto. Est vero incidunt distinctio. Sed consequatur placeat quo porro hic debitis aut. Repudiandae placeat et fuga saepe nisi qui maxime.",
            "category": {
              "value": "News",
              "key": "NEWS",
              "description": "Новости"
            },
            "media": {
              "id": 3,
              "url": "http:\/\/tsnnedv.test:8000\/storage\/3\/3.jpg",
              "size": 449276,
              "mime_type": "image\/jpeg",
              "responsive": []
            }
          },
          "meta": {
            "created_at": "2021-04-02T07:14:18.000000Z",
            "updated_at": "2021-04-02T07:14:18.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/posts\/3"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_17b7e784ea7241eaa8f9d3874467e416
        name: include
        value: page
        description: ""
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_f8698fe431584f7a852e779bcba00b1f
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_273bc1d507514911af43e42152d52b76
    authentication: {}
    metaSortKey: -1614754896611
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_70a7ff91508c4ee2a79772cb272f6bb1
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971468969
    created: 1629971468969
    name: Posts
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614753391804
    _type: request_group
  - _id: req_691ae477bb644e4b99ebf4469fd4d804
    parentId: fld_70a7ff91508c4ee2a79772cb272f6bb1
    modified: 1629971468970
    created: 1629971468970
    url: "{{ _.BASE_URL }}/posts"
    name: List of all posts
    description: >-
      Здесь хранятся все посты. К постам относятся новости, статьи в блоге или
      прочая статейная информация. Посты делятся по категориям. Доступные
      категории:

      * News - новости

      * Blog - статья в блоге

      * Sale - распродажа

      * Ad - реклама

      * Articles - прочие статьи


      Доступные поля:

      * slug - url-адрес поста

      * title - заголовок поста

      * description - описание поста

      * category - текущая категория поста

      * media - прикреплённое изображение


      Доступная сортировка:

      * title

      * updated_at

      * created_at


      Доступные фильтры:

      * category


      So as a result of getting all posts you receive following result:

      ```json

      {
        "data": [
          {
            "type": "posts",
            "id": "1",
            "attributes": {
              "slug": "quod-debitis-possimus-iusto-et-voluptas-sit-vitae-aliquam",
              "title": "Mrs.",
              "description": "Ad laudantium quibusdam laboriosam quia. Molestiae recusandae quo ipsum. Inventore possimus nihil earum omnis deserunt. Explicabo rerum repellat ipsam autem.",
              "category": {
                "value": "Articles",
                "key": "ARTICLES",
                "description": "Статьи"
              },
              "media": {
                "id": 1,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/1\/3.jpg",
                "size": 449276,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/1"
            }
          },
          {
            "type": "posts",
            "id": "2",
            "attributes": {
              "slug": "ipsum-id-repellat-libero-odit-ea-ipsa-consequatur",
              "title": "Miss",
              "description": "Eligendi aut ducimus culpa nisi. At alias quidem nostrum ut quo quam. Ut dolor eligendi consequatur sunt laboriosam. Qui amet ullam velit.",
              "category": {
                "value": "Articles",
                "key": "ARTICLES",
                "description": "Статьи"
              },
              "media": {
                "id": 2,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/2\/1.jpg",
                "size": 410584,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/2"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4953cc39685c4776b0a3e0658db4c769
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_ed95f0dfc769457abcd477eb6a885edd
    authentication: {}
    metaSortKey: -1614753435041
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_38720d31c3e94f86a505af466fb5ada7
    parentId: fld_70a7ff91508c4ee2a79772cb272f6bb1
    modified: 1629971468972
    created: 1629971468972
    url: "{{ _.BASE_URL }}/posts?filter[category]=Articles"
    name: List of all news
    description: >-
      Пример использования фильтрации в постах. Здесь мы получаем все новости.
      Т.е. в посты передаём фильтр по категории News.


      ```json

      {
        "data": [
          {
            "type": "posts",
            "id": "1",
            "attributes": {
              "slug": "quod-debitis-possimus-iusto-et-voluptas-sit-vitae-aliquam",
              "title": "Mrs.",
              "description": "Ad laudantium quibusdam laboriosam quia. Molestiae recusandae quo ipsum. Inventore possimus nihil earum omnis deserunt. Explicabo rerum repellat ipsam autem.",
              "category": {
                "value": "Articles",
                "key": "ARTICLES",
                "description": "Статьи"
              },
              "media": {
                "id": 1,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/1\/3.jpg",
                "size": 449276,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/1"
            }
          },
          {
            "type": "posts",
            "id": "2",
            "attributes": {
              "slug": "ipsum-id-repellat-libero-odit-ea-ipsa-consequatur",
              "title": "Miss",
              "description": "Eligendi aut ducimus culpa nisi. At alias quidem nostrum ut quo quam. Ut dolor eligendi consequatur sunt laboriosam. Qui amet ullam velit.",
              "category": {
                "value": "Articles",
                "key": "ARTICLES",
                "description": "Статьи"
              },
              "media": {
                "id": 2,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/2\/1.jpg",
                "size": 410584,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/2"
            }
          },
          {
            "type": "posts",
            "id": "11",
            "attributes": {
              "slug": "sint-officiis-veniam-nihil",
              "title": "Dr.",
              "description": "Dolorem delectus veritatis quis. Omnis sit in tempore tempora aut sed qui. Molestiae qui sint odio natus.",
              "category": {
                "value": "Articles",
                "key": "ARTICLES",
                "description": "Статьи"
              },
              "media": {
                "id": 11,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/11\/2.jpg",
                "size": 313748,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/11"
            }
          },
          {
            "type": "posts",
            "id": "20",
            "attributes": {
              "slug": "sit-quia-occaecati-rerum",
              "title": "Dr.",
              "description": "Voluptatum ipsa omnis dolores cumque quos delectus. Nobis et eum qui qui delectus ipsum necessitatibus dolorum. Deserunt est aspernatur omnis facere totam harum.",
              "category": {
                "value": "Articles",
                "key": "ARTICLES",
                "description": "Статьи"
              },
              "media": {
                "id": 20,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/20\/3.jpg",
                "size": 449276,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/20"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 4,
            "count": 4,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?filter%5Bcategory%5D=Articles&page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?filter%5Bcategory%5D=Articles&page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?filter%5Bcategory%5D=Articles&page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4953cc39685c4776b0a3e0658db4c769
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_ed95f0dfc769457abcd477eb6a885edd
    authentication: {}
    metaSortKey: -1614723675303
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_769bfcb9f8ab48afb2457ab3878658a9
    parentId: fld_70a7ff91508c4ee2a79772cb272f6bb1
    modified: 1629971468973
    created: 1629971468973
    url: "{{ _.BASE_URL }}/posts?filter[category]=News&sort=-updated_at"
    name: Sort news by updated_at param
    description: >-
      Пример использования сортировки в постах. Здесь мы фильтруем посты по
      новостям и применяем сортировку по дате обновления


      ```json

      {
        "data": [
          {
            "type": "posts",
            "id": "3",
            "attributes": {
              "slug": "quisquam-voluptas-eos-optio",
              "title": "Dr.",
              "description": "Voluptas beatae cupiditate eius maxime rerum illum architecto. Est vero incidunt distinctio. Sed consequatur placeat quo porro hic debitis aut. Repudiandae placeat et fuga saepe nisi qui maxime.",
              "category": {
                "value": "News",
                "key": "NEWS",
                "description": "Новости"
              },
              "media": {
                "id": 3,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/3\/3.jpg",
                "size": 449276,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/3"
            }
          },
          {
            "type": "posts",
            "id": "4",
            "attributes": {
              "slug": "eaque-eveniet-consequuntur-minus-excepturi-sed-est",
              "title": "Mr.",
              "description": "Sed consequatur officiis facilis quis cupiditate a expedita. Non dolorum mollitia numquam. Omnis et sit aliquam doloremque illum.",
              "category": {
                "value": "News",
                "key": "NEWS",
                "description": "Новости"
              },
              "media": {
                "id": 4,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/4\/1.jpg",
                "size": 410584,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/4"
            }
          },
          {
            "type": "posts",
            "id": "12",
            "attributes": {
              "slug": "cumque-aut-numquam-nisi-eum",
              "title": "Prof.",
              "description": "Sequi consequatur corrupti est deserunt. Cum molestiae impedit delectus qui dolorem maxime reiciendis. At ipsam explicabo quia quis.",
              "category": {
                "value": "News",
                "key": "NEWS",
                "description": "Новости"
              },
              "media": {
                "id": 12,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/12\/1.jpg",
                "size": 410584,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "meta": {
              "created_at": "2021-04-02T07:14:18.000000Z",
              "updated_at": "2021-04-02T07:14:18.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/posts\/12"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 3,
            "count": 3,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?filter%5Bcategory%5D=News&sort=-updated_at&page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?filter%5Bcategory%5D=News&sort=-updated_at&page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/posts?filter%5Bcategory%5D=News&sort=-updated_at&page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_4953cc39685c4776b0a3e0658db4c769
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_ed95f0dfc769457abcd477eb6a885edd
    authentication: {}
    metaSortKey: -1614708795434
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e1c95f4f013f467c8f77c35a871a0f66
    parentId: fld_1762d9068c0440a292fbca3d39ae7739
    modified: 1648727362830
    created: 1648727328682
    url: "{{ _.BASE_URL }}/pages/2/posts"
    name: Get all posts attached to page
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - id: pair_d5c1a1cf3537422294cf610662a1e659
        name: Accept
        value: application/vnd.api+json
        description: ""
      - id: pair_5428fe907a8c40eb9e269161f1a5304f
        name: Content-Type
        value: application/vnd.api+json
        description: ""
    authentication: {}
    metaSortKey: -1648727328682
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_1762d9068c0440a292fbca3d39ae7739
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971468953
    created: 1629971468953
    name: Pages
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1614693356854
    _type: request_group
  - _id: req_ad06f97dd2c74028a7ce1f08108fae20
    parentId: fld_1762d9068c0440a292fbca3d39ae7739
    modified: 1630563263416
    created: 1629971468958
    url: "{{ _.BASE_URL }}/pages/7"
    name: Get page by ID
    description: >-
      Получаем страницу по её id. Страницы нам нужны для хранения контента
      блоков. Например, информация о компании. Т.е. тот или иной контент,
      который нужен для отображения на странице.


      Доступные поля:

      * slug - адрес страницы

      * title - заголовок страницы

      * description - сам контент страницы

      * route - путь страницы

      * media - привязанное изображение


      Пример ответа:

      ```json

      {
        "data": {
          "type": "pages",
          "id": "3",
          "attributes": {
            "slug": "sequi-aut-voluptatem-doloremque-unde-ipsum-incidunt-quaerat-quaerat",
            "title": "Dolorum eum odit inventore quas accusantium ipsum et quae.",
            "description": "Libero alias consequatur et ut cumque ducimus beatae. Eum similique rerum provident qui est. Sit blanditiis rerum earum quos.",
            "route": "Cecelia Langosh III",
            "media": {
              "id": 23,
              "url": "http:\/\/tsnnedv.test:8000\/storage\/23\/1.jpg",
              "size": 410584,
              "mime_type": "image\/jpeg",
              "responsive": []
            }
          },
          "meta": {
            "created_at": "2021-04-02T07:14:23.000000Z",
            "updated_at": "2021-04-02T07:14:23.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/pages\/3"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_75d04e0ec80840759d7b9d70a1e960a5
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_1c887572402647c480f9d4c6bc2bca1c
    authentication: {}
    metaSortKey: -1614693915565
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_fca51652daae43adadc9be4d4dbb1f79
    parentId: fld_1762d9068c0440a292fbca3d39ae7739
    modified: 1632747646669
    created: 1629971468966
    url: "{{ _.BASE_URL }}/seo-pages/5"
    name: Get seo page by ID
    description: >-
      Получаем список SEO страниц. SEO Страницы нам нужны для хранения
      мета-данных от отдела продвижения. Например, заголовки или ключевые слова.
      Т.е. тот или иной контент, который нужен для отображения мета-данных.


      Доступные поля:

      * link

      * request_link

      * title - Заголовок окна

      * h_1 - Заголовок страницы

      * description - описание


      Пример ответа:

      ```json

      {
        "data": {
          "type": "seo_pages",
          "id": "1",
          "attributes": {
            "link": "\/test\/ttt2",
            "request_link": "\/test?test=aa",
            "title": "Super test",
            "h_1": "This is test page",
            "description": "Super puper",
            "keywords": "yaya2"
          },
          "meta": {
            "created_at": "2021-08-12T10:23:00.000000Z",
            "updated_at": "2021-08-12T10:23:00.000000Z"
          },
          "links": {
            "self": "http:\/\/tsnnedv.test:8000\/seo_pages\/1"
          }
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_75d04e0ec80840759d7b9d70a1e960a5
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_1c887572402647c480f9d4c6bc2bca1c
    authentication: {}
    metaSortKey: -1614693679029
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e28221a01c2743f882515dcdf27f950a
    parentId: fld_1762d9068c0440a292fbca3d39ae7739
    modified: 1629971468956
    created: 1629971468956
    url: "{{ _.BASE_URL }}/pages"
    name: Get All Pages
    description: >-
      Получаем список страниц. Страницы нам нужны для хранения контента блоков.
      Например, информация о компании. Т.е. тот или иной контент, который нужен
      для отображения на странице.


      Доступные поля:

      * slug - адрес страницы

      * title - заголовок страницы

      * description - сам контент страницы

      * route - путь страницы

      * media - привязанное изображение


      Доступные поля для сортировки:

      * title

      * updated_at

      * created_at


      Доступные поля для фильтрации:

      * route


      Пример ответа:


      ```json

      {
        "data": [
          {
            "type": "pages",
            "id": "1",
            "attributes": {
              "slug": "veniam-quae-magni-hic-quo-voluptatem-maxime",
              "title": "Nemo consequuntur facere dolores omnis.",
              "description": "Sit eveniet accusamus maxime voluptates cupiditate. Est alias cum beatae dolorum non facilis voluptatem. Et vitae commodi velit in ducimus optio natus.",
              "route": "Aida Bergstrom",
              "media": {
                "id": 21,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/21\/2.jpg",
                "size": 313748,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/pages\/1"
            }
          },
          {
            "type": "pages",
            "id": "2",
            "attributes": {
              "slug": "qui-officia-nam-ea-non-corporis-omnis-pariatur",
              "title": "Ut fugiat dolores officiis nostrum dolore voluptate optio.",
              "description": "Aut velit fuga non excepturi explicabo mollitia. Atque quis fugiat blanditiis eaque. Unde quam rerum reprehenderit eligendi non aliquam.",
              "route": "Justice Bogisich",
              "media": {
                "id": 22,
                "url": "http:\/\/tsnnedv.test:8000\/storage\/22\/2.jpg",
                "size": 313748,
                "mime_type": "image\/jpeg",
                "responsive": []
              }
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/pages\/2"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 20,
            "count": 20,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/pages?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/pages?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/pages?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_6241d25149094c1f93a26c09d9f63923
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_acef1a16e4f54e20b3c97a1a98c5e1c2
    authentication: {}
    metaSortKey: -1614693442493
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0be562d035d54e10829729b51082daf7
    parentId: fld_1762d9068c0440a292fbca3d39ae7739
    modified: 1647971429501
    created: 1629971468963
    url: "{{ _.BASE_URL }}/seo-pages"
    name: Get All Seo Pages
    description: >-
      Получаем список SEO страниц. SEO Страницы нам нужны для хранения
      мета-данных от отдела продвижения. Например, заголовки или ключевые слова.
      Т.е. тот или иной контент, который нужен для отображения мета-данных.


      Доступные поля:

      * link

      * request_link

      * title - Заголовок окна

      * h_1 - Заголовок страницы

      * description - описание


      Пример ответа:


      ```json

      {
        "data": [
          {
            "type": "seo_pages",
            "id": "1",
            "attributes": {
              "link": "\/test\/ttt2",
              "request_link": "\/test?test=aa",
              "title": "Super test",
              "h_1": "This is test page",
              "description": "Super puper",
              "keywords": "yaya2"
            },
            "meta": {
              "created_at": "2021-08-12T10:23:00.000000Z",
              "updated_at": "2021-08-12T10:23:00.000000Z"
            },
            "links": {
              "self": "http:\/\/tsnnedv.test:8000\/seo_pages\/1"
            }
          }
        ],
        "meta": {
          "pagination": {
            "total": 1,
            "count": 1,
            "per_page": 20,
            "current_page": 1,
            "total_pages": 1
          }
        },
        "links": {
          "self": "http:\/\/tsnnedv.test:8000\/api\/v1\/seo-pages?page%5Bnumber%5D=1",
          "first": "http:\/\/tsnnedv.test:8000\/api\/v1\/seo-pages?page%5Bnumber%5D=1",
          "last": "http:\/\/tsnnedv.test:8000\/api\/v1\/seo-pages?page%5Bnumber%5D=1"
        }
      }

      ```
    method: GET
    body: {}
    parameters:
      - id: pair_d01bc96adb054ede89a8017c10e4a8c0
        name: include
        value: immovables
        description: ""
        disabled: true
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_6241d25149094c1f93a26c09d9f63923
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_acef1a16e4f54e20b3c97a1a98c5e1c2
    authentication: {}
    metaSortKey: -1614646342632.25
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_aee8c15090d74091bded381d0825217f
    parentId: fld_1762d9068c0440a292fbca3d39ae7739
    modified: 1629971468960
    created: 1629971468960
    url: "{{ _.BASE_URL }}/pages?filter[route]=welcome"
    name: Get pages for home page
    description: >-
      Пример использования фильтрации. Здесь мы получаем только страницы,
      относящиеся к пути welcome:

      ```json

      {
        "data": [{
          "type": "pages",
          "id": "1",
          "attributes": {
            "slug": "our-advantages",
            "title": "Наши преимущества",
            "description": "Это честность, открытость и стргость!",
            "images": [{
              "id": 2,
              "uuid": "4325tgtgerft-454rf",
              "collection_name": "default",
              "name": "dublin",
              "file_name": "dubl.jpg",
              "mime_type": "image/jpeg",
              "url": "http://localhost/dublon.jpg",
              "size": 34222
            }],
            "route": "welcome"
          },
          "links": {
              "self": "http://127.0.0.1/api/v1/pages/our-advantages"
          }
        }, {
          "type": "pages",
          "id": "2",
          "attributes": {
            "slug": "our-principles",
            "title": "Наши принципы",
            "description": "Свобода, равенство, братство!",
            "images": [
              {
              "id": 2,
              "uuid": "4325tgtgerft-454rf",
              "collection_name": "default",
              "name": "dublin",
              "file_name": "dubl.jpg",
              "mime_type": "image/jpeg",
              "url": "http://localhost/dublon.jpg",
              "size": 34222
            }
            ],
            "route": "welcome"
          },
          "links": {
              "self": "http://127.0.0.1/api/v1/pages/our-principles"
          }
        }]
      }

      ```
    method: GET
    body: {}
    parameters: []
    headers:
      - name: Accept
        value: application/vnd.api+json
        description: ""
        id: pair_6241d25149094c1f93a26c09d9f63923
      - name: Content-Type
        value: application/vnd.api+json
        description: ""
        id: pair_acef1a16e4f54e20b3c97a1a98c5e1c2
    authentication: {}
    metaSortKey: -1614599242771.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_98a3757fcdfc4a5ba41076cc9e8338ad
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971468925
    created: 1629971468925
    name: Base Environment
    data:
      BASE_URL: http://tsnnedv.test:8000/api/v1
      DEFAULT_HEADERS:
        Content-Type: application/vnd.api+json
        Accept: application/vnd.api+json
      client_id: "2"
      client_secret: 23432rrwer
      BEARER_TOKEN: 534trgsregfgs
      USERNAME: admin@admin.com
      PASSWORD: password
    dataPropertyOrder:
      "&":
        - BASE_URL
        - DEFAULT_HEADERS
        - client_id
        - client_secret
        - BEARER_TOKEN
        - USERNAME
        - PASSWORD
      "&~|DEFAULT_HEADERS":
        - Content-Type
        - Accept
    color: null
    isPrivate: false
    metaSortKey: 1614691297233
    _type: environment
  - _id: jar_27eb5e4c3cc04c7b8f964353a3b66d52
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1649500349964
    created: 1629971468942
    name: Default Jar
    cookies:
      - key: x-clockwork
        value: "%7B%22requestId%22%3A%221649500349-5020-2067812927%22%2C%22version%22%3\
          A%225.0.8%22%2C%22path%22%3A%22%5C%2F__clockwork%5C%2F%22%2C%22token%\
          22%3A%2273e65f51%22%2C%22metrics%22%3Atrue%2C%22toolbar%22%3Atrue%7D"
        expires: 2022-04-09T10:33:29.000Z
        maxAge: 60
        domain: tsnnedv.test
        path: /
        extensions:
          - samesite=lax
        hostOnly: true
        creation: 2021-04-13T12:37:08.383Z
        lastAccessed: 2022-04-09T10:32:29.955Z
        id: "8875314264615759"
      - key: botfinancemanager_session
        value: eyJpdiI6ImloTjdkN2Rybjh5Vy9TcExXcXhsL0E9PSIsInZhbHVlIjoiOFk4REhYTlRJWE5ZcExJbW50L3Zhd3FGdVU0dGd0TVVXc21vVnBpbWd6cFhML0cyeDFPVXhXaTh3dGgyYUNyck10MnV2bmJCSzN1b0xBSkNnYWdKM25xbUlIMmZQbmdmMmV6UGRvdmtJMDJ0MFlDdDFqSjZGOGZYcERjQTVpRjEiLCJtYWMiOiI2NzJmYjE3OGIyNGJmYzliODAyOWYwYTgxNDRjZmQ0NDY0NTNmODgyNzYyNDNmOWI1ODE1NDE4YTk2Yzg3MjVjIn0%3D
        expires: 2021-04-22T11:03:42.000Z
        maxAge: 7200
        domain: bot.sergeyem.ru
        path: /
        httpOnly: true
        extensions:
          - samesite=lax
        hostOnly: true
        creation: 2021-04-22T08:58:46.802Z
        lastAccessed: 2021-04-22T09:03:42.788Z
        id: "6866974274526834"
      - key: XSRF-TOKEN
        value: eyJpdiI6IkNOMDFySHgwQTVBYiszVGQ3eHRDS1E9PSIsInZhbHVlIjoiMWJRVmNKMUhUUk9pSGNwcGdXcUpWSVFwQUFOQVdsTmcxaVgra0ZYbnNPUE8zUlVMV0xSeDJTRlRZV251OU5TRjV4V0YvaXF1bkx1ZlNMRkFldnlTNTlUQXY2TFhnRTVpS3hwT2JVVDkvbWFDUzJJN2lXSUs0WWN4cTZDd3c4NmgiLCJtYWMiOiIxNDc2ODAxNWQ5NzI2NWZmOTgzZDM0ZmI2ZGViOWU5MmI4ODQ5M2Q3MWEyMjgxNTM0OTgyMGJiYTE5OWMyNjY3In0%3D
        expires: 2021-04-22T11:03:42.000Z
        maxAge: 7200
        domain: bot.sergeyem.ru
        path: /
        extensions:
          - samesite=lax
        hostOnly: true
        creation: 2021-04-22T09:00:03.373Z
        lastAccessed: 2021-04-22T09:03:42.787Z
        id: "25612104564633253"
      - key: __ddg1
        value: ugHeRmnesrxthQ0y3pwC
        expires: 2022-06-28T08:22:52.000Z
        domain: hh.ru
        path: /
        httpOnly: true
        hostOnly: false
        creation: 2021-06-28T08:22:53.044Z
        lastAccessed: 2021-06-28T08:22:53.044Z
        id: "05058585231205326"
      - key: _wss
        value: 60d98bd6
        expires: 2038-01-19T03:14:07.000Z
        maxAge: 522613801
        domain: superjob.ru
        path: /
        hostOnly: false
        creation: 2021-06-28T08:44:06.496Z
        lastAccessed: 2021-06-28T08:44:06.497Z
        id: "2417363452266239"
      - key: _ws
        value: 60d98bd6027463f80a0a019c44b401eb6dc3fa650360d98bd653c894c2eb5a42c7fde8a9fd2bd8e6b581408782
        expires: 2038-01-19T03:14:07.000Z
        maxAge: 522613801
        domain: superjob.ru
        path: /
        hostOnly: false
        creation: 2021-06-28T08:44:06.497Z
        lastAccessed: 2021-06-28T08:44:06.498Z
        id: "251025848706357"
      - key: x-clockwork
        value: "%7B%22requestId%22%3A%221648902847-4352-1283406189%22%2C%22version%22%3\
          A%225.0.8%22%2C%22path%22%3A%22%5C%2F__clockwork%5C%2F%22%2C%22token%\
          22%3A%228676467e%22%2C%22metrics%22%3Atrue%2C%22toolbar%22%3Atrue%7D"
        expires: 2022-04-02T12:35:07.000Z
        maxAge: 60
        domain: tsn.dev1.2new.ru
        path: /
        extensions:
          - samesite=lax
        hostOnly: true
        creation: 2021-08-03T08:19:26.179Z
        lastAccessed: 2022-04-02T12:34:07.495Z
        id: "7068538411207705"
      - key: qrator_ssid
        value: 1629103486.368.SzFkd59A6c0Irr2d-7s3jsi1h9ooev0rbvltrp0f0bqqtvd9c
        maxAge: 20000
        domain: domclick.ru
        path: /
        hostOnly: false
        creation: 2021-08-16T08:44:46.311Z
        lastAccessed: 2021-08-16T08:44:46.311Z
        id: "31641181079477776"
      - key: _CIAN_GK
        value: 53c7518d-d6e8-4915-9025-fc438601fae5
        expires: 2031-08-16T11:48:51.000Z
        maxAge: 315543600
        domain: cian.ru
        path: /
        secure: true
        extensions:
          - SameSite=None
        hostOnly: false
        creation: 2021-08-16T08:48:51.779Z
        lastAccessed: 2021-08-16T08:48:51.779Z
        id: "3251343624587075"
      - key: __cf_bm
        value: f3d98bcc5121fed71e1404d4f18166b851187bd0-1629103731-1800-AerAeD8l1fKtBhvEbGPh1TuJMKtqJq2LdQIeoCj5BkYWOsQr/KE8Aqa4RUQ6u62a+Cpn1QJChaLW5ZcHIXfbc6s=
        expires: 2021-08-16T09:18:51.000Z
        domain: cian.ru
        path: /
        secure: true
        httpOnly: true
        extensions:
          - SameSite=None
        hostOnly: false
        creation: 2021-08-16T08:48:51.780Z
        lastAccessed: 2021-08-16T08:48:51.780Z
        id: "542661969011023"
    _type: cookie_jar
  - _id: spc_39dd7d174d81417688ee92c4a545dd7b
    parentId: wrk_77bdaf2efb9c43dcb372bd55ecfe649a
    modified: 1629971469184
    created: 1629971468947
    fileName: tsnnedv-realty
    contents: ""
    contentType: yaml
    _type: api_spec
  - _id: env_a691764fbad64d028128821cdefd5645
    parentId: env_98a3757fcdfc4a5ba41076cc9e8338ad
    modified: 1629971468927
    created: 1629971468927
    name: Development Server
    data:
      BASE_URL: https://tsn.dev1.2new.ru/api/v1
      DEFAULT_HEADERS:
        Content-Type: application/vnd.api+json
        Accept: application/vnd.api+json
      client_id: "2"
      client_secret: VS989rgBdZOl0004OzfHy8pbfrPz7wMih6UufHTY
      BEARER_TOKEN: 534trgsregfgs
      USERNAME: admin@admin.com
      PASSWORD: password
      AUTH_URL: https://tsn.dev1.2new.ru
    dataPropertyOrder:
      "&":
        - BASE_URL
        - DEFAULT_HEADERS
        - client_id
        - client_secret
        - BEARER_TOKEN
        - USERNAME
        - PASSWORD
        - AUTH_URL
      "&~|DEFAULT_HEADERS":
        - Content-Type
        - Accept
    color: null
    isPrivate: false
    metaSortKey: 1617171595867
    _type: environment
  - _id: env_3110aa1f9ae64204a0ad22c7316e8483
    parentId: env_98a3757fcdfc4a5ba41076cc9e8338ad
    modified: 1649253343704
    created: 1629971468932
    name: Local server
    data:
      BASE_URL: http://tsnnedv.test:8000/api/v1
      DEFAULT_HEADERS:
        Content-Type: application/vnd.api+json
        Accept: application/vnd.api+json
      client_id: "2"
      client_secret: mPc97Bl0wssql6vZ1MOzM1FZHNra4EV42atwbbkE
      BEARER_TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiOTdiOWZkNmUzM2ZmNWY0NWRlY2Q0OGY1ZWJkOTczMDU0MDllZjY3Y2YyYzhjOWZhZjBhMDlhNTk0YmEzMmY2YmY5MmM0ZmY2M2ZhNTMwZDkiLCJpYXQiOjE2NDkyNTMzMzQuMDM3MTk2LCJuYmYiOjE2NDkyNTMzMzQuMDM3MTk5LCJleHAiOjE2ODA3ODkzMzQuMDE3NzY2LCJzdWIiOiIxIiwic2NvcGVzIjpbIioiXX0.b2pqIo0lsSZy-oQS9-76LBF5Js89rillx4_-EIzlqZ7nRV8IqmKtNU9IpwgtxOGb8z0NJUk5AYvgBlitDSwdLJD08ZF5pIF_nL-xDghaq8tsPHcOi9sXkmZoJZV-Brs-VuMjgLc_yMHUTlmDQReUyvqmVzz9ufczskX2jONt8srxx5dHlZ8m4DLcckVz7wM10EgviADcQI9-d2v0ROUPd_WWBX-yzOxKLagcuMlykP8Oii-YIeaBpfnqqKe897jAvpm2O87aJrvRwrHMRYFi7mebsVz2n9wuPs7OtufsEq21a53L-se_-LDfHnpuNUZykSpibVQbQ2Wt57bMfvfjspx0ZV_YhDWF8u2FtJ5OmaDO1BGz6UlpLrOHeLDYiyxgqFoFYx6ceT_VM0DXoVqiaQXi_IDsZKMzoTc8Ws82_9olulZFvDDxgHR5wcQt8MXxXPJgAcYEYozF-6yduveY-OOzlBkEW-5h5uXcLHCRxmoHaD5kPjojCvynPXpif3l3wF_ewSGKULTbSJQSlMgMw6WqscvxqB-PRff25Npu6my_O1U0qniJJT35AzBNAiToISeB51WrzPjt2Dg0mNb3IupOMAbG3HKSI6TFdmanHACLUTMqfni1g56Xv1ngM13tNJ75rIy2JJeO6yO_ubOGYjkS0YWBNvQiveqUw018ESE
      USERNAME: admin@admin.com
      PASSWORD: password2
      AUTH_URL: http://tsnnedv.test:8000
    dataPropertyOrder:
      "&":
        - BASE_URL
        - DEFAULT_HEADERS
        - client_id
        - client_secret
        - BEARER_TOKEN
        - USERNAME
        - PASSWORD
        - AUTH_URL
      "&~|DEFAULT_HEADERS":
        - Content-Type
        - Accept
    color: null
    isPrivate: false
    metaSortKey: 1617171684220
    _type: environment
